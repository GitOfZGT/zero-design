{"version":3,"sources":["webpack:///./src/zTool/httpAjax.js","webpack:///delegated ./node_modules/_lodash@4.17.11@lodash/merge.js from dll-reference _dll_vendor_e6c2b574651d25236c4b","webpack:///./src/mock/serviceDefaultConfigData.js","webpack:///./src/Api/config.api.js","webpack:///./src/Api/scheduling.api.js","webpack:///./src/Api/login.api.js","webpack:///./src/Api sync \\.api.js$","webpack:///./src/App.api.js","webpack:///./src/Api/area.api.js","webpack:///./src/views/Main/Config/ServiceWithTableList/ServiceTab.jsx","webpack:///./src/views/Main/Config/ServiceWithTableList/getEditPage.js","webpack:///./src/views/Main/Config/ServiceWithTableList/DetailTab.jsx","webpack:///./src/views/Main/Config/ServiceWithTableList/getDetailPage.js","webpack:///./src/views/Main/Config/ServiceWithTableList/index.jsx","webpack:///delegated ./node_modules/_warning@3.0.0@warning/browser.js from dll-reference _dll_vendor_e6c2b574651d25236c4b"],"names":["httpAjax","method","url","query","config","includes","concat","zerod_components_zTool__WEBPACK_IMPORTED_MODULE_0__","module","exports","__webpack_require__","__webpack_exports__","default","dev","test","prod","name","apis","getServiceList","deleteService","addService","updateService","getServiceDetail","updateServiceConfig","r","_zTool_httpAjax_js__WEBPACK_IMPORTED_MODULE_0__","getList","getUserInfo","map","./area.api.js","./config.api.js","./login.api.js","./scheduling.api.js","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","components","require","loadApis","names","forEach","key","defines","undefined","_babel_runtime_corejs2_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default","trim","push","getChildList","ServiceTab","methods","saveData","item","values","_this","props","showModalLoading","api","configProperty","environment","serviceId","then","re","message","success","catch","error","msg","finally","tabContent","_react_16_8_6_react_default","a","createElement","Zform","items","formItems","formDefaultValues","confProperty","serviceConfig","onSubmit","defaultTabPanes","tab","content","data","this","cfgcPropertyDOList","index","tabpanes","i","length","tabPanes","getTabPanes","className","Ztabs","React","PureComponent","propTypes","PropTypes","object","arrayOf","ServiceWithTableList_ServiceTab","ZerodMainContext","setConsumer","getEditPage","_ref","pageType","headerTitle","headerContent","afterSubmitSuccess","configFormItems","label","render","form","es_button","onClick","setFieldsValue","defaultConfigData","input","TextArea","rows","placeholder","ref","el","zTool","scrollDisableWheel","textAreaRef","options","rules","required","detailKey","input_number","min","max","step","toConsumableArray_default","pageCofig","pageHeader","show","title","rightMoreContent","type","panelHeader","detailApiInterface","submitApiInterface","assign_default","detailId","moreContentRender","detail","ZeditSimpleFormHOC","DetailTab","getConfig","style","background","padding","split","line","n","tmp","startsWith","color","indexOf","idx","substring","value","ServiceWithTableList_DetailTab","getPage","breadcrumbRoutes","record","span","lg","ZdetailSimpleBaseHOC","searchForm","list","listType","cardCoverRender","actionDataIndex","tableParams","onChange","pagination","filters","sorter","console","log","expandedRowRender","indent","expanded","tableColumns","dataIndex","text","instance","showAddBtn","addBtnPermCode","addPageRender","panel","AddPage","closeRightModal","getListData","showDetailBtn","detailBtnPermCode","detailPageRender","DetailPage","getDetailPage","serviceName","remark","showUpdateBtn","updateBtnPermCod","updatePageRender","UpdatePage","showDeleteBtn","deleteBtnPermCod","moreBtnMap","onMoreBtnClick","listApiInterface","servcieName","deleteApiInterface","showPagination","paginationType","ZsearchListHOC"],"mappings":"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","file":"static/js/15.33d2990f25710e8c5b79.js","sourcesContent":["import { zTool } from \"zerod\";\r\n/**\r\n *\r\n * @param {string} method //get || post || put    .....\r\n * @param {string} url\r\n * @param {object} query //接口参数，key，value 对应\r\n * @param {object} config //可配置请求头等，请看下面的config注释\r\n */\r\nfunction httpAjax(method, url, query, config) {\r\n\tif (!url.includes(\"/sys\")) url = `/webapi${url}`; //处理url前缀\r\n\tconst promise = zTool.httpAjax(method, url, query, config);\r\n\treturn promise;\r\n}\r\nexport default httpAjax;\r\n\r\n//config\r\n/* {\r\n    //请求的接口，在请求的时候，如axios.get(url,config);这里的url会覆盖掉config中的url\r\n    url: '/user',\r\n\r\n    // 请求方法，同上\r\n    method: 'get', // default\r\n    // 基础url前缀\r\n    baseURL: 'https://some-domain.com/api/',\r\n  　　\r\n  　　　　\r\n    transformRequest: [function (data) {\r\n      // 这里可以在发送请求之前对请求数据做处理，比如form-data格式化等，这里可以使用开头引入的Qs（这个模块在安装axios的时候就已经安装了，不需要另外安装）\r\n  　　data = Qs.stringify({});\r\n      return data;\r\n    }],\r\n\r\n    transformResponse: [function (data) {\r\n      // 这里提前处理返回的数据\r\n\r\n      return data;\r\n    }],\r\n\r\n    // 请求头信息\r\n    headers: {'X-Requested-With': 'XMLHttpRequest'},\r\n\r\n    //parameter参数\r\n    params: {\r\n      ID: 12345\r\n    },\r\n\r\n    //post参数，使用axios.post(url,{},config);如果没有额外的也必须要用一个空对象，否则会报错\r\n    data: {\r\n      firstName: 'Fred'\r\n    },\r\n\r\n    //设置超时时间\r\n    timeout: 1000,\r\n    //返回数据类型\r\n    responseType: 'json', // default\r\n\r\n\r\n  } */\r\n","module.exports = (__webpack_require__(\"ZTnV\"))(13);","const tmp=``;\r\n\r\nexport default {\r\n    \"default\":`#Web服务器相关配置\r\nserver.port=11110\r\nserver.context-path=/\r\n#数据连接配置\r\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\r\nspring.datasource.druid.username=user\r\nspring.datasource.druid.password=admin@1\r\nspring.datasource.druid.driverClassName=com.mysql.jdbc.Driver\r\nspring.datasource.druid.initial-size=5\r\nspring.datasource.druid.maxActive=10\r\nspring.datasource.druid.minIdle=10\r\nspring.datasource.druid.validation-query=SELECT 'x' from dual\r\nspring.datasource.druid.test-while-idle=true\r\nspring.datasource.druid.time-between-eviction-runs-millis=10000\r\nspring.datasource.druid.min-evictable-idle-time-millis=300000\r\nspring.datasource.druid.poolPreparedStatements=true\r\nspring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20\r\nspring.datasource.druid.filters=stat,slf4j\r\nspring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000\r\nspring.datasource.druid.useGlobalDataSourceStat=true\r\n#Redis连接\r\nspring.redis.database=0\r\nspring.redis.host=172.16.8.18\r\nspring.redis.port=6379\r\nspring.redis.password=hyzs\r\nspring.redis.pool.maxActive=11\r\nspring.redis.pool.maxIdle=11\r\nspring.redis.pool.maxWait=-1\r\nspring.redis.pool.minIdle=0\r\n#json格式化\r\nspring.jackson.date-format=yyyy-MM-dd HH:mm:ss\r\nspring.jackson.time-zone=Asia/Shanghai\r\n#session共享\r\nspring.session.store-type=redis\r\n#文件上传\r\nspring.http.multipart.enabled=true\r\nspring.http.multipart.max-file-size=10MB\r\nspring.http.multipart.max-request-size=10MB\r\n#mybatis\r\nmybatis.configuration.mapUnderscoreToCamelCase=true\r\nmybatis.configuration.jdbcTypeForNull=NULL\r\n#日志\r\nlogging.level.com.hyzs=DEBUG\r\n#关闭\r\nendpoints.shutdown.enabled=true\r\nendpoints.shutdown.sensitive=false\r\n#分布助手配置\r\nlogging.pagehelper.helper-dialect=mysql\r\nlogging.pagehelper.reasonable=true\r\nlogging.pagehelper.support-methods-arguments=true\r\nlogging.pagehelper.params=count=countSql`,\r\n   dev:`#开发环境配置\r\n#数据连接配置\r\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\r\nspring.datasource.druid.username=user\r\nspring.datasource.druid.password=admin@1\r\nspring.datasource.druid.initial-size=5\r\nspring.datasource.druid.maxActive=10\r\nspring.datasource.druid.minIdle=10\r\n\r\n#注册中心地址\r\neureka.client.service-url.defaultZone=http://172.16.8.20:8761/eureka\r\n\r\n#Redis连接\r\nspring.redis.database=0\r\nspring.redis.host=172.16.8.18\r\nspring.redis.port=6379\r\nspring.redis.password=hyzs\r\nspring.redis.pool.maxActive=11\r\nspring.redis.pool.maxIdle=11\r\nspring.redis.pool.maxWait=-1\r\nspring.redis.pool.minIdle=0`,\r\ntest:`#测试环境配置\r\n#数据连接配置\r\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\r\nspring.datasource.druid.username=user\r\nspring.datasource.druid.password=admin@1\r\nspring.datasource.druid.initial-size=5\r\nspring.datasource.druid.maxActive=10\r\nspring.datasource.druid.minIdle=10\r\n\r\n#注册中心地址\r\neureka.client.service-url.defaultZone=http://172.16.8.20:8761/eureka\r\n\r\n#Redis连接\r\nspring.redis.database=0\r\nspring.redis.host=172.16.8.18\r\nspring.redis.port=6379\r\nspring.redis.password=hyzs\r\nspring.redis.pool.maxActive=11\r\nspring.redis.pool.maxIdle=11\r\nspring.redis.pool.maxWait=-1\r\nspring.redis.pool.minIdle=0`,\r\nprod:`#生产环境配置\r\n#数据连接配置\r\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\r\nspring.datasource.druid.username=user\r\nspring.datasource.druid.password=admin@1\r\nspring.datasource.druid.initial-size=5\r\nspring.datasource.druid.maxActive=10\r\nspring.datasource.druid.minIdle=10\r\n\r\n#注册中心地址\r\neureka.client.service-url.defaultZone=http://172.16.8.20:8761/eureka\r\n\r\n#Redis连接\r\nspring.redis.database=0\r\nspring.redis.host=172.16.8.18\r\nspring.redis.port=6379\r\nspring.redis.password=hyzs\r\nspring.redis.pool.maxActive=11\r\nspring.redis.pool.maxIdle=11\r\nspring.redis.pool.maxWait=-1\r\nspring.redis.pool.minIdle=0`,\r\n}","import {zTool} from \"zerod\";\r\nexport default {\r\n\tname: \"config\",\r\n\tapis: {\r\n\t\t//获取列表接口\r\n\t\tgetServiceList(query) {\r\n\t\t\treturn zTool.httpAjax(\"post\", \"/webapi/v1.0/config/center/pageServiceInfo\", query);\r\n\t\t},\r\n\t\t//删除服务\r\n\t\tdeleteService(query) {\r\n\t\t\treturn zTool.httpAjax(\"post\", \"/webapi/v1.0/config/center/deleteServiceInfo\", query);\r\n\t\t},\r\n\t\t//新增服务\r\n\t\taddService(query) {\r\n\t\t\treturn zTool.httpAjax(\"post\", \"/webapi/v1.0/config/center/addServiceConfig\", query);\r\n\t\t},\r\n\t\t//更新服务\r\n\t\tupdateService(query) {\r\n\t\t\treturn zTool.httpAjax(\"post\", \"/webapi/v1.0/config/center/updateServiceInfo\", query);\r\n\t\t},\r\n\t\t//获取详细数据\r\n\t\tgetServiceDetail(query) {\r\n\t\t\treturn zTool.httpAjax(\"post\", \"/webapi/v1.0/config/center/getServiceConfigDetail\", query);\r\n\t\t},\r\n\t\t//更新配置信息\r\n\t\tupdateServiceConfig(query){\r\n\t\t\treturn zTool.httpAjax(\"post\", \"/webapi/v1.0/config/center/updateConfigProperty\", query);\r\n\t\t}\r\n\t},\r\n};\r\n","import httpAjax from \"@/zTool/httpAjax.js\";\r\nexport default {\r\n\tname: \"scheduling\",\r\n\tapis: {\r\n\t\t//获取用户信息\r\n\t\tgetList() {\r\n\t\t\treturn httpAjax(\"post\", \"/get/Zscheduling/list\");\r\n\t\t},\r\n\t},\r\n};\r\n","import httpAjax from \"@/zTool/httpAjax.js\";\r\nexport default {\r\n\tname: \"login\",\r\n\tapis: {\r\n\t\t//获取用户信息\r\n\t\tgetUserInfo() {\r\n\t\t\treturn httpAjax(\"post\", \"/loginUserInfo\");\r\n\t\t},\r\n\t},\r\n};\r\n","var map = {\n\t\"./area.api.js\": \"eAri\",\n\t\"./config.api.js\": \"5WI2\",\n\t\"./login.api.js\": \"O3gd\",\n\t\"./scheduling.api.js\": \"Lwzs\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Revr\";","//自动加载./views/*A-api.js（后台接口）\r\n//./views/*A-api.js导出格式为\r\n// export default {\r\n//   name: \"home\",\r\n//   apis: {\r\n//       //获取列表接口\r\n//     getList(query) {\r\n//       return httpAjax(\"post\", \"接口路径\", query);\r\n//     },\r\n//   }\r\n// };\r\n//使用后台接口：\r\n// import api from '@/App.api.js'\r\n// api.home.getList(参数)\r\n\r\nconst components = require.context(\"./Api\", true, /\\.api.js$/);\r\nlet loadApis = {};\r\nconst names = [];\r\ncomponents.keys().forEach((key) => {\r\n\tlet defines = undefined;\r\n\ttry {\r\n\t\tdefines = components(key).default;\r\n\t} catch (e) {\r\n\t\tthrow Error(`${key}:${e}`);\r\n\t}\r\n\tif (defines === undefined || typeof defines !== \"object\") {\r\n\t\tthrow Error(`${key}:内没有 export default 或者export default格式有误 `);\r\n\t} else if (typeof defines.apis != \"object\") {\r\n\t\tthrow Error(`${key}:apis不是object`);\r\n\t}\r\n\tlet name = defines.name;\r\n\tif (typeof name !== \"string\") {\r\n\t\tthrow Error(`${key}:缺少name属性`);\r\n\t}\r\n\tname = name.trim();\r\n\tif (names.includes(name)) {\r\n\t\tthrow Error(`${key}:${name}此命名空间已被使用`);\r\n\t} else {\r\n\t\tnames.push(name);\r\n\t}\r\n\tloadApis[name] = defines.apis;\r\n});\r\nexport default loadApis;\r\n","import httpAjax from \"@/zTool/httpAjax.js\";\r\nexport default {\r\n\tname: \"area\",\r\n\tapis: {\r\n\t\t//获取列表接口\r\n\t\tgetChildList(query) {\r\n\t\t\treturn httpAjax(\"get\", `/mzfwjg/sys/areas/${query.id}/children`);\r\n\t\t},\r\n\t},\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// zerod\r\nimport { Ztabs, Zform, ZerodMainContext } from \"zerod\";\r\n// 第三方组件\r\nimport { message } from \"antd\";\r\n\r\nimport api from \"@/App.api.js\";\r\n\r\nclass ServiceTab extends React.PureComponent {\r\n\tstatic propTypes = {\r\n\t\tdata: PropTypes.object,\r\n\t\tformItems: PropTypes.arrayOf(PropTypes.object),\r\n\t};\r\n\tmethods = {\r\n\t\tsaveData: (item, values) => {\r\n\t\t\tthis.props.showModalLoading(true);\r\n\t\t\treturn api.config\r\n\t\t\t\t.updateServiceConfig({\r\n\t\t\t\t\tconfigProperty: values[\"confProperty\"],\r\n\t\t\t\t\tenvironment: item.key,\r\n\t\t\t\t\tserviceId: item.serviceId,\r\n\t\t\t\t})\r\n\t\t\t\t.then((re) => {\r\n\t\t\t\t\tmessage.success(\"更新配置成功\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch((re) => {\r\n\t\t\t\t\tmessage.error(re && re.msg ? re.msg : \"更新配置失败\");\r\n\t\t\t\t})\r\n\t\t\t\t.finally(() => {\r\n\t\t\t\t\tthis.props.showModalLoading(false);\r\n\t\t\t\t});\r\n\t\t},\r\n\t};\r\n\ttabContent = (item) => {\r\n\t\treturn (\r\n\t\t\t<Zform\r\n\t\t\t\titems={this.props.formItems}\r\n\t\t\t\tformDefaultValues={{\r\n\t\t\t\t\tconfProperty: item.serviceConfig[\"confProperty\"],\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={(values) => {\r\n\t\t\t\t\treturn this.methods.saveData(item, values);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\tdefaultTabPanes = [\r\n\t\t{ tab: \"默认环境\", key: \"default\", serviceConfig: {}, content: this.tabContent },\r\n\t\t{ tab: \"开发环境\", key: \"dev\", serviceConfig: {}, content: this.tabContent },\r\n\t\t{ tab: \"测试环境\", key: \"test\", serviceConfig: {}, content: this.tabContent },\r\n\t\t{ tab: \"生产环境\", key: \"prod\", serviceConfig: {}, content: this.tabContent },\r\n\t];\r\n\tgetTabPanes(defaultTabPanes) {\r\n\t\tconst { data } = this.props;\r\n\t\tif (data && data.cfgcPropertyDOList) {\r\n\t\t\treturn defaultTabPanes.map((item, index) => {\r\n\t\t\t\titem.serviceId = data.serviceId;\r\n\t\t\t\tconst tabpanes = data.cfgcPropertyDOList;\r\n\t\t\t\tfor (let i = 0; i < tabpanes.length; i++) {\r\n\t\t\t\t\tif (item.key === tabpanes[i][\"environment\"]) {\r\n\t\t\t\t\t\titem.serviceConfig = tabpanes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst tabPanes = this.getTabPanes(this.defaultTabPanes);\r\n\t\treturn (\r\n\t\t\t<div className=\"z-panel z-margin-top-20\">\r\n\t\t\t\t<div className=\"z-panel-heading\">修改配置信息</div>\r\n\t\t\t\t<div className=\"z-panel-body\">\r\n\t\t\t\t\t<Ztabs tabPanes={tabPanes} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ZerodMainContext.setConsumer(ServiceTab);\r\n","import React from \"react\";\r\n// 第三方组件\r\nimport { Input, InputNumber, Button, message } from \"antd\";\r\n// zerod\r\nimport { ZeditSimpleFormHOC ,zTool} from \"zerod\";\r\n// 后台接口\r\nimport api from \"@/App.api.js\";\r\n\r\n// import components from '@/components/load-components'\r\n\r\nimport defaultConfigData from \"@/mock/serviceDefaultConfigData.js\";\r\n\r\nimport ServiceTab from \"./ServiceTab\";\r\n\r\nfunction getEditPage({ pageType, headerTitle, headerContent, afterSubmitSuccess }) {\r\n\tconst configFormItems = [\r\n\t\t{\r\n\t\t\tkey: \"quick\",\r\n\t\t\tlabel: \"快捷操作\",\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tform.setFieldsValue({\r\n\t\t\t\t\t\t\t\tconfProperty: defaultConfigData.default,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t模板配置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"confProperty\",\r\n\t\t\tlabel: \"默认配置\",\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Input.TextArea\r\n\t\t\t\t\t\trows={15}\r\n\t\t\t\t\t\tplaceholder=\"请输入默认配置\"\r\n\t\t\t\t\t\tref={(el) => {\r\n\t\t\t\t\t\t\tzTool.scrollDisableWheel(el.textAreaRef);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t//antd的 form.getFieldDecorator的options\r\n\t\t\toptions: {\r\n\t\t\t\t//验证规则\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"不能为空。\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\tlet formItems = [\r\n\t\t{\r\n\t\t\tkey: \"serviceCode\",\r\n\t\t\tlabel: \"服务编码\",\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn <Input placeholder=\"请输入服务编码\" />;\r\n\t\t\t},\r\n\t\t\t//antd的 form.getFieldDecorator的options\r\n\t\t\toptions: {\r\n\t\t\t\t//验证规则\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"不能为空。\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"serviceName\",\r\n\t\t\tlabel: \"服务名称\",\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn <Input placeholder=\"请输入服务名称\" />;\r\n\t\t\t},\r\n\t\t\t//antd的 form.getFieldDecorator的options\r\n\t\t\toptions: {\r\n\t\t\t\t//验证规则\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"不能为空。\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"serviceRemark\",\r\n\t\t\tlabel: \"服务说明\",\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn <Input.TextArea rows={2} placeholder=\"请输入服务说明\" />;\r\n\t\t\t},\r\n\t\t\t//antd的 form.getFieldDecorator的options\r\n\t\t\toptions: {\r\n\t\t\t\t//验证规则\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"不能为空。\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"servicePort\",\r\n\t\t\tdetailKey:'serviceProt',\r\n\t\t\tlabel: \"端口号\",\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn <InputNumber min={11110} max={65535} step={10} />;\r\n\t\t\t},\r\n\t\t\t//antd的 form.getFieldDecorator的options\r\n\t\t\toptions: {\r\n\t\t\t\t//验证规则\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"不能为空。\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\tif (pageType === \"add\") {\r\n\t\tformItems = [...formItems, ...configFormItems];\r\n\t}\r\n\tconst pageCofig = {\r\n\t\tpageHeader: {\r\n\t\t\tshow: true,\r\n\t\t\t// any\r\n\t\t\ttitle: headerTitle,\r\n\t\t\t//any\r\n\t\t\tcontent: headerContent,\r\n\t\t\t//element | node\r\n\t\t\trightMoreContent: null,\r\n\t\t},\r\n\t\tform: {\r\n\t\t\ttype: pageType,\r\n\t\t\tpanelHeader: pageType === \"add\" ? \"新增服务信息\" : \"修改基础信息\",\r\n\t\t\titems: formItems,\r\n\t\t\tdetailApiInterface: (id, props) => {\r\n\t\t\t\treturn api.config.getServiceDetail({ serviceId: id });\r\n\t\t\t},\r\n\t\t\tsubmitApiInterface: (values, props) => {\r\n\t\t\t\tif (pageType === \"add\") {\r\n\t\t\t\t\treturn api.config.addService(Object.assign({}, values, { environment: \"default\" }));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn api.config.updateService(Object.assign({}, values, { serviceId: props.detailId }));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tafterSubmitSuccess,\r\n\t\t},\r\n\t};\r\n\tif (pageType === \"update\") {\r\n\t\tpageCofig.moreContentRender = (detail) => {\r\n\t\t\t// console.log(detail);\r\n\t\t\treturn <ServiceTab data={detail} formItems={configFormItems} />;\r\n\t\t};\r\n\t}\r\n\treturn ZeditSimpleFormHOC(pageCofig);\r\n}\r\nexport default getEditPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// zerod\r\nimport { Ztabs, ZerodMainContext } from \"zerod\";\r\n\r\nclass DetailTab extends React.PureComponent {\r\n\tstatic propTypes = {\r\n\t\tdata: PropTypes.object,\r\n\t};\r\n\tgetConfig = (content) => {\r\n\t\tif (!content) {\r\n\t\t\treturn <div className=\"z-text-center z-text-gray\">无相关配置信息</div>;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div style={{ background: \"#2B2B2B\", padding: 16 }}>\r\n\t\t\t\t{content.split(\"\\n\").map((line, n) => {\r\n\t\t\t\t\tlet tmp = line;\r\n\t\t\t\t\tif (line.startsWith(\"#\")) {\r\n\t\t\t\t\t\ttmp = <span style={{ color: \"#629755\" }}>{line}</span>;\r\n\t\t\t\t\t} else if (line.indexOf(\"=\") > 0) {\r\n\t\t\t\t\t\tconst idx = line.indexOf(\"=\");\r\n\t\t\t\t\t\tconst key = line.substring(0, idx);\r\n\t\t\t\t\t\tconst value = line.substring(idx + 1, line.length);\r\n\t\t\t\t\t\ttmp = (\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<span style={{ color: \"#9876AA\" }}>{key}</span>\r\n\t\t\t\t\t\t\t\t<span style={{ color: \"rgba(255,255,255,0.85)\" }}>=</span>\r\n\t\t\t\t\t\t\t\t<span style={{ color: \"#BABABA\" }}>{value}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <div key={`${line}-${n}`}>{tmp}</div>;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\ttabContent = (item) => {\r\n\t\treturn this.getConfig(item.serviceConfig[\"confProperty\"]);\r\n\t};\r\n\tdefaultTabPanes = [\r\n\t\t{ tab: \"默认环境\", key: \"default\", serviceConfig: {}, content: this.tabContent },\r\n\t\t{ tab: \"开发环境\", key: \"dev\", serviceConfig: {}, content: this.tabContent },\r\n\t\t{ tab: \"测试环境\", key: \"test\", serviceConfig: {}, content: this.tabContent },\r\n\t\t{ tab: \"生产环境\", key: \"prod\", serviceConfig: {}, content: this.tabContent },\r\n\t];\r\n\tgetTabPanes(defaultTabPanes) {\r\n\t\tconst { data } = this.props;\r\n\t\tif (data && data.cfgcPropertyDOList) {\r\n\t\t\treturn defaultTabPanes.map((item, index) => {\r\n\t\t\t\titem.serviceId = data.serviceId;\r\n\t\t\t\tconst tabpanes = data.cfgcPropertyDOList;\r\n\t\t\t\tfor (let i = 0; i < tabpanes.length; i++) {\r\n\t\t\t\t\tif (item.key === tabpanes[i][\"environment\"]) {\r\n\t\t\t\t\t\titem.serviceConfig = tabpanes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst tabPanes = this.getTabPanes(this.defaultTabPanes);\r\n\t\treturn (\r\n\t\t\t<div className=\"z-panel z-margin-top-20\">\r\n\t\t\t\t<div className=\"z-panel-heading\">配置信息</div>\r\n\t\t\t\t<div className=\"z-panel-body\">\r\n\t\t\t\t\t<Ztabs tabPanes={tabPanes} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ZerodMainContext.setConsumer(DetailTab);\r\n","import React from \"react\";\r\n// import { Input, InputNumber, Button } from \"antd\";\r\nimport { ZdetailSimpleBaseHOC } from \"zerod\";\r\nimport api from \"@/App.api.js\";\r\nimport DetailTab from \"./DetailTab\";\r\n\r\nfunction getPage({ headerTitle, headerContent }) {\r\n\tconst pageCofig = {\r\n\t\tpageHeader: {\r\n\t\t\tshow: true,\r\n\t\t\t// array>[object] | null,如果是null则不显示面包屑\r\n\t\t\tbreadcrumbRoutes: null,\r\n\t\t\t// any\r\n\t\t\ttitle: headerTitle,\r\n\t\t\t//any\r\n\t\t\tcontent: headerContent,\r\n\t\t\t//element | node\r\n\t\t\trightMoreContent: <div>右边</div>,\r\n\t\t},\r\n\t\tdetail: {\r\n\t\t\tpanelHeader: \"基础信息\",\r\n\t\t\titems: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"serviceName\",\r\n\t\t\t\t\tlabel: \"服务名称\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"serviceCode\",\r\n\t\t\t\t\tlabel: \"服务编码\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"serviceProt\",\r\n\t\t\t\t\tlabel: \"约定端口号\",\r\n\t\t\t\t\trender: (value, record) => {\r\n\t\t\t\t\t\treturn <span className=\"z-text-red\">{value}</span>;\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"serviceRemark\",\r\n\t\t\t\t\tlabel: \"服务描述\",\r\n\t\t\t\t\tspan: { lg: 12 },\r\n\t\t\t\t\trender: (value, record) => {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tdetailApiInterface: (id, props) => {\r\n\t\t\t\treturn api.config.getServiceDetail({ serviceId: id });\r\n\t\t\t},\r\n\t\t},\r\n\t\tmoreContentRender: (detail) => {\r\n\t\t\treturn <DetailTab data={detail} />;\r\n\t\t},\r\n\t};\r\n\treturn ZdetailSimpleBaseHOC(pageCofig);\r\n}\r\nexport default getPage;\r\n","import React from \"react\";\r\nimport { Input,message } from \"antd\";\r\nimport{ ZsearchListHOC } from \"zerod\";\r\n\r\nimport api from \"@/App.api.js\";\r\n\r\nimport getEditPage from \"./getEditPage.js\";\r\nimport getDetailPage from \"./getDetailPage.js\";\r\n// let listExports = null;\r\nconst config = {\r\n\r\n\tpageHeader: {\r\n\t\tshow: true,\r\n\t\t//any\r\n\t\ttitle: \"服务配置\",\r\n\t\t//any\r\n\t\tcontent:\r\n\t\t\t\"微服务的定义，维护其配置。除了Eureka Service及Config Center两种服务不在这里配置，其他服务都必须在此定义和配置！\",\r\n\t\t//element | node\r\n\t\trightMoreContent: <div>右边内容</div>,\r\n\t},\r\n\tsearchForm: {\r\n\t\t// array>[object] | null，如果是null则不显示搜索表单\r\n\t\titems: [\r\n\t\t\t{\r\n\t\t\t\tkey: \"serviceCode\",\r\n\t\t\t\tlabel: \"服务编码\",\r\n\t\t\t\trender: (form) => {\r\n\t\t\t\t\treturn <Input placeholder=\"请输入内容\" />;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: \"serviceName\",\r\n\t\t\t\tlabel: \"服务名称\",\r\n\t\t\t\trender: (form) => {\r\n\t\t\t\t\treturn <Input placeholder=\"请输入内容\" />;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\tlist: {\r\n        // table | card\r\n        listType:\"table\",\r\n        cardCoverRender:null,// listType==\"card\"时的一个前置render\r\n\t\tpanelHeader: \"列表\",\r\n\t\t// 表格操作列的字段key\r\n        actionDataIndex: \"serviceName\",\r\n        // antd  Table的参数\r\n        tableParams:{\r\n            onChange:function(pagination, filters, sorter){\r\n                console.log(sorter)\r\n            },\r\n            expandedRowRender:(record, index, indent, expanded)=>{\r\n                console.log(indent)\r\n                return <div>{index+\"-\"+expanded}</div>\r\n            }\r\n        },\r\n\t\t// 表格列map数据数据，同antd的表格 columns\r\n\t\ttableColumns: [\r\n            {\r\n                title: \"服务名称\",\r\n                dataIndex: \"serviceName\",\r\n            },\r\n\t\t\t{\r\n\t\t\t\ttitle: \"服务编码\",\r\n                dataIndex: \"serviceCode\",\r\n                sorter:true,\r\n\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"约定端口号\",\r\n\t\t\t\tdataIndex: \"servicePort\",\r\n\t\t\t\trender: (text,record,index,instance) => {\r\n                    return <span className=\"z-text-red\">{text}</span>},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"服务描述\",\r\n\t\t\t\tdataIndex: \"remark\",\r\n\t\t\t},\r\n\t\t],\r\n\t\t// 是否显示新建按钮\r\n\t\tshowAddBtn: true,\r\n\t\t// 新建按钮权限控制代码\r\n\t\taddBtnPermCode: \"\",\r\n\t\taddPageRender: (panel) => {\r\n\t\t\tconst AddPage = getEditPage({\r\n\t\t\t\tpageType: \"add\",\r\n\t\t\t\theaderTitle: \"新增服务配置\",\r\n\t\t\t\theaderContent: \"新增一个服务,需要录入服务编码服务名称端口号等信息\",\r\n\t\t\t\t// 保存数据成功的回调\r\n\t\t\t\tafterSubmitSuccess: (closeRightModal) => {\r\n\t\t\t\t\t// 保存数据成功后刷新列表数据\r\n\t\t\t\t\tpanel.methods.getListData();\r\n\t\t\t\t\t// 关闭右边modal\r\n\t\t\t\t\tcloseRightModal();\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\treturn <AddPage />;\r\n\t\t},\r\n\t\t// 是否显示详情按钮\r\n\t\tshowDetailBtn: true,\r\n\t\t// 详情按钮权限控制代码\r\n\t\tdetailBtnPermCode: \"\",\r\n\t\tdetailPageRender: (record) => {\r\n\t\t\tconst DetailPage = getDetailPage({ headerTitle: record.serviceName, headerContent: record.remark });\r\n\t\t\treturn <DetailPage detailId={record.id}/>;\r\n\t\t},\r\n\t\t// 是否显示修改按钮\r\n\t\tshowUpdateBtn: true,\r\n\t\t// 修改按钮权限控制代码\r\n\t\tupdateBtnPermCod: \"\",\r\n\t\tupdatePageRender: (record,panel) => {\r\n\t\t\tconst UpdatePage = getEditPage({\r\n\t\t\t\tpageType: \"update\",\r\n\t\t\t\theaderTitle: record.serviceName,\r\n\t\t\t\theaderContent: record.remark,\r\n\t\t\t\tafterSubmitSuccess: (closeRightModal) => {\r\n\t\t\t\t\tpanel.methods.getListData(); // 保存数据成功后刷新列表数据\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\treturn <UpdatePage detailId={record.id} />;\r\n\t\t},\r\n\t\t// 是否显示删除按钮\r\n\t\tshowDeleteBtn: true,\r\n\t\t// 删除按钮权限控制代码\r\n\t\tdeleteBtnPermCod: \"\",\r\n\t\t//更多操作按钮的map数据\r\n\t\tmoreBtnMap: [\r\n\t\t\t{\r\n\t\t\t\tkey: '0',\r\n\t\t\t\tname: \"默认的按钮\",\r\n\t\t\t},\r\n\t\t],\r\n\t\t//更多操作按钮的的点击事件\r\n\t\tonMoreBtnClick:(item,record)=>{\r\n\t\t\tmessage.success(`您当前点击的是[${record.serviceName}]这条数据`)\r\n\t\t},\r\n\t\t// 获取列表数据的后台接口函数，其必须内部返回Promise\r\n\t\tlistApiInterface: (query) => {\r\n\t\t\treturn api.config.getServiceList(Object.assign(query, { servcieName: query.serviceName })); //处理字段名\r\n\t\t},\r\n\t\t// 删除按钮的后台接口函数，其必须内部返回Promise\r\n\t\tdeleteApiInterface: (data) => {\r\n\t\t\treturn api.config.deleteService({ id: data.id });\r\n\t\t},\r\n\t\t// exportSomething: (obj) => (listExports = obj),\r\n\t\t//是否显示分页\r\n        showPagination: true,\r\n         // 分页类型 paging | infinite\r\n         paginationType:'paging',\r\n\t},\r\n};\r\nexport default ZsearchListHOC(config);\r\n","module.exports = (__webpack_require__(\"ZTnV\"))(8);"],"sourceRoot":""}