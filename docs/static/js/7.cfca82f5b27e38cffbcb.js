(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"+fre":function(t,e,n){"use strict";n.r(e);n("89bW");var r=n("XXxv"),o=n("Ds8w"),a=n.n(o),i=n("6ato"),d=n.n(i),s=n("2dj7"),l=n.n(s),u=n("Xtzg"),c=n.n(u),p=n("0dFU"),m=n.n(p),g=n("ZS5U"),f=n.n(g);e.default={name:"AshowDemoHOC",HOC:function(t,e){return function(n){function o(){return d()(this,o),c()(this,(o.__proto__||a()(o)).apply(this,arguments))}return m()(o,n),l()(o,[{key:"componentDidMount",value:function(){var n=this.boxEl.querySelector(".z-open-modal-btn");n._scroll=e,n._render=function(){return t}}},{key:"render",value:function(){var t=this;return f.a.createElement("div",{ref:function(e){t.boxEl=e}},f.a.createElement(r.a,{type:"primary",className:"z-open-modal-btn"},"查看Demo"))}}]),o}(f.a.Component)}}},"0cU6":function(t,e,n){"use strict";n.r(e);var r=n("ZS5U"),o=n.n(r),a=n("ebhq"),i=n("XBpp"),d=n.n(i),s=n("tmCC"),l=n("Q7Bs"),u=a.a.AmdDocHOC,c=a.a.AshowDemoHOC;e.default=u(d.a,{demo1:function(){var t=Object(s.g)(Object(l.a)("add")),e=c(o.a.createElement(t,null),!0);return o.a.createElement(e,null)},demo2:function(){var t=Object(s.g)(Object(l.a)("update")),e=c(o.a.createElement(t,{detailId:1}),!0);return o.a.createElement(e,null)}})},"1xVk":function(t,e,n){"use strict";var r=n("tmCC");e.a=function(t,e,n,o){return e.includes("/sys")||(e="/webapi"+e),r.x.httpAjax(t,e,n,o)}},"3P0Q":function(t,e,n){"use strict";var r=n("ZS5U"),o=n.n(r);e.a={trademark:function(){return o.a.createElement("div",{className:"z-padding-top-10"},o.a.createElement("img",{src:"https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png",width:"80",height:"auto",className:"z-margin-right-18"}))},breadcrumbRoutes:[{path:"config",name:"案例",link:!1},{path:"serviceWithTableList",name:"表格列表",link:!0}],title:"服务器配置",content:"微服务的定义，维护其配置。除了Eureka Service及Config Center两种服务不在这里配置，其他服务都必须在此定义和配置！",rightMoreContent:o.a.createElement("div",null,"右边内容")}},"40mi":function(t,e,n){"use strict";e.a={default:"#Web服务器相关配置\nserver.port=11110\nserver.context-path=/\n#数据连接配置\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\nspring.datasource.druid.username=user\nspring.datasource.druid.password=admin@1\nspring.datasource.druid.driverClassName=com.mysql.jdbc.Driver\nspring.datasource.druid.initial-size=5\nspring.datasource.druid.maxActive=10\nspring.datasource.druid.minIdle=10\nspring.datasource.druid.validation-query=SELECT 'x' from dual\nspring.datasource.druid.test-while-idle=true\nspring.datasource.druid.time-between-eviction-runs-millis=10000\nspring.datasource.druid.min-evictable-idle-time-millis=300000\nspring.datasource.druid.poolPreparedStatements=true\nspring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20\nspring.datasource.druid.filters=stat,slf4j\nspring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000\nspring.datasource.druid.useGlobalDataSourceStat=true\n#Redis连接\nspring.redis.database=0\nspring.redis.host=172.16.8.18\nspring.redis.port=6379\nspring.redis.password=hyzs\nspring.redis.pool.maxActive=11\nspring.redis.pool.maxIdle=11\nspring.redis.pool.maxWait=-1\nspring.redis.pool.minIdle=0\n#json格式化\nspring.jackson.date-format=yyyy-MM-dd HH:mm:ss\nspring.jackson.time-zone=Asia/Shanghai\n#session共享\nspring.session.store-type=redis\n#文件上传\nspring.http.multipart.enabled=true\nspring.http.multipart.max-file-size=10MB\nspring.http.multipart.max-request-size=10MB\n#mybatis\nmybatis.configuration.mapUnderscoreToCamelCase=true\nmybatis.configuration.jdbcTypeForNull=NULL\n#日志\nlogging.level.com.hyzs=DEBUG\n#关闭\nendpoints.shutdown.enabled=true\nendpoints.shutdown.sensitive=false\n#分布助手配置\nlogging.pagehelper.helper-dialect=mysql\nlogging.pagehelper.reasonable=true\nlogging.pagehelper.support-methods-arguments=true\nlogging.pagehelper.params=count=countSql",dev:"#开发环境配置\n#数据连接配置\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\nspring.datasource.druid.username=user\nspring.datasource.druid.password=admin@1\nspring.datasource.druid.initial-size=5\nspring.datasource.druid.maxActive=10\nspring.datasource.druid.minIdle=10\n\n#注册中心地址\neureka.client.service-url.defaultZone=http://172.16.8.20:8761/eureka\n\n#Redis连接\nspring.redis.database=0\nspring.redis.host=172.16.8.18\nspring.redis.port=6379\nspring.redis.password=hyzs\nspring.redis.pool.maxActive=11\nspring.redis.pool.maxIdle=11\nspring.redis.pool.maxWait=-1\nspring.redis.pool.minIdle=0",test:"#测试环境配置\n#数据连接配置\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\nspring.datasource.druid.username=user\nspring.datasource.druid.password=admin@1\nspring.datasource.druid.initial-size=5\nspring.datasource.druid.maxActive=10\nspring.datasource.druid.minIdle=10\n\n#注册中心地址\neureka.client.service-url.defaultZone=http://172.16.8.20:8761/eureka\n\n#Redis连接\nspring.redis.database=0\nspring.redis.host=172.16.8.18\nspring.redis.port=6379\nspring.redis.password=hyzs\nspring.redis.pool.maxActive=11\nspring.redis.pool.maxIdle=11\nspring.redis.pool.maxWait=-1\nspring.redis.pool.minIdle=0",prod:"#生产环境配置\n#数据连接配置\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\nspring.datasource.druid.username=user\nspring.datasource.druid.password=admin@1\nspring.datasource.druid.initial-size=5\nspring.datasource.druid.maxActive=10\nspring.datasource.druid.minIdle=10\n\n#注册中心地址\neureka.client.service-url.defaultZone=http://172.16.8.20:8761/eureka\n\n#Redis连接\nspring.redis.database=0\nspring.redis.host=172.16.8.18\nspring.redis.port=6379\nspring.redis.password=hyzs\nspring.redis.pool.maxActive=11\nspring.redis.pool.maxIdle=11\nspring.redis.pool.maxWait=-1\nspring.redis.pool.minIdle=0"}},"5WI2":function(t,e,n){"use strict";n.r(e);var r=n("tmCC");e.default={name:"config",apis:{getServiceList:function(t){return r.x.httpAjax("post","/webapi/v1.0/config/center/pageServiceInfo",t)},deleteService:function(t){return r.x.httpAjax("post","/webapi/v1.0/config/center/deleteServiceInfo",t)},addService:function(t){return r.x.httpAjax("post","/webapi/v1.0/config/center/addServiceConfig",t)},updateService:function(t){return r.x.httpAjax("post","/webapi/v1.0/config/center/updateServiceInfo",t)},getServiceDetail:function(t){return r.x.httpAjax("post","/webapi/v1.0/config/center/getServiceConfigDetail",t)},updateServiceConfig:function(t){return r.x.httpAjax("post","/webapi/v1.0/config/center/updateConfigProperty",t)}}}},O3gd:function(t,e,n){"use strict";n.r(e);var r=n("1xVk");e.default={name:"login",apis:{getUserInfo:function(){return Object(r.a)("post","/loginUserInfo")}}}},Q7Bs:function(t,e,n){"use strict";var r=n("6ZY3"),o=n.n(r),a=n("bS4n"),i=n.n(a),d=n("unDg"),s=n.n(d),l=(n("uIkl"),n("Zcwe")),u=(n("xpJR"),n("DmjY")),c=(n("89bW"),n("XXxv")),p=n("ZS5U"),m=n.n(p),g=n("3P0Q"),f=n("tmCC"),h=n("40mi"),v=n("Ds8w"),b=n.n(v),q=n("6ato"),y=n.n(q),C=n("2dj7"),x=n.n(C),E=n("Xtzg"),w=n.n(E),S=n("0dFU"),z=n.n(S),k=n("FY2y"),j=n.n(k),I=function(t){function e(){return y()(this,e),w()(this,(e.__proto__||b()(e)).apply(this,arguments))}return z()(e,t),x()(e,[{key:"componentDidMount",value:function(){var t=this.props.getInsertLocation(this.boxEl);this.obj=this.props.getScrollAreaWrapperEl(t),this.setState({}),this.obj.methods.setScrollAreaStyle({height:"calc(100% - 60px)"})}},{key:"componentWillUnmount",value:function(){this.obj.methods.resetScrollArea()}},{key:"render",value:function(){var t=this;return m.a.createElement("div",{className:"z-panel z-margin-top-20",ref:function(e){return t.boxEl=e}},m.a.createElement("div",{className:"z-panel-body"},"panelAfterRender"),this.obj?j.a.createPortal(m.a.createElement("div",{style:{position:"absolute",bottom:"0px",width:"100%",height:"60px",backgroundColor:"white",borderTop:"1px solid #ddd",boxShadow:"0 -2px 4px 0 rgba(217,217,217,0.50)"},className:"z-text-center z-padding-10"},m.a.createElement(c.a,{type:"primary"},"不受滚动条影响得按钮")),this.obj.wrapperEl):null)}}]),e}(m.a.Component),A=f.i.setConsumer(I),D=n("WiDR");e.a=function(t){var e=[{key:"quick",label:"快捷操作",render:function(t){return m.a.createElement(c.a,{onClick:function(){t.setFieldsValue({confProperty:h.a.default})}},"模板配置")}},{key:"confProperty",label:"默认配置",render:function(t){return m.a.createElement(u.a.TextArea,{rows:15,placeholder:"请输入默认配置",ref:function(t){f.x.scrollDisableWheel(t.textAreaRef)}})},options:{rules:[{required:!0,message:"不能为空。"}]}}],n=[{key:"serviceCode",label:"服务编码",render:function(t){return m.a.createElement(u.a,{placeholder:"请输入服务编码"})},options:{rules:[{required:!0,message:"不能为空。"}]}},{key:"serviceName",label:"服务名称",render:function(t){return m.a.createElement(u.a,{placeholder:"请输入服务名称"})},options:{rules:[{required:!0,message:"不能为空。"}]}},{key:"remark",label:"服务说明",render:function(t){return m.a.createElement(u.a.TextArea,{rows:2,placeholder:"请输入服务说明"})},options:{rules:[{required:!0,message:"不能为空。"}]}},{key:"servicePort",label:"端口号",render:function(t){return m.a.createElement(l.a,{min:11110,max:65535,step:10})},options:{rules:[{required:!0,message:"不能为空。"}]}}];return"add"===t&&(n=[].concat(s()(n),e)),{insertLocation:"mainModal",pageHeader:i()({show:!0},g.a,{breadcrumbRoutes:[]}),form:{type:t,panelHeader:"add"==t?"新增服务信息":"修改服务信息",items:n,detailApiInterface:function(t,e){return D.a.config.getServiceDetail({serviceId:t})},submitApiInterface:function(e,n){return"add"===t?D.a.config.addService(o()({},e,{environment:"default"})):D.a.config.updateService(o()({},e,{serviceId:n.detailId}))}},moreContentRender:function(){return m.a.createElement("div",{className:"z-panel z-margin-top-20"},m.a.createElement("div",{className:"z-panel-body"},"moreContentRender"))},panelBeforeRender:function(){return m.a.createElement("div",{className:"z-panel z-margin-bottom-20"},m.a.createElement("div",{className:"z-panel-body"},"panelBeforeRender"))},panelAfterRender:function(){return m.a.createElement(A,null)}}}},Revr:function(t,e,n){var r={"./area.api.js":"eAri","./config.api.js":"5WI2","./login.api.js":"O3gd"};function o(t){var e=a(t);return n(e)}function a(t){var e=r[t];if(!(e+1)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return e}o.keys=function(){return Object.keys(r)},o.resolve=a,t.exports=o,o.id="Revr"},WiDR:function(t,e,n){"use strict";var r=n("Q2cO"),o=n.n(r),a=n("Revr"),i={},d=[];a.keys().forEach(function(t){var e=void 0;try{e=a(t).default}catch(e){throw Error(t+":"+e)}if(void 0===e||"object"!==(void 0===e?"undefined":o()(e)))throw Error(t+":内没有 export default 或者export default格式有误 ");if("object"!=o()(e.apis))throw Error(t+":apis不是object");var n=e.name;if("string"!=typeof n)throw Error(t+":缺少name属性");if(n=n.trim(),d.includes(n))throw Error(t+":"+n+"此命名空间已被使用");d.push(n),i[n]=e.apis}),e.a=i},XBpp:function(t,e){t.exports='<div class="z-doc-titles"></div>\n\n<h1 id="-zeditsimpleformhoc">编辑页面：ZeditSimpleFormHOC</h1>\n<p><code>ZeditSimpleFormHOC</code>是一个函数，传入<code>pageConfig</code>参数配置，返回一个表单编辑结构的组件</p>\n<p>1、新增表单</p>\n<div class="z-demo-box" data-render="demo1" data-title="新增表单"></div>\n\n<pre><code class="language-jsx">import React from &quot;react&quot;;\nimport { Input, InputNumber, Button } from &quot;antd&quot;;\nimport { ZeditSimpleFormHOC, zTool } from &quot;zerod&quot;;\nimport defaultConfigData from &quot;@/mock/serviceDefaultConfigData.js&quot;;\n// 后台接口\nimport api from &quot;@/App.api.js&quot;;\nconst pageCofig = {\n    pageHeader: {\n        show: true,\n        ...pageHeader,\n        breadcrumbRoutes: [],\n    },\n    form: {\n        type: &quot;add&quot;,\n        panelHeader: &quot;新增服务信息&quot;,\n        items: [\n            {\n                key: &quot;serviceCode&quot;,\n                label: &quot;服务编码&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input placeholder=&quot;请输入服务编码&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;serviceName&quot;,\n                label: &quot;服务名称&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input placeholder=&quot;请输入服务名称&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;serviceRemark&quot;,\n                label: &quot;服务说明&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input.TextArea rows={2} placeholder=&quot;请输入服务说明&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;servicePort&quot;,\n                detailKey: &quot;serviceProt&quot;,\n                label: &quot;端口号&quot;,\n                render: (form) =&gt; {\n                    return &lt;InputNumber min={11110} max={65535} step={10} /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;quick&quot;,\n                label: &quot;快捷操作&quot;,\n                render: (form) =&gt; {\n                    return (\n                        &lt;Button\n                            onClick={() =&gt; {\n                                form.setFieldsValue({\n                                    confProperty: defaultConfigData.default,\n                                });\n                            }}\n                        &gt;\n                            模板配置\n                        &lt;/Button&gt;\n                    );\n                },\n            },\n            {\n                key: &quot;confProperty&quot;,\n                label: &quot;默认配置&quot;,\n                render: (form) =&gt; {\n                    return (\n                        &lt;Input.TextArea\n                            rows={15}\n                            placeholder=&quot;请输入默认配置&quot;\n                            ref={(el) =&gt; {\n                                zTool.scrollDisableWheel(el.textAreaRef);\n                            }}\n                        /&gt;\n                    );\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n        ],\n        detailApiInterface: (id, props) =&gt; {\n            return api.config.getServiceDetail({ serviceId: id });\n        },\n        submitApiInterface: (values, props) =&gt; {\n            return api.config.addService(Object.assign({}, values, { environment: &quot;default&quot; }));\n        },\n    },\n        moreContentRender: function() {\n            return (\n                &lt;div className=&quot;z-panel z-margin-top-20&quot;&gt;\n                    &lt;div className=&quot;z-panel-body&quot;&gt;moreContentRender&lt;/div&gt;\n                &lt;/div&gt;\n            );\n        },\n        panelBeforeRender: function() {\n            return (\n                &lt;div className=&quot;z-panel z-margin-bottom-20&quot;&gt;\n                    &lt;div className=&quot;z-panel-body&quot;&gt;panelBeforeRender&lt;/div&gt;\n                &lt;/div&gt;\n            );\n        },\n        panelAfterRender: function() {\n            // MoreContent 的代码请查看 ZerodMainContext 的 getScrollAreaWrapperEl 中例子的代码\n            return &lt;MoreContent /&gt;;\n        },\n};\nexport default ZeditSimpleFormHOC(pageConfig);</code></pre>\n<p>2、修改表单</p>\n<div class="z-demo-box" data-render="demo2" data-title=\'form.type="update"时为修改表单,这时才会调用form.detailApiInterface钩子，使用moreContentRender函数在页面末端追加更多内容\'></div>\n\n<pre><code class="language-jsx">import React from &quot;react&quot;;\nimport { Input, InputNumber, Button } from &quot;antd&quot;;\nimport { ZeditSimpleFormHOC, zTool } from &quot;zerod&quot;;\nimport defaultConfigData from &quot;@/mock/serviceDefaultConfigData.js&quot;;\n// 后台接口\nimport api from &quot;@/App.api.js&quot;;\nconst pageCofig = {\n    pageHeader: {\n        show: true,\n        ...pageHeader,\n        breadcrumbRoutes: [],\n    },\n    form: {\n        type: &quot;update&quot;,\n        panelHeader: &quot;修改服务信息&quot;,\n        items: [\n            {\n                key: &quot;serviceCode&quot;,\n                label: &quot;服务编码&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input placeholder=&quot;请输入服务编码&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;serviceName&quot;,\n                label: &quot;服务名称&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input placeholder=&quot;请输入服务名称&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;serviceRemark&quot;,\n                label: &quot;服务说明&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input.TextArea rows={2} placeholder=&quot;请输入服务说明&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;servicePort&quot;,\n                detailKey: &quot;serviceProt&quot;,\n                label: &quot;端口号&quot;,\n                render: (form) =&gt; {\n                    return &lt;InputNumber min={11110} max={65535} step={10} /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n        ],\n        detailApiInterface: (id, props) =&gt; {\n            return api.config.getServiceDetail({ serviceId: id });\n        },\n        submitApiInterface: (values, props) =&gt; {\n            return api.config.updateService(Object.assign({}, values, { serviceId: props.detailId }));\n        },\n    },\n        moreContentRender: function() {\n            return (\n                &lt;div className=&quot;z-panel z-margin-top-20&quot;&gt;\n                    &lt;div className=&quot;z-panel-body&quot;&gt;moreContentRender&lt;/div&gt;\n                &lt;/div&gt;\n            );\n        },\n        panelBeforeRender: function() {\n            return (\n                &lt;div className=&quot;z-panel z-margin-bottom-20&quot;&gt;\n                    &lt;div className=&quot;z-panel-body&quot;&gt;panelBeforeRender&lt;/div&gt;\n                &lt;/div&gt;\n            );\n        },\n        panelAfterRender: function() {\n            // MoreContent 的代码请查看 ZerodMainContext 的 getScrollAreaWrapperEl 中例子的代码\n            return &lt;MoreContent /&gt;;\n        },\n};\nexport default ZeditSimpleFormHOC(pageConfig);</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="pageconfig">pageConfig</h2>\n<table>\n    <thead>\n        <tr>\n            <th>参数</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n        </tr>\n    </thead>\n    <tbody>\n    <tr>\n            <td>pageHeader</td>\n            <td>页头内容,除了show属性(默认false)，其他属性同 组件/ZpageHeader的Props</td>\n            <td>object</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>pageFooter</td>\n            <td>页尾内容,除了show属性(默认true)，其他属性同 组件/pageFooter的Props</td>\n            <td>object</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>hasBodyPadding</td>\n            <td>中间部分是否有padding值</td>\n            <td>boolean</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td>form</td>\n            <td>表单配置，请看下面的pageConfig.form</td>\n            <td>object</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>moreContentRender</td>\n            <td>在表单之后添加更多内容的渲染函数,有两个参数detail：detailApiInterface接口获取的详情数据、panel:组件的实例对象</td>\n            <td>(detail,tool) =>{return;}</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>panelBeforeRender</td>\n            <td>列表面板上面的渲染函数</td>\n            <td>function(detail,tool){return ReacNode|Element;}</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>panelAfterRender</td>\n            <td>列表面板下面的渲染函数</td>\n            <td>function(detail,tool){return ReacNode|Element;}</td>\n            <td>--</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class="z-doc-titles"></div>\n\n<h2 id="pageconfig-form">pageConfig.form</h2>\n<table>\n    <thead>\n        <tr>\n            <th>参数</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>type</td>\n            <td>表单类型：新增操作 | 修改操作</td>\n            <td>add | update</td>\n            <td>mainRoute</td>\n        </tr>\n        <tr>\n            <td>panelHeader</td>\n            <td>列表面板的头部内容,为null则不显示面板头部</td>\n            <td>string | function(){return ;}</td>\n            <td>列表</td>\n        </tr>\n        <tr>\n            <td>items</td>\n            <td>生成表单的json数组，结构：同 组件/Zform 的items结构</td>\n            <td>array[object] | null</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>defaultSpan</td>\n            <td>同 组件/Zform 的defaultSpan属性</td>\n            <td>number | object</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>submitBtnName</td>\n            <td>同 组件/Zform 的submitBtnName属性</td>\n            <td>string</td>\n            <td>保存</td>\n        </tr>\n        <tr>\n            <td>submitMsg</td>\n            <td>同 组件/Zform 的submitMsg属性</td>\n            <td>string</td>\n            <td>点击确定按钮提交数据</td>\n        </tr>\n        <tr>\n            <td>submitBtnRender</td>\n            <td>同 组件/Zform 的submitBtnRender属性</td>\n            <td>funtion(onSubmit,props){return ReactNode | Element;}</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>detailApiInterface</td>\n            <td>获取详细数据的后台接口函数,必须返回Promise,只有form.type="update"才自动调用,参数有 detailId : ZeditSimpleFormHOC(pageConfig)得到组件的detailId属性，props ：ZeditSimpleFormHOC(pageConfig)得到组件的其他属性。接口响应体的data属性必须 object类型</td>\n            <td>(detailId, props,tool) =>{return Promise;}</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>submitApiInterface</td>\n            <td>保存数据的后台接口函数,即保存按钮点击触发的函数,必须返回Promise,参数有：values:表单的值，props ：ZeditSimpleFormHOC(pageConfig)得到组件的其他属性</td>\n            <td>(values, props,tool) =>{return Promise;}</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>showSubmitBtn</td>\n            <td>是否显示提交按钮</td>\n            <td>boolean</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td>afterSubmitSuccess</td>\n            <td>保存数据成功的回调 values：表单的值</td>\n            <td>(value, tool) =>{}</td>\n            <td>--</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class="z-doc-titles"></div>\n\n<h2 id="tool-">tool 参数</h2>\n<p>pageConfig 中的一些函数如<code>moreContentRender</code>提供了<code>tool</code>参数出来，有如下内容：</p>\n<p><code>tool</code>对象不但包含<code>ZerodMainContext</code>提供的东西（请查看 上下文/ ZerodMainContext ），比如 tool.showRightModal，还提供如下内容：</p>\n<h3 id="tool-getforminstance">tool.getFormInstance</h3>\n<p>是一个函数，可以 const myform=tool.getFormInstance()取得 antd 中经 Form.create() 包装过的组件自带的 this.props.form 属性 ；<a href="https://ant.design/components/form-cn/" target="_blank"> 更多请查看 antd 的 Form</a></p>\n<h3 id="tool-methods">tool.methods</h3>\n<p>tool.methods 是一个对象，内容如下：</p>\n<table>\n    <thead>\n        <tr>\n            <th>方法</th>\n            <th>说明</th>\n            <th>使用方式</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>showLoading</td>\n            <td>用于 显示/取消 当前页的loading的方法，必需参数show：true|false</td>\n            <td>tool.methods.showLoading(true)</td>\n        </tr>\n        <tr>\n            <td>getFormDetailData</td>\n            <td>会触发pageConfig.form.detailApiInterface函数</td>\n            <td>tool.methods.getFormDetailData()</td>\n        </tr>\n        <tr>\n            <td>openModal</td>\n            <td>根据当前位置打开下一级rightModal</td>\n            <td>tool.methods.openModal(content)</td>\n        </tr>\n        <tr>\n            <td>closeCurrentModal</td>\n            <td>关闭当前的rightModal</td>\n            <td>tool.methods.closeCurrentModal()</td>\n        </tr>\n        <tr>\n            <td>onSubmit</td>\n            <td>ZeditSimpleFormHOC的submit方法，需参数values:表单的所有值的map对象，tool.submit(values)会触发submitApiInterface，异步回调后会触发afterSuccess</td>\n            <td>tool.methods.onSubmit(values)</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class="z-doc-titles"></div>\n\n<h3 id="tool-router">tool.$router</h3>\n<p>tool.$router 是一个对象，内容如下：</p>\n<table>\n    <thead>\n        <tr>\n            <th>属性</th>\n            <th>说明</th>\n            <th>使用方式</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>history</td>\n            <td>可以调用push、replace等跳转路由path得方法，<a href="https://reacttraining.com/react-router/web/api/history" target="_blank"> 更多请查看react-router的history</a></td>\n            <td>tool.$router.history.push("/login")</td>\n        </tr>\n        <tr>\n            <td>location</td>\n            <td>当前路由的相关信息,<a href="https://reacttraining.com/react-router/web/api/location" target="_blank"> 更多请查看react-router的location</a></td>\n            <td>tool.$router.location.pathname</td>\n        </tr>\n    </tbody>\n</table>\n'},eAri:function(t,e,n){"use strict";n.r(e);var r=n("1xVk");e.default={name:"area",apis:{getChildList:function(t){return Object(r.a)("get","/mzfwjg/sys/areas/"+t.id+"/children")}}}},ebhq:function(t,e,n){"use strict";var r=n("Q2cO"),o=n.n(r),a=n("jjl2"),i={},d=[];a.keys().forEach(function(t){var e=void 0;try{e=a(t).default}catch(e){throw Error(t+":"+e)}if(void 0===e||"object"!==(void 0===e?"undefined":o()(e)))throw Error(t+":内没有 export default 或者export default格式有误 ");if("function"!=typeof e.HOC)throw Error(t+":HOC有误");var n=e.name;if("string"!=typeof n)throw Error(t+":缺少name属性");if(!/^A[A-z0-9]*HOC$/.test(n))throw Error(t+":name属性请以A开头HOC结尾");if(n=n.trim(),d.includes(n))throw Error(t+":"+n+"此HOC名称已被使用");d.push(n),i[n]=e.HOC}),e.a=i},jjl2:function(t,e,n){var r={"./AmdDocHOC/index.jsx":"pnNO","./AshowDemoHOC/index.jsx":"+fre"};function o(t){var e=a(t);return n(e)}function a(t){var e=r[t];if(!(e+1)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return e}o.keys=function(){return Object.keys(r)},o.resolve=a,t.exports=o,o.id="jjl2"},pnNO:function(t,e,n){"use strict";n.r(e);var r=n("unDg"),o=n.n(r),a=n("Ds8w"),i=n.n(a),d=n("6ato"),s=n.n(d),l=n("2dj7"),u=n.n(l),c=n("Xtzg"),p=n.n(c),m=n("0dFU"),g=n.n(m),f=n("ZS5U"),h=n.n(f),v=n("FY2y"),b=n.n(v),q=(n("T9cD"),n("tmCC")),y=n("tW/l"),C=n.n(y);var x=Object(q.r)();e.default={name:"AmdDocHOC",HOC:function(t,e){var n=function(n){function r(){var t,e,n,a;s()(this,r);for(var d=arguments.length,l=Array(d),u=0;u<d;u++)l[u]=arguments[u];return e=n=p()(this,(t=r.__proto__||i()(r)).call.apply(t,[this].concat(l))),n.renderEls=[],n.state={navs:[],closeModaled:!0},n.setNavs=function(){var t=[],e=n.mdEl.querySelectorAll(".z-doc-titles");Array.prototype.slice.call(e).forEach(function(e){t.push({name:e.dataset.title?e.dataset.title:e.nextElementSibling.innerText,el:e.nextElementSibling,active:-n.scrollInstance.scroll.y==e.nextElementSibling.offsetTop-24})}),t.length&&n.setState({navs:t},function(){if(n.bindScrollEvent(),n.navEl&&n.navContentEl){var t=q.x.BuildScroll;n.navScroollInstance=new t(n.navEl,{scrollbars:"custom"}),q.x.listenDivSizeChange(n.navEl,n.navScroollInstance.refresh),q.x.listenDivSizeChange(n.navContentEl,n.navScroollInstance.refresh)}})},n.bindScrollEvent=function(){n.scrollInstance.scroll.on("scrollEnd",function(){if(!n.unmounted){var t=-n.scrollInstance.scroll.y;n.state.navs.forEach(function(t){t.active=!1});for(var e=n.state.navs.length,r=0;r<e;r++){var a=n.state.navs[r];if(t>=a.el.offsetTop-120){if(!(r<e-1)){a.active=!0;break}var i=n.state.navs[r+1];if(i&&t<i.el.offsetTop-120){a.active=!0;break}}}n.setState({navs:[].concat(o()(n.state.navs))})}})},n.navScrollTo=function(t){n.scrollInstance.scroll.scrollTo(0,-(t.el.offsetTop-24),200)},a=e,p()(n,a)}return g()(r,n),u()(r,[{key:"componentWillUnmount",value:function(){this.unmounted=!0,this.renderEls.forEach(function(t){b.a.unmountComponentAtNode(t)})}},{key:"componentDidMount",value:function(){var t=this,n=this.mdEl.querySelectorAll(".z-demo-box");Array.prototype.slice.call(n).forEach(function(n){var r=function(t){var e={};if(t.dataset)return t.dataset;for(var n=0;n<t.attributes.length;n++){var r=t.attributes[n].nodeName;if(/^data-\w+$/.test(r)){var o=t.attributes[n].nodeValue;e[r.match(/^data-(\w+)/)[1]]=o}}return e}(n);if(e&&"function"==typeof e[r.render]){var o=n.nextElementSibling;o=o&&"pre"==o.localName?o:null;var a=e[r.render]();t.renderEls.push(n),b.a.render(a,n,function(){var t=document.createElement("div");t.className="z-demo-footer";var e=document.createElement("div");e.className="z-demo-code-btn z-flex-space-between";var a=document.createElement("div");a.className="z-demo-code";var i=document.createElement("img");i.addEventListener("click",function(){i.src=i.open?"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg":"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg",a.style.height=i.open?"0px":"auto",i.open=!i.open},!1),i.src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg";var d=document.createElement("span");d.innerText=r.title?r.title:"",e.appendChild(d),o&&e.appendChild(i),t.appendChild(e),o&&a.appendChild(o),t.appendChild(a),n.appendChild(t)})}}),this.mdEl.addEventListener("click",function(e){"string"==typeof e.target.className&&e.target.className.includes("z-open-modal-btn")&&setTimeout(function(){"function"==typeof e.target._render&&t.props.showRightModal({show:!0,modal:e.target._modal?e.target._modal:"mainModal",content:e.target._render(),scroll:e.target._scroll,onTransitionend:function(e){t.setState({closeModaled:!e})}})},10)},!1),this.mdEl.addEventListener("click",function(e){"string"==typeof e.target.className&&e.target.className.includes("z-show-loading-btn")&&setTimeout(function(){if("mainRoute"==e.target._modal)t.props.showRouteLoading(!0),setTimeout(function(){t.props.showRouteLoading(!1)},2e3);else{var n=e.target._modal?e.target._modal:"mainModal";t.props.showRightModal({show:!0,modal:n,content:null,scroll:!0,onTransitionend:function(e){t.setState({closeModaled:!e})}}),t.props.showModalLoading(!0,n),setTimeout(function(){t.props.showModalLoading(!1,n)},2e3)}},10)}),this.scrollInstance=this.props.getScrollInstance("mainRoute"),setTimeout(function(){t.setNavs()},100)}},{key:"render",value:function(){var e=this;return h.a.createElement(q.l.Template,null,h.a.createElement(x,{pageHeader:{show:!1},hasBodyPadding:!1},h.a.createElement("div",{className:"z-panel "+C.a["z-md-doc"],ref:function(t){return e.mdEl=t}},h.a.createElement("div",{className:"z-panel-body",style:this.state.navs.length?{width:"calc(100% - 136px)"}:{}},h.a.createElement(q.d,{mode:"html"},t)))),this.state.navs.length&&this.state.closeModaled?b.a.createPortal(h.a.createElement("div",{className:C.a["z-nav-box"],ref:function(t){return e.navEl=t}},h.a.createElement("div",{ref:function(t){return e.navContentEl=t}},h.a.createElement("section",null,this.state.navs.map(function(t,n){return h.a.createElement("div",{title:t.name,className:C.a["z-nav"]+" "+(t.active?C.a.active:""),key:n,onClick:function(){e.navScrollTo(t)}},t.name)})))),document.body):null)}}]),r}(h.a.Component);return q.i.setConsumer(n)}}}}]);