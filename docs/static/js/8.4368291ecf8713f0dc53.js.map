{"version":3,"sources":["webpack:///delegated ./node_modules/_lodash@4.17.11@lodash/merge.js from dll-reference _dll_vendor_e823eb2f1294e4241445","webpack:///./node_modules/zerod/components/ZsearchListHOC/doc.md","webpack:///./src/Api sync \\.api.js$","webpack:///delegated ./node_modules/_viewerjs@1.3.3@viewerjs/dist/viewer.js from dll-reference _dll_vendor_e823eb2f1294e4241445","webpack:///./src/views/Main/HOC-doc/ZsearchListHOC-doc/demos/ServiceTab.jsx","webpack:///./src/views/Main/HOC-doc/ZsearchListHOC-doc/demos/getEditPage.js","webpack:///./src/views/Main/HOC-doc/ZsearchListHOC-doc/demos/index.jsx","webpack:///./src/views/Main/HOC-doc/ZsearchListHOC-doc/index.jsx","webpack:///./src/HOC sync index.jsx$","webpack:///delegated ./node_modules/_lodash.throttle@4.1.1@lodash.throttle/index.js from dll-reference _dll_vendor_e823eb2f1294e4241445"],"names":["ServiceTab","methods","saveData","item","values","props","showModalLoading","api","config","updateServiceConfig","configProperty","environment","key","serviceId","then","re","success","catch","error","msg","finally","tabContent","formItems","confProperty","serviceConfig","defaultTabPanes","tab","content","data","cfgcPropertyDOList","map","index","tabpanes","i","length","tabPanes","getTabPanes","React","PureComponent","propTypes","PropTypes","object","arrayOf","setConsumer","getEditPage","pageType","headerTitle","headerContent","afterSubmitSuccess","configFormItems","label","render","form","setFieldsValue","defaultConfigData","default","span","el","scrollDisableWheel","textAreaRef","options","rules","required","message","pageCofig","insertLocation","pageHeader","show","title","rightMoreContent","type","panelHeader","items","detailApiInterface","id","getServiceDetail","submitApiInterface","addService","updateService","detailId","panelAfterRender","detail","getDemo","pageConfig","searchForm","defaultExpanded","labelLayout","changeItems","tool","console","log","afterItemsRendered","list","listType","cardCoverRender","actionDataIndex","tableParams","expandedRowRender","record","indent","expanded","serviceName","serviceCode","remark","tableColumns","dataIndex","sorter","text","instance","showAddBtn","addBtnPermCode","addPageRender","panel","AddPage","closeRightModal","getListData","showDetailBtn","detailBtnPermCode","detailPageRender","DetailPage","getDetailPage","showUpdateBtn","updateBtnPermCod","updatePageRender","UpdatePage","showDeleteBtn","deleteBtnPermCod","moreBtnMap","name","onMoreBtnClick","listApiInterface","query","getServiceList","servcieName","deleteApiInterface","deleteService","exportSomething","obj","showPagination","paginationType","panelBeforeRender","moreContentRender","mergeConfig","AreaDemo","onSelect","names","join","selections","area","disabled","children","AmdDocHOC","HOC","AshowDemoHOC","showDemo","Component","doc","demo1","MyScript","demo2","getPageSize","isListCard","demo3","cardSpan","xxl","xl","lg"],"mappings":"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","file":"static/js/8.4368291ecf8713f0dc53.js","sourcesContent":["module.exports = (__webpack_require__(\"sG4F\"))(10);","module.exports = \"<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h1 id=\\\"-zsearchlisthoc\\\">列表展示：ZsearchListHOC</h1>\\n<p><code>ZsearchListHOC</code>是一个函数，传入<code>pageConfig</code>参数配置，返回一个有头有尾有查询列表的组件</p>\\n<p><code>ZsearchListHOC</code>内置了一个<code>ZlistPanel</code>组件，可以<code>import {ZlistPanel} from &quot;zerod&quot;</code>引入，<code>ZlistPanel</code>的 props 同 <code>pageConfig.list</code></p>\\n<p>1、table 类型</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"demo1\\\" data-title=\\\"此demo结合ZeditSimpleFormHOC、ZdetailSimpleBaseHOC的完整示例\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">import React from &quot;react&quot;;\\nimport ZpureComponent from &quot;zerod/components/ZpureComponent&quot;;\\nimport { Input, message } from &quot;antd&quot;;\\nimport { ZsearchListHOC, zTool } from &quot;zerod&quot;;\\n\\nimport api from &quot;@/App.api.js&quot;;\\n\\nimport getEditPage from &quot;./getEditPage.js&quot;;\\nimport getDetailPage from &quot;./getDetailPage.js&quot;;\\n\\nconst pageConfig = {\\n    pageHeader: {\\n        show: true,\\n        trademark: &lt;img src=&quot;https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png&quot; width=&quot;60&quot; className=&quot;z-margin-right-15&quot; /&gt;,\\n        // array&gt;[object] | null,如果是null则不显示面包屑\\n        breadcrumbRoutes: [{ path: &quot;config&quot;, name: &quot;案例&quot;, link: false }, { path: &quot;serviceWithTableList&quot;, name: &quot;表格列表&quot;, link: true }],\\n        // any\\n        title: &quot;服务器配置&quot;,\\n        // any\\n        content: &quot;微服务的定义，维护其配置。除了Eureka Service及Config Center两种服务不在这里配置，其他服务都必须在此定义和配置！&quot;,\\n        // element | node | function\\n        rightMoreContent: &lt;div&gt;右边内容&lt;/div&gt;,\\n    },\\n    searchForm: {\\n        // array&gt;[object] | null，如果是null则不显示搜索表单\\n        items: [\\n            {\\n                key: &quot;serviceCode&quot;,\\n                label: &quot;服务编码&quot;,\\n                render: (form) =&gt; {\\n                    return &lt;Input placeholder=&quot;请输入内容&quot; /&gt;;\\n                },\\n            },\\n            {\\n                key: &quot;serviceName&quot;,\\n                label: &quot;服务名称&quot;,\\n                render: (form) =&gt; {\\n                    return &lt;Input placeholder=&quot;请输入内容&quot; /&gt;;\\n                },\\n            },\\n        ],\\n    },\\n    list: {\\n        // table | card\\n        listType: &quot;table&quot;,\\n        cardCoverRender: null, // listType==&quot;card&quot;时的一个前置render\\n        panelHeader: &quot;列表&quot;,\\n        // 表格操作列的字段key\\n        actionDataIndex: &quot;serviceName&quot;,\\n        // antd  Table的参数\\n        tableParams: {\\n            //通过展开查看更多内容\\n            expandedRowRender: (record, index, indent, expanded) =&gt; {\\n                return (\\n                    &lt;div&gt;\\n                        &lt;dl className=&quot;z-info&quot;&gt;\\n                            &lt;dt className=&quot;z-info-left z-padding-bottom-10&quot;&gt;服务名称&lt;/dt&gt;\\n                            &lt;dd className=&quot;z-info-right z-padding-bottom-10&quot;&gt;{record.serviceName}&lt;/dd&gt;\\n                        &lt;/dl&gt;\\n                        &lt;dl className=&quot;z-info&quot;&gt;\\n                            &lt;dt className=&quot;z-info-left z-padding-bottom-10&quot;&gt;服务编码&lt;/dt&gt;\\n                            &lt;dd className=&quot;z-info-right z-padding-bottom-10&quot;&gt;{record.serviceCode}&lt;/dd&gt;\\n                        &lt;/dl&gt;\\n                        &lt;dl className=&quot;z-info&quot;&gt;\\n                            &lt;dt className=&quot;z-info-left z-padding-bottom-10&quot;&gt;服务描述&lt;/dt&gt;\\n                            &lt;dd className=&quot;z-info-right z-padding-bottom-10&quot;&gt;{record.remark}&lt;/dd&gt;\\n                        &lt;/dl&gt;\\n                    &lt;/div&gt;\\n                );\\n            },\\n        },\\n        // 表格列map数据数据，同antd的表格 columns\\n        tableColumns: [\\n            {\\n                title: &quot;服务名称&quot;,\\n                dataIndex: &quot;serviceName&quot;,\\n                sorter: true, //启用排序字段\\n            },\\n            {\\n                title: &quot;服务编码&quot;,\\n                dataIndex: &quot;serviceCode&quot;,\\n                sorter: true, //启用排序字段\\n            },\\n            {\\n                title: &quot;约定端口号&quot;,\\n                dataIndex: &quot;servicePort&quot;,\\n                render: (text, record, index, instance) =&gt; {\\n                    return &lt;span className=&quot;z-text-red&quot;&gt;{text}&lt;/span&gt;;\\n                },\\n            },\\n            {\\n                title: &quot;服务描述&quot;,\\n                dataIndex: &quot;remark&quot;,\\n            },\\n        ],\\n        // 是否显示新建按钮\\n        showAddBtn: true,\\n        addPageRender: (panel) =&gt; {\\n            const AddPage = getEditPage({\\n                pageType: &quot;add&quot;,\\n                headerTitle: &quot;新增服务配置&quot;,\\n                headerContent: &quot;新增一个服务,需要录入服务编码服务名称端口号等信息&quot;,\\n                // 保存数据成功的回调\\n                afterSubmitSuccess: (closeRightModal) =&gt; {\\n                    // 保存数据成功后刷新列表数据\\n                    panel.methods.getListData();\\n                    // 关闭右边modal\\n                    closeRightModal();\\n                },\\n            });\\n            return &lt;AddPage /&gt;;\\n        },\\n        // 是否显示详情按钮\\n        showDetailBtn: true,\\n        detailPageRender: (record) =&gt; {\\n            const DetailPage = getDetailPage({ headerTitle: record.serviceName, headerContent: record.remark });\\n            return &lt;DetailPage detailId={record.id} /&gt;;\\n        },\\n        // 是否显示修改按钮\\n        showUpdateBtn: true,\\n        // 修改按钮权限控制代码\\n        updateBtnPermCod: &quot;&quot;,\\n        updatePageRender: (record, panel) =&gt; {\\n            const UpdatePage = getEditPage({\\n                pageType: &quot;update&quot;,\\n                headerTitle: record.serviceName,\\n                headerContent: record.remark,\\n                afterSubmitSuccess: (closeRightModal) =&gt; {\\n                    panel.methods.getListData(); // 保存数据成功后刷新列表数据\\n                },\\n            });\\n            return &lt;UpdatePage detailId={record.id} /&gt;;\\n        },\\n        // 是否显示删除按钮\\n        showDeleteBtn: true,\\n        // 删除按钮权限控制代码\\n        deleteBtnPermCod: &quot;&quot;,\\n        //更多操作按钮的map数据\\n        moreBtnMap: [\\n            {\\n                key: &quot;0&quot;,\\n                name: &quot;默认的按钮&quot;,\\n            },\\n        ],\\n        //更多操作按钮的的点击事件\\n        onMoreBtnClick: (item, record) =&gt; {\\n            message.success(`您当前点击的是[${record.serviceName}]这条数据`);\\n        },\\n        // 获取列表数据的后台接口函数，其必须内部返回Promise\\n        listApiInterface: (query) =&gt; {\\n            return api.config.getServiceList(Object.assign(query, { servcieName: query.serviceName })); //处理字段名\\n        },\\n        // 删除按钮的后台接口函数，其必须内部返回Promise\\n        deleteApiInterface: (data) =&gt; {\\n            return api.config.deleteService({ id: data.id });\\n        },\\n        //是否显示分页\\n        showPagination: true,\\n        // 分页类型 paging | infinite\\n        paginationType: &quot;paging&quot;,\\n    },\\n};\\nexport default ZsearchListHOC(pageConfig);</code></pre>\\n<p>2、card 类型 + 按字段排序 + 无限追加的分页类型</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"demo2\\\" data-title=\\\"关键代码如下\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">const pageConfig = {\\n    list: {\\n        listType: &quot;card&quot;,\\n        // 分页类型\\n        paginationType: &quot;infinite&quot;,\\n        getPageSize: (listType) =&gt; 2,\\n        tableColumns: [\\n            {\\n                title: &quot;服务名称&quot;,\\n                dataIndex: &quot;serviceName&quot;,\\n                sorter: true, //启用排序\\n            },\\n            {\\n                title: &quot;服务编码&quot;,\\n                dataIndex: &quot;serviceCode&quot;,\\n                sorter: true, //启用排序\\n            },\\n            {\\n                title: &quot;约定端口号&quot;,\\n                dataIndex: &quot;servicePort&quot;,\\n                render: (text, record, index, instance) =&gt; {\\n                    return &lt;span className=&quot;z-text-red&quot;&gt;{text}&lt;/span&gt;;\\n                },\\n            },\\n            {\\n                title: &quot;服务描述&quot;,\\n                dataIndex: &quot;remark&quot;,\\n            },\\n        ],\\n    },\\n};</code></pre>\\n<p>2、simple 类型</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"demo3\\\" data-title=\\\"关键代码如下\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">const pageConfig = {\\n    list: {\\n        listType: &quot;simple&quot;,\\n        // 分页类型\\n        paginationType: &quot;infinite&quot;,\\n        getPageSize: (listType) =&gt; 3,\\n        tableColumns: [\\n            {\\n                title: &quot;服务名称&quot;,\\n                dataIndex: &quot;serviceName&quot;,\\n                sorter: true, //启用排序\\n            },\\n            {\\n                title: &quot;服务编码&quot;,\\n                dataIndex: &quot;serviceCode&quot;,\\n                sorter: true, //启用排序\\n            },\\n            {\\n                title: &quot;约定端口号&quot;,\\n                dataIndex: &quot;servicePort&quot;,\\n                render: (text, record, index, instance) =&gt; {\\n                    return &lt;span className=&quot;z-text-red&quot;&gt;{text}&lt;/span&gt;;\\n                },\\n            },\\n            {\\n                title: &quot;服务描述&quot;,\\n                dataIndex: &quot;remark&quot;,\\n            },\\n        ],\\n    },\\n};</code></pre>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"pageconfig\\\">pageConfig</h2>\\n<p>除了如下的属性，pageConfig 还包含 <span class=\\\"z-history-href\\\" data-path=\\\"/main/HOC-doc/ZpageWraperHOC-doc\\\">HOC/页面头尾结构：ZpageWrapper</span> 的 props</p>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>参数</th>\\n            <th>说明</th>\\n            <th>类型</th>\\n            <th>默认值</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n         <tr>\\n            <td>searchForm</td>\\n            <td>\\n                <p>1、<code>searchForm.defaultExpanded</code> 是否默认展开表单,(默认false)</p>\\n                <p>2、<code>searchForm.insertTo</code> 此属性可以是:一个已存在的dom元素 || 一个已存在的dom元素的Id || true || false || (tool)=>{return 一个已存在的dom元素 || 一个已存在的dom元素的Id || true || false}，其用途为：将searchForm插到某个dom元素内,如为true则插到页头显示,(默认false)</p>\\n                <p>3、<code>searchForm的其他属性</code>还包含： 请查看 <span class=\\\"z-history-href\\\" data-path=\\\"/main/component-doc/ZsearchForm-doc\\\">组件/ZsearchForm</span> 的 props  (除了onSearch, onReset, noCollapse ,hidden ,其他都有效)。</p>\\n                <p>4、其中<code>searchForm.items</code>的<code>render函数</code>的参数在这里多加tool,如：items:[{render:(form,changeFormItems,tool)=>{},key:\\\"myKey\\\"}]。</p>\\n                <p>5、其中<code>searchForm.items</code>的<code>options函数</code>的参数在这里多加tool,如：items:[{options:(tool)=>options}]。</p>\\n                <p>6、<code>searchForm</code>的其他<code>函数属性</code>除了原有的参数，还多加tool，如 <code>searchForm.afterItemsRendered</code>:(form,methods,tool)=>{}</p>\\n            </td>\\n            <td>object</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>list</td>\\n            <td>列表展示，请看下面的pageConfig.list</td>\\n            <td>object</td>\\n            <td>--</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"pageconfig-list\\\">pageConfig.list</h2>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>参数</th>\\n            <th>说明</th>\\n            <th>类型</th>\\n            <th>默认值</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>listType</td>\\n            <td>列表类型</td>\\n            <td>table | card | simple</td>\\n            <td>table</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> cardCoverRender</td>\\n            <td>listType=\\\"card\\\" | \\\"simple\\\"，卡片的上部渲染函数或者是自定义图标、图片等</td>\\n            <td>function(record){return ;}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>cardSpan</td>\\n            <td>listType=\\\"card\\\" | \\\"simple\\\"，栅栏占格,默认{ xxl:6,xl:8:lg:12:md:24}</td>\\n            <td>number | object</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> panelHeader</td>\\n            <td>列表面板的头部内容,为null则不显示面板头部。也可以是一个对象：{left:(tool)=>span,center:(tool)=>span,right:(tool)=>span,}</td>\\n            <td>string | (tool)=>span | object</td>\\n            <td>列表</td>\\n        </tr>\\n        <tr>\\n            <td>tableParams</td>\\n            <td><a href=\\\"https://ant.design/components/table-cn/\\\" target=\\\"_blank\\\">Antd 的Table参数</a>,除了columns、dataSource、pagination，其他都可用,默认rowKey:\\\"id\\\"</td>\\n            <td>object</td>\\n            <td>{rowkey:\\\"id\\\"}</td>\\n        </tr>\\n        <tr>\\n            <td>tableColumns</td>\\n            <td>表格列数据,<a href=\\\"https://ant.design/components/table-cn/\\\" target=\\\"_blank\\\">同Antd的表格 columns</a>，其中render函数参数为：(text,record,index,tool)=>自定义内容。尽管属性名与\\\"table\\\"相关,当listType=\\\"card\\\"时也是有效的,也是必需的。在此，还额外增加show属性，为是否默认显示此列(字段)。</td>\\n            <td>array[object]</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>actionColumnWidth</td>\\n            <td>表格操作列的宽度</td>\\n            <td>string | number</td>\\n            <td>360</td>\\n        </tr>\\n        <tr>\\n            <td>actionDataIndex</td>\\n            <td>操作区的key</td>\\n            <td>string</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> actionRender</td>\\n            <td>操作区的render,可以自定义操作按钮</td>\\n            <td>(text, record,index,tool,isListCard,getDiffBtn)=>{return [按钮1,按钮2]}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>listApiInterface</td>\\n            <td>获取列表数据的后台接口函数,其必须返回Promise,参数有query:查询表单相关值、分页数据、排序字段,sorter:更多排序数据。接口响应体的data属性支持 array和object类型</td>\\n            <td>(query,sorter,tool) => Promise对象</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>deleteApiInterface</td>\\n            <td>删除按钮后台接口函数,其必须返回Promise,参数有data:每一行数据</td>\\n            <td>(data,tool) => Promise对象</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>showPagination</td>\\n            <td>是否启用分页</td>\\n            <td>boolean</td>\\n            <td>true</td>\\n        </tr>\\n        <tr>\\n            <td>paginationType</td>\\n            <td>分页类型,paging:普通分页，infinite:无限追加</td>\\n            <td>paging | infinite</td>\\n            <td>paging</td>\\n        </tr>\\n        <tr>\\n            <td>getPageSize</td>\\n            <td>设置pageSize的钩子 (listType, isListCard)=>isListCard ? 8 : 10</td>\\n            <td>function</td>\\n            <td>(listType, isListCard,tool)=>isListCard ? 8 : 10</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> showAddBtn</td>\\n            <td>是否显示新增按钮</td>\\n            <td>boolean | function(tool){return false}</td>\\n            <td>true</td>\\n        </tr>\\n        <tr>\\n            <td>addPageRender</td>\\n            <td>新增按钮打开的页面渲染函数,如果函数return false,此函数相当于按钮点击事件的回调；tool参数是列表组件的内部提供的一些工具方法</td>\\n            <td>function(tool){return ReacNode}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> showDetailBtn</td>\\n            <td>是否显示详情按钮</td>\\n            <td>boolean | function(record,index,tool){return false}</td>\\n            <td>true</td>\\n        </tr>\\n        <tr>\\n            <td>detailPageRender</td>\\n            <td>详情按钮打开的页面渲染函数,如果函数return false,此函数相当于按钮点击事件的回调；tool参数是列表组件的内部提供的一些工具方法</td>\\n            <td>function(record,tool){return ReacNode}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> showUpdateBtn</td>\\n            <td>是否显示修改按钮</td>\\n            <td>boolean | function(record,index,tool){return false}</td>\\n            <td>true</td>\\n        </tr>\\n        <tr>\\n            <td>updatePageRender</td>\\n            <td>修改按钮打开的页面渲染函数,如果函数return false,此函数相当于按钮点击事件的回调；tool参数是列表组件的内部提供的一些工具方法</td>\\n            <td>function(record,tool){return ReacNode}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> showDeleteBtn</td>\\n            <td>是否显示删除按钮</td>\\n            <td>boolean | function(record,index,tool){return false}</td>\\n            <td>true</td>\\n        </tr>\\n        <tr>\\n            <td>moreBtnType</td>\\n            <td>更多操作按钮显示类型</td>\\n            <td>rounding | menu</td>\\n            <td>rounding</td>\\n        </tr>\\n        <tr>\\n            <td>moreBtnMap</td>\\n            <td>更多操作按钮的map数据,[{key: \\\"0\\\",name: \\\"默认的按钮\\\", <i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> show: boolean | function(record,index,item){return true;},disabled:boolean}]</td>\\n            <td>array[object]</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>onMoreBtnClick</td>\\n            <td>更多操作按钮点击事件，参数有item:当前按钮的map对象，record:当前行的数据</td>\\n            <td>function(item, record,tool){}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> panelBeforeRender</td>\\n            <td>列表面板上面的渲染函数</td>\\n            <td>function(tool){return ReacNode;}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> panelAfterRender</td>\\n            <td>列表面板下面的渲染函数</td>\\n            <td>function(tool){return ReacNode;}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> moreContentRender</td>\\n            <td>分页控件下面更多内容的渲染函数</td>\\n            <td>function(tool){return ReacNode;}</td>\\n            <td>--</td>\\n        </tr>\\n            <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> addBtnDisabled</td>\\n            <td>是否禁用新建按钮</td>\\n            <td>boolean | function(tool){return false}</td>\\n            <td>false</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> detailBtnDisabled</td>\\n            <td>是否禁用详情按钮</td>\\n            <td>boolean | function(record,index,tool){return false}</td>\\n            <td>false</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> updateBtnDisabled</td>\\n            <td>是否禁用修改按钮</td>\\n            <td>boolean | function(record,index,tool){return false}</td>\\n            <td>false</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> deleteBtnDisabled</td>\\n            <td>是否禁用删除按钮</td>\\n            <td>boolean | function(record,index,tool){return false}</td>\\n            <td>false</td>\\n        </tr>\\n        <tr>\\n            <td>exportSomething</td>\\n            <td>是一个获取tool的钩子，相当于组件的componentDidMount</td>\\n            <td>function(tool){ myTool=tool }</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>addCustomBtnsRender</td>\\n            <td>操作列,可在内置默认的详情、修改、删除按钮之后追加自定义按钮</td>\\n            <td>(text, record,index,tool,isListCard,getDiffBtn)=>{return [getDiffBtn(\\\"primary\\\",\\\"新按钮\\\",(e)=>{}),getDiffBtn(\\\"primary\\\",\\\"新按钮\\\",(e)=>{})]}</td>\\n            <td>--</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"tool-\\\">tool 参数</h2>\\n<p>pageConfig.list 中的一些函数如<code>moreContentRender</code>提供了<code>tool</code>参数出来，有如下内容：</p>\\n<p><code>tool</code>对象不但包含<code>ZerodMainContext</code>提供的东西（请 <span class=\\\"z-history-href\\\" data-path=\\\"/main/context-doc/ZerodMainContext-doc\\\">查看 上下文/ZerodMainContext</span>），比如 tool.showRightModal，还提供如下内容：</p>\\n<h3 id=\\\"tool-getpage\\\">tool.getPage</h3>\\n<p>获取当前列表的分页相关信息的函数</p>\\n<h3 id=\\\"tool-getsearchquery\\\">tool.getSearchQuery</h3>\\n<p>获取当前查询表单中各控件的值的函数</p>\\n<h3 id=\\\"tool-methods\\\">tool.methods</h3>\\n<p>tool.methods 是一个对象，内容如下：</p>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>方法</th>\\n            <th>说明</th>\\n            <th>使用方式</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>showLoading</td>\\n            <td>用于 显示/取消 当前页的loading的方法，必需参数show：true|false</td>\\n            <td>tool.methods.showLoading(true)</td>\\n        </tr>\\n        <tr>\\n            <td>getListData</td>\\n            <td>更新列表数据的方法，会触发pageConfig.list的listApiInterface函数；可选参数有isMerge:是否当前列表追加数据、否的话是覆盖原数据，moreQuery:是一个对象，是更多传入listApiInterface的参数</td>\\n            <td>tool.methods.getListData()</td>\\n        </tr>\\n        <tr>\\n            <td>removeOneData</td>\\n            <td>移除当前列表的一条数据，必需参数rowData:一行的数据 或者 对应pageConfig.list.tableParams.rowKey的数据(默认是id)，如传入 {id:5}，则会移除列表数据中id=5的那一条 </td>\\n            <td>tool.methods.removeOneData({id:5})</td>\\n        </tr>\\n        <tr>\\n            <td>openModal</td>\\n            <td>打开当前列表所在位置关联的rightModal，与tool.showRightModal有区别；必需参数content:窗口的内容</td>\\n            <td>tool.methods.openModal(<\\\\div\\\\>内容<\\\\/div\\\\>)</td>\\n        </tr>\\n        <tr>\\n            <td>closeCurrentModal</td>\\n            <td>关闭当前的rightModal</td>\\n            <td>tool.methods.closeCurrentModal()</td>\\n        </tr>\\n        <tr>\\n            <td>currentListData</td>\\n            <td>获取当前列表的全部数据(数组)的方法</td>\\n            <td>const listData=tool.methods.currentListData()</td>\\n        </tr>\\n        <tr>\\n            <td>setDataState</td>\\n            <td>用于主动更新列表数据状态的方法，必需参数data:列表数据(数组)</td>\\n            <td>tool.methods.setDataState([...tool.methods.currentListData()])</td>\\n        </tr>\\n        <tr>\\n            <td>onAdd</td>\\n            <td>新增按钮的点击事件，会触发pageConfig.list.addPageRender函数</td>\\n            <td>tool.methods.onAdd()</td>\\n        </tr>\\n        <tr>\\n            <td>onUpdate</td>\\n            <td>修改按钮的点击事件，会触发pageConfig.list.updatePageRender函数</td>\\n            <td>tool.methods.onUpdate(record)</td>\\n        </tr>\\n        <tr>\\n            <td>onDetail</td>\\n            <td>详情按钮的点击事件，会触发pageConfig.list.detailPageRender函数</td>\\n            <td>tool.methods.onDetail(record)</td>\\n        </tr>\\n        <tr>\\n            <td>onDelete</td>\\n            <td>删除按钮的点击事件，会触发pageConfig.list.deleteApiInterface函数</td>\\n            <td>tool.methods.onDelete(text,record)</td>\\n        </tr>\\n        <tr>\\n            <td>notice</td>\\n            <td>是一个对象，弹出提示通告的方式，跟ZmainHOC中的noticeType有关，属性函数有success、error、info、warning，它们的参数有 content:提示内容，config:同antd的 notification 和 message 参数</td>\\n            <td>tool.methods.notice.success(\\\"操作成功\\\" [,config])</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h3 id=\\\"tool-router\\\">tool.$router</h3>\\n<p>tool.$router 是一个对象，内容如下：</p>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>属性</th>\\n            <th>说明</th>\\n            <th>使用方式</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>history</td>\\n            <td>可以调用push、replace等跳转路由path得方法，<a href=\\\"https://reacttraining.com/react-router/web/api/history\\\" target=\\\"_blank\\\"> 更多请查看react-router的history</a></td>\\n            <td>tool.$router.history.push(\\\"/login\\\")</td>\\n        </tr>\\n        <tr>\\n            <td>location</td>\\n            <td>当前路由的相关信息,<a href=\\\"https://reacttraining.com/react-router/web/api/location\\\" target=\\\"_blank\\\"> 更多请查看react-router的location</a></td>\\n            <td>tool.$router.location.pathname</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\";","var map = {\n\t\"./area.api.js\": \"eAri\",\n\t\"./config.api.js\": \"5WI2\",\n\t\"./login.api.js\": \"O3gd\",\n\t\"./scheduling.api.js\": \"Lwzs\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Revr\";","module.exports = (__webpack_require__(\"sG4F\"))(498);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// zerod\r\nimport { Ztabs, Zform, ZerodMainContext } from \"zerod\";\r\n// 第三方组件\r\nimport { message } from \"antd\";\r\n\r\nimport api from \"@/App.api.js\";\r\n\r\nclass ServiceTab extends React.PureComponent {\r\n\tstatic propTypes = {\r\n\t\tdata: PropTypes.object,\r\n\t\tformItems: PropTypes.arrayOf(PropTypes.object),\r\n\t};\r\n\tmethods = {\r\n\t\tsaveData: (item, values) => {\r\n\t\t\tthis.props.showModalLoading(true);\r\n\t\t\treturn api.config\r\n\t\t\t\t.updateServiceConfig({\r\n\t\t\t\t\tconfigProperty: values[\"confProperty\"],\r\n\t\t\t\t\tenvironment: item.key,\r\n\t\t\t\t\tserviceId: item.serviceId,\r\n\t\t\t\t})\r\n\t\t\t\t.then((re) => {\r\n\t\t\t\t\tmessage.success(\"更新配置成功\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch((re) => {\r\n\t\t\t\t\tmessage.error(re && re.msg ? re.msg : \"更新配置失败\");\r\n\t\t\t\t})\r\n\t\t\t\t.finally(() => {\r\n\t\t\t\t\tthis.props.showModalLoading(false);\r\n\t\t\t\t});\r\n\t\t},\r\n\t};\r\n\ttabContent = (item) => {\r\n\t\treturn (\r\n\t\t\t<Zform\r\n\t\t\t\titems={this.props.formItems}\r\n\t\t\t\tformDefaultValues={{\r\n\t\t\t\t\tconfProperty: item.serviceConfig[\"confProperty\"],\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={(values) => {\r\n\t\t\t\t\treturn this.methods.saveData(item, values);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\tdefaultTabPanes = [\r\n\t\t{ tab: \"默认环境\", key: \"default\", serviceConfig: {}, content: this.tabContent },\r\n\t\t{ tab: \"开发环境\", key: \"dev\", serviceConfig: {}, content: this.tabContent },\r\n\t\t{ tab: \"测试环境\", key: \"test\", serviceConfig: {}, content: this.tabContent },\r\n\t\t{ tab: \"生产环境\", key: \"prod\", serviceConfig: {}, content: this.tabContent },\r\n\t];\r\n\tgetTabPanes(defaultTabPanes) {\r\n\t\tconst { data } = this.props;\r\n\t\tif (data && data.cfgcPropertyDOList) {\r\n\t\t\treturn defaultTabPanes.map((item, index) => {\r\n\t\t\t\titem.serviceId = data.serviceId;\r\n\t\t\t\tconst tabpanes = data.cfgcPropertyDOList;\r\n\t\t\t\tfor (let i = 0; i < tabpanes.length; i++) {\r\n\t\t\t\t\tif (item.key === tabpanes[i][\"environment\"]) {\r\n\t\t\t\t\t\titem.serviceConfig = tabpanes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst tabPanes = this.getTabPanes(this.defaultTabPanes);\r\n\t\treturn (\r\n\t\t\t<div className=\"z-panel z-margin-top-20\">\r\n\t\t\t\t<div className=\"z-panel-heading\">修改配置信息</div>\r\n\t\t\t\t<div className=\"z-panel-body\">\r\n\t\t\t\t\t<Ztabs tabPanes={tabPanes} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ZerodMainContext.setConsumer(ServiceTab);\r\n","import React from \"react\";\r\n// 第三方组件\r\nimport { Input, InputNumber, Button, message } from \"antd\";\r\n// zerod\r\nimport { ZeditSimpleFormHOC ,zTool} from \"zerod\";\r\n// 后台接口\r\nimport api from \"@/App.api.js\";\r\n\r\n// import components from '@/components/load-components'\r\n\r\nimport defaultConfigData from \"@/mock/serviceDefaultConfigData.js\";\r\n\r\nimport ServiceTab from \"./ServiceTab\";\r\n\r\nfunction getEditPage({ pageType, headerTitle, headerContent, afterSubmitSuccess }) {\r\n\tconst configFormItems = [\r\n\t\t{\r\n\t\t\tkey: \"quick\",\r\n\t\t\tlabel: \"快捷操作\",\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tform.setFieldsValue({\r\n\t\t\t\t\t\t\t\tconfProperty: defaultConfigData.default,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t模板配置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"confProperty\",\r\n\t\t\tlabel: \"默认配置\",\r\n\t\t\tspan:24,\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Input.TextArea\r\n\t\t\t\t\t\trows={15}\r\n\t\t\t\t\t\tplaceholder=\"请输入默认配置\"\r\n\t\t\t\t\t\tref={(el) => {\r\n\t\t\t\t\t\t\tzTool.scrollDisableWheel(el.textAreaRef);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t//antd的 form.getFieldDecorator的options\r\n\t\t\toptions: {\r\n\t\t\t\t//验证规则\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"不能为空。\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\tlet formItems = [\r\n\t\t{\r\n\t\t\tkey: \"serviceCode\",\r\n\t\t\tlabel: \"服务编码\",\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn <Input placeholder=\"请输入服务编码\" />;\r\n\t\t\t},\r\n\t\t\t//antd的 form.getFieldDecorator的options\r\n\t\t\toptions: {\r\n\t\t\t\t//验证规则\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"不能为空。\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"serviceName\",\r\n\t\t\tlabel: \"服务名称\",\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn <Input placeholder=\"请输入服务名称\" />;\r\n\t\t\t},\r\n\t\t\t//antd的 form.getFieldDecorator的options\r\n\t\t\toptions: {\r\n\t\t\t\t//验证规则\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"不能为空。\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"remark\",\r\n\t\t\tlabel: \"服务说明\",\r\n\t\t\tspan:24,\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn <Input.TextArea rows={2} placeholder=\"请输入服务说明\" />;\r\n\t\t\t},\r\n\t\t\t//antd的 form.getFieldDecorator的options\r\n\t\t\toptions: {\r\n\t\t\t\t//验证规则\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"不能为空。\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"servicePort\",\r\n\t\t\t// detailKey:'servicePort',\r\n\t\t\tlabel: \"端口号\",\r\n\t\t\trender: (form) => {\r\n\t\t\t\treturn <InputNumber min={11110} max={65535} step={10} />;\r\n\t\t\t},\r\n\t\t\t//antd的 form.getFieldDecorator的options\r\n\t\t\toptions: {\r\n\t\t\t\t//验证规则\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"不能为空。\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\tif (pageType === \"add\") {\r\n\t\tformItems = [...formItems, ...configFormItems];\r\n\t}\r\n\tconst pageCofig = {\r\n        insertLocation: \"mainModal_top\",\r\n\t\tpageHeader: {\r\n\t\t\tshow: true,\r\n\t\t\t// any\r\n\t\t\ttitle: headerTitle,\r\n\t\t\t//any\r\n\t\t\tcontent: headerContent,\r\n\t\t\t//element | node\r\n\t\t\trightMoreContent: null,\r\n\t\t},\r\n\t\tform: {\r\n\t\t\ttype: pageType,\r\n\t\t\tpanelHeader: pageType === \"add\" ? \"新增服务信息\" : \"修改基础信息\",\r\n\t\t\titems: formItems,\r\n\t\t\tdetailApiInterface: (id, props) => {\r\n\t\t\t\treturn api.config.getServiceDetail({ serviceId: id });\r\n\t\t\t},\r\n\t\t\tsubmitApiInterface: (values, props) => {\r\n\t\t\t\tif (pageType === \"add\") {\r\n\t\t\t\t\treturn api.config.addService(Object.assign({}, values, { environment: \"default\" }));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn api.config.updateService(Object.assign({}, values, { serviceId: props.detailId }));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tafterSubmitSuccess,\r\n\t\t},\r\n\t};\r\n\tif (pageType === \"update\") {\r\n\t\tpageCofig.panelAfterRender = (detail) => {\r\n\t\t\t// console.log(detail);\r\n\t\t\treturn <ServiceTab data={detail} formItems={configFormItems} />;\r\n\t\t};\r\n\t}\r\n\treturn ZeditSimpleFormHOC(pageCofig);\r\n}\r\nexport default getEditPage;\r\n","import React from \"react\";\r\nimport { Input, message,Tag } from \"antd\";\r\nimport { ZsearchListHOC, zTool, Zcascader } from \"zerod\";\r\n\r\nimport api from \"@/App.api.js\";\r\n\r\nimport getEditPage from \"./getEditPage.js\";\r\nimport getDetailPage from \"./getDetailPage.js\";\r\nimport area from \"@/mock/area\";\r\nimport pageHeader from \"@/views/Main/component-doc/ZpageHeader-doc/pageHeader\";\r\n// let listExports = null;\r\nfunction getDemo(pageConfig) {\r\n\tconst config = {\r\n\t\tinsertLocation: \"mainModal\",\r\n\t\tpageHeader: {\r\n\t\t\tshow: true,\r\n\t\t\t...pageHeader,\r\n\t\t},\r\n\t\tsearchForm: {\r\n\t\t\tdefaultExpanded:true,\r\n\t\t\tlabelLayout:\"horizontal\",\r\n\t\t\t// array>[object] | null，如果是null则不显示搜索表单\r\n\t\t\titems: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"serviceCode\",\r\n\t\t\t\t\tlabel: \"服务编码\",\r\n\t\t\t\t\trender: (form,changeItems,tool) => {\r\n\t\t\t\t\t\tconsole.log(\"items_render_tool\",form,changeItems,tool)\r\n\t\t\t\t\t\treturn <Input placeholder=\"请输入内容\" />;\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptions:(tool)=>{\r\n\t\t\t\t\t\tconsole.log(\"form\",tool)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"serviceCode2\",\r\n\t\t\t\t\tlabel: \"服务编码\",\r\n\t\t\t\t\trender: (form) => {\r\n\t\t\t\t\t\treturn <Input placeholder=\"请输入内容\" />;\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"serviceCode3\",\r\n\t\t\t\t\tlabel: \"服务编码\",\r\n\t\t\t\t\trender: (form) => {\r\n\t\t\t\t\t\treturn <Input placeholder=\"请输入内容\" />;\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"serviceName\",\r\n\t\t\t\t\tlabel: \"服务名称\",\r\n\t\t\t\t\trender: (form) => {\r\n\t\t\t\t\t\treturn <Input placeholder=\"请输入内容\" />;\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tafterItemsRendered:(form,methods,tool)=>{\r\n\t\t\t\tconsole.log(\"afterItemsRendered\",form,methods,tool)\r\n\t\t\t}\r\n\t\t},\r\n\t\tlist: {\r\n\t\t\t// table | card\r\n            listType: \"table\",\r\n\t\t\tcardCoverRender: null, // listType==\"card\"时的一个前置render\r\n\t\t\tpanelHeader: \"列表\",\r\n\t\t\t// 表格操作列的字段key\r\n\t\t\tactionDataIndex: \"serviceName\",\r\n\t\t\t// antd  Table的参数\r\n\t\t\ttableParams: {\r\n\t\t\t\texpandedRowRender: (record, index, indent, expanded) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<dl className=\"z-info\">\r\n\t\t\t\t\t\t\t\t<dt className=\"z-info-left z-padding-bottom-10\">服务名称</dt>\r\n\t\t\t\t\t\t\t\t<dd className=\"z-info-right z-padding-bottom-10\">{record.serviceName}</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t\t<dl className=\"z-info\">\r\n\t\t\t\t\t\t\t\t<dt className=\"z-info-left z-padding-bottom-10\">服务编码</dt>\r\n\t\t\t\t\t\t\t\t<dd className=\"z-info-right z-padding-bottom-10\">{record.serviceCode}</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t\t<dl className=\"z-info\">\r\n\t\t\t\t\t\t\t\t<dt className=\"z-info-left z-padding-bottom-10\">服务描述</dt>\r\n\t\t\t\t\t\t\t\t<dd className=\"z-info-right z-padding-bottom-10\">{record.remark}</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t// 表格列map数据数据，同antd的表格 columns\r\n\t\t\ttableColumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"服务名称\",\r\n\t\t\t\t\tdataIndex: \"serviceName\",\r\n\t\t\t\t\tsorter:true,\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"服务编码\",\r\n\t\t\t\t\tdataIndex: \"serviceCode\",\r\n\t\t\t\t\tsorter:true,\r\n\t\t\t\t\trender:(text, record, index, instance)=>{\r\n\t\t\t\t\t\treturn <Tag color=\"volcano\">{text}</Tag>\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"约定端口号\",\r\n\t\t\t\t\tdataIndex: \"servicePort\",\r\n\t\t\t\t\trender: (text, record, index, instance) => {\r\n\t\t\t\t\t\treturn <Tag color=\"magenta\">{text}</Tag>;\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"服务描述\",\r\n\t\t\t\t\tdataIndex: \"remark\",\r\n\t\t\t\t\tshow:false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\t// 是否显示新建按钮\r\n\t\t\tshowAddBtn: true,\r\n\t\t\t// 新建按钮权限控制代码\r\n\t\t\taddBtnPermCode: \"\",\r\n\t\t\taddPageRender: (panel) => {\r\n\t\t\t\tconst AddPage = getEditPage({\r\n\t\t\t\t\tpageType: \"add\",\r\n\t\t\t\t\theaderTitle: \"新增服务配置\",\r\n\t\t\t\t\theaderContent: \"新增一个服务,需要录入服务编码服务名称端口号等信息\",\r\n\t\t\t\t\t// 保存数据成功的回调\r\n\t\t\t\t\tafterSubmitSuccess: (closeRightModal) => {\r\n\t\t\t\t\t\t// 保存数据成功后刷新列表数据\r\n\t\t\t\t\t\tpanel.methods.getListData();\r\n\t\t\t\t\t\t// 关闭右边modal\r\n\t\t\t\t\t\tcloseRightModal();\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\treturn <AddPage />;\r\n\t\t\t},\r\n\t\t\t// 是否显示详情按钮\r\n\t\t\tshowDetailBtn: true,\r\n\t\t\t// 详情按钮权限控制代码\r\n\t\t\tdetailBtnPermCode: \"\",\r\n\t\t\tdetailPageRender: (record) => {\r\n\t\t\t\tconst DetailPage = getDetailPage({ headerTitle: record.serviceName, headerContent: record.remark });\r\n\t\t\t\treturn <DetailPage detailId={record.id} />;\r\n\t\t\t},\r\n\t\t\t// 是否显示修改按钮\r\n\t\t\tshowUpdateBtn: true,\r\n\t\t\t// 修改按钮权限控制代码\r\n\t\t\tupdateBtnPermCod: \"\",\r\n\t\t\tupdatePageRender: (record, panel) => {\r\n\t\t\t\tconst UpdatePage = getEditPage({\r\n\t\t\t\t\tpageType: \"update\",\r\n\t\t\t\t\theaderTitle: record.serviceName,\r\n\t\t\t\t\theaderContent: record.remark,\r\n\t\t\t\t\tafterSubmitSuccess: (closeRightModal) => {\r\n\t\t\t\t\t\tpanel.methods.getListData(); // 保存数据成功后刷新列表数据\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\treturn <UpdatePage detailId={record.id} />;\r\n\t\t\t},\r\n\t\t\t// 是否显示删除按钮\r\n\t\t\tshowDeleteBtn: true,\r\n\t\t\t// 删除按钮权限控制代码\r\n\t\t\tdeleteBtnPermCod: \"\",\r\n\t\t\t// moreBtnType:\"menu\",\r\n\t\t\t//更多操作按钮的map数据\r\n\t\t\tmoreBtnMap: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"0\",\r\n\t\t\t\t\tname: \"0默认的按钮0\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"1\",\r\n\t\t\t\t\tname: \"1默认的按钮1\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"2\",\r\n\t\t\t\t\tname: \"2默认的按钮2\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"3\",\r\n\t\t\t\t\tname: \"3默认的按钮3\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"4\",\r\n\t\t\t\t\tname: \"4默认的按钮4\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"5\",\r\n\t\t\t\t\tname: \"5默认的按钮5\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"6\",\r\n\t\t\t\t\tname: \"6默认的按钮6\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"7\",\r\n\t\t\t\t\tname: \"7默认的按钮7\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\t//更多操作按钮的的点击事件\r\n\t\t\tonMoreBtnClick: (item, record) => {\r\n\t\t\t\tmessage.success(`您当前点击的是[${record.serviceName}]这条数据`);\r\n\t\t\t},\r\n\t\t\t// 获取列表数据的后台接口函数，其必须内部返回Promise\r\n\t\t\tlistApiInterface: (query) => {\r\n\t\t\t\treturn api.config.getServiceList(Object.assign(query, { servcieName: query.serviceName })); //处理字段名\r\n\t\t\t},\r\n\t\t\t// 删除按钮的后台接口函数，其必须内部返回Promise\r\n\t\t\tdeleteApiInterface: (data) => {\r\n\t\t\t\treturn api.config.deleteService({ id: data.id });\r\n\t\t\t},\r\n\t\t\texportSomething: (obj) => {console.log(\"exportSomething\")},\r\n\t\t\t//是否显示分页\r\n\t\t\tshowPagination: true,\r\n\t\t\t// 分页类型 paging | infinite\r\n\t\t\tpaginationType: \"paging\",\r\n\t\t\tpanelBeforeRender: (obj) => {\r\n\t\t\t\treturn <AreaDemo />;\r\n\t\t\t},\r\n\t\t\tpanelAfterRender: (obj) => {\r\n\t\t\t\treturn <div className=\"z-panel z-margin-top-20 z-text-center\"><div className=\"z-panel-body\">panelAfterRender 函数渲染的内容</div></div>;\r\n\t\t\t},\r\n\t\t\tmoreContentRender: (obj) => {\r\n\t\t\t\treturn <div className=\"z-panel is-panel-border z-margin-top-20 z-text-center\"><div className=\"z-panel-body\">moreContentRender 函数渲染的内容</div></div>;\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn ZsearchListHOC(zTool.mergeConfig(config, pageConfig ? pageConfig : {}));\r\n}\r\nclass AreaDemo extends React.PureComponent {\r\n\tmethods = {\r\n\t\tonSelect: (items) => {\r\n\t\t\tlet names = items.map((item) => {\r\n\t\t\t\treturn item.name;\r\n\t\t\t});\r\n\t\t\tmessage.success(`您选择了${names.join('-')}`);\r\n\t\t},\r\n\t};\r\n\tselections = [\"1710121748130980000000166\"];\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"z-panel z-margin-bottom-15\">\r\n\t\t\t\t<div className=\"z-panel-body\">\r\n\t\t\t\t\t<Zcascader\r\n\t\t\t\t\t\ttree={area.data}\r\n\t\t\t\t\t\titemKeys={{ name: \"name\", id: \"areaId\", disabled: \"disable\", children: \"children\" }}\r\n\t\t\t\t\t\tselections={this.selections}\r\n\t\t\t\t\t\tonSelect={this.methods.onSelect}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default getDemo;\r\n","// react\r\nimport React from \"react\";\r\n// zerod\r\n// import { ZsearchListHOC } from \"zerod\";\r\nimport {Tag } from \"antd\";\r\nimport HOC from \"@/HOC/load-HOC.js\";\r\nconst { AmdDocHOC, AshowDemoHOC } = HOC;\r\n// import pageHeader from \"@/views/Main/component-doc/ZpageHeader-doc/pageHeader\";\r\n// import api from \"@/App.api.js\";\r\n\r\nimport getDemo from \"./demos\";\r\n\r\nconst showDemo = function(Component) {\r\n\treturn <Component />;\r\n};\r\nimport doc from \"zerod/components/ZsearchListHOC/doc.md\";\r\nexport default AmdDocHOC(doc, {\r\n\tdemo1: function() {\r\n\t\tconst MyScript = AshowDemoHOC(showDemo(getDemo()), true);\r\n\t\treturn <MyScript />;\r\n\t},\r\n\tdemo2: function() {\r\n\t\tconst MyScript = AshowDemoHOC(\r\n\t\t\tshowDemo(\r\n\t\t\t\tgetDemo({\r\n\t\t\t\t\tlist: {\r\n\t\t\t\t\t\tlistType: \"card\",\r\n\t\t\t\t\t\tpaginationType: \"infinite\",\r\n\t\t\t\t\t\tgetPageSize: (listType, isListCard) => 7,\r\n\t\t\t\t\t},\r\n\t\t\t\t}),\r\n\t\t\t),\r\n\t\t\ttrue,\r\n\t\t);\r\n\t\treturn <MyScript />;\r\n\t},\r\n\tdemo3: function() {\r\n\t\tconst MyScript = AshowDemoHOC(\r\n\t\t\tshowDemo(\r\n\t\t\t\tgetDemo({\r\n\t\t\t\t\tlist: {\r\n\t\t\t\t\t\tlistType: \"simple\",\r\n\t\t\t\t\t\tpaginationType: \"infinite\",\r\n\t\t\t\t\t\tcardSpan:{xxl:8,xl:12,lg:24},\r\n\t\t\t\t\t\tgetPageSize: (listType, isListCard) => 3,\r\n\t\t\t\t\t},\r\n\t\t\t\t}),\r\n\t\t\t),\r\n\t\t\ttrue,\r\n\t\t);\r\n\t\treturn <MyScript />;\r\n\t},\r\n});\r\n","var map = {\n\t\"./AmdDocHOC/index.jsx\": \"pnNO\",\n\t\"./AshowDemoHOC/index.jsx\": \"+fre\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"jjl2\";","module.exports = (__webpack_require__(\"sG4F\"))(313);"],"sourceRoot":""}