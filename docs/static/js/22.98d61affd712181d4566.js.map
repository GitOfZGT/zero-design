{"version":3,"sources":["webpack:///delegated ./node_modules/react-transition-group/index.js from dll-reference _dll_vendor_3d2c9e3bcfbe3a2fd368","webpack:///./node_modules/zerod/components/ZerodMainContext.md","webpack:///./src/views/Main/context-doc/ZerodMainContext-doc/index.jsx","webpack:///./src/Api sync \\.api.js$","webpack:///./src/HOC sync index.jsx$","webpack:///delegated ./node_modules/viewerjs/dist/viewer.js from dll-reference _dll_vendor_3d2c9e3bcfbe3a2fd368"],"names":["AmdDocHOC","HOC","AshowDemoHOC","ModalContent","onClick","props","closeModal","showRightModal","show","modal","closeModalName","nextModalName","content","nexModalContent","scroll","onTransitionend","wrapperEl","title","btnName","React","PureComponent","setConsumer","doc","OpenModal","methods","openMainModal","e","target","_modal","_render","document","body","openAppModal","OutPut","showRouteLoading","showModalLoading","myWrapperDemo","Com","MyScript"],"mappings":"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","file":"static/js/22.98d61affd712181d4566.js","sourcesContent":["module.exports = (__webpack_require__(\"9w1k\"))(489);","module.exports = \"<!--\\n * @Author: zgt\\n * @Date: 2018-08-21 10:59:31\\n * @LastEditors: zgt\\n * @LastEditTime: 2019-08-24 17:47:26\\n * @Description: file content\\n -->\\n\\n<h1 id=\\\"zerodmaincontext\\\">ZerodMainContext</h1>\\n<p>在<code>ZmainHOC</code>中启用了<code>ZerodMainContext</code>的上文，通过<code>ZerodMainContext.setConsumer(组件)</code>包装的组件，可以使用<code>this.props</code>调用以下东西：</p>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-showrightmodal-\\\">打开右抽屉窗口: showRightModal()</h2>\\n<p>showRightModal 参数有：<code>show</code>:是否显示，<code>modal</code>: 任意字符串（窗口的唯一标识，可以理解为 ID） <del>&quot;mainModal&quot; | &quot;appModal&quot; | &quot;mainModal_top&quot; | &quot;appModal_top&quot;</del>，<code>content</code>：窗口的内容，<code>scroll</code>：窗口内是否启用滚动条,<code>onTransitionend</code>:打开关闭的过渡动画执行完后的回调，<code>wrapperEl</code>:窗口的父元素(dom 元素，可选， document.body 或其他)</p>\\n<pre><code class=\\\"language-jsx\\\">//第一种传参\\nthis.props.showRightModal(true, &quot;mainModal&quot;, &lt;div&gt;内容&lt;/div&gt;, true, show =&gt; {});\\n//第二种传参\\nthis.props.showRightModal({\\n    show: true,\\n    modal: &quot;mainModal&quot;, //modal也可以不写，内部会随机一个\\n    content: &lt;div&gt;内容&lt;/div&gt;,\\n    scroll: true,\\n    width: null, //自定义宽度 &quot;400px&quot;||&quot;50%&quot;\\n    mask: true, //是否显示遮罩层\\n    onTransitionend: show =&gt; {},\\n    // wrapperEl:document.body\\n});\\n//关闭窗口\\nthis.props.showRightModal(false, &quot;mainModal&quot;); //关闭对应的\\nthis.props.showRightModal(false); //关闭的是最顶层的那个</code></pre>\\n<p><del><code>modal</code>属性层级：&quot;appModal_top&quot; &gt; &quot;appModal&quot; &gt; &quot;mainModal_top&quot; &gt; &quot;mainModal&quot;</del></p>\\n<p><del>2018-10-01 <code>modal</code>属性新增 &quot;mainModal_top&quot;和&quot;appModal_top&quot;值</del></p>\\n<p>2018-08-22 新增<code>onTransitionend</code>属性，支持如下的传参方式</p>\\n<p>2019-01-11 <code>modal</code>属性不再是固定的，是任意的字符串，窗口数量可以无限叠加；新增<code>wrapperEl</code>属性：窗口的父元素(dom 元素，可以选择 document.body 或其他)</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"open-modal\\\" data-title=\\\"\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">import React from &quot;react&quot;;\\nimport ZpureComponent from &quot;zerod/components/ZpureComponent&quot;;\\nimport { Button } from &quot;antd&quot;;\\nimport { ZerodMainContext } from &quot;zerod&quot;;\\nclass OpenModal extends ZpureComponent {\\n    methods = {\\n        openMainModal: e =&gt; {\\n            this.props.showRightModal(\\n                true,\\n                &quot;mainModal&quot;,\\n                &lt;div className=&quot;z-panel&quot;&gt;\\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;main子路由位置的右边窗口&lt;/div&gt;\\n                &lt;/div&gt;,\\n            );\\n        },\\n        openAppModal: e =&gt; {\\n            this.props.showRightModal(\\n                true,\\n                &quot;appModal&quot;,\\n                &lt;div className=&quot;z-panel&quot;&gt;\\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;最外边的右边窗口&lt;/div&gt;\\n                &lt;/div&gt;,\\n            );\\n        },\\n    };\\n    render() {\\n        return (\\n            &lt;div&gt;\\n                &lt;Button type=&quot;dashed&quot; className=&quot;z-open-modal-btn&quot; onClick={this.methods.openMainModal}&gt;\\n                    打开main子路由位置的右边窗口\\n                &lt;/Button&gt;\\n\\n                &lt;Button type=&quot;dashed&quot; className=&quot;z-open-modal-btn z-margin-left-20&quot; onClick={this.methods.openAppModal}&gt;\\n                    打开最外边的右边窗口\\n                &lt;/Button&gt;\\n            &lt;/div&gt;\\n        );\\n    }\\n}\\nconst OutPut = ZerodMainContext.setConsumer(OpenModal);</code></pre>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-loading-showrouteloading-show-tip-\\\">显示主页路由区域 loading: showRouteLoading(show,tip)</h2>\\n<p>showRouteLoading 方法有一个参数，<code>show</code>:是否显示，<code>tip</code>:自定义文案</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"route-loading\\\" data-title=\\\"this.props.showRouteLoading(true)\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">class MyScript extends ZpureComponent {\\n    methods = {\\n        showRouteLoading: e =&gt; {\\n            this.props.showRouteLoading(true);\\n            setTimeout(() =&gt; {\\n                this.props.showRouteLoading(false);\\n            }, 2000);\\n        },\\n    };\\n    render() {\\n        return (\\n            &lt;div&gt;\\n                &lt;Button type=&quot;primary&quot; className=&quot;z-show-loading-btn&quot; onClick={this.methods.showRouteLoading}&gt;\\n                    显示路由位置的loading\\n                &lt;/Button&gt;\\n            &lt;/div&gt;\\n        );\\n    }\\n}\\nconst OutPut = ZerodMainContext.setConsumer(MyScript);\\nreturn &lt;OutPut /&gt;;</code></pre>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-loading-showmodalloading-show-modal-tip-\\\">显示右边窗口 loading: showModalLoading(show,modal,tip)</h2>\\n<p>showModalLoading 方法有两个参数，<code>show</code>:是否显示，<code>modal</code>: &quot;mainModal&quot; | 与 showRightModal()的 modal 属性对应，<code>tip</code>:自定义文案</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"modal-loading\\\" data-title=\\\"this.props.showModalLoading(true, modal);\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">class MyScript extends ZpureComponent {\\n    methods = {\\n        showModalLoading: (e, modal) =&gt; {\\n            this.props.showRightModal(true, modal);\\n            this.props.showModalLoading(true, modal);\\n            setTimeout(() =&gt; {\\n                this.props.showModalLoading(false, modal);\\n            }, 2000);\\n        },\\n    };\\n    render() {\\n        return (\\n            &lt;div&gt;\\n                &lt;Button\\n                    type=&quot;primary&quot;\\n                    className=&quot;z-show-loading-btn&quot;\\n                    onClick={e =&gt; {\\n                        this.methods.showModalLoading(e, &quot;mainModal&quot;);\\n                    }}\\n                &gt;\\n                    显示 mainModal 的loading\\n                &lt;/Button&gt;\\n                &lt;Button\\n                    type=&quot;primary&quot;\\n                    className=&quot;z-show-loading-btn&quot;\\n                    onClick={e =&gt; {\\n                        this.methods.showModalLoading(e, &quot;mainModal_top&quot;);\\n                    }}\\n                &gt;\\n                    显示 mainModal_top 的loading\\n                &lt;/Button&gt;\\n                &lt;Button\\n                    type=&quot;primary&quot;\\n                    className=&quot;z-show-loading-btn z-margin-left-20&quot;\\n                    onClick={e =&gt; {\\n                        this.methods.showModalLoading(e, &quot;appModal&quot;);\\n                    }}\\n                &gt;\\n                    显示 appModal 的loading\\n                &lt;/Button&gt;\\n                &lt;Button\\n                    type=&quot;primary&quot;\\n                    className=&quot;z-show-loading-btn z-margin-left-20&quot;\\n                    onClick={e =&gt; {\\n                        this.methods.showModalLoading(e, &quot;appModal_top&quot;);\\n                    }}\\n                &gt;\\n                    显示 appModal_top 的loading\\n                &lt;/Button&gt;\\n            &lt;/div&gt;\\n        );\\n    }\\n}\\nconst OutPut = ZerodMainContext.setConsumer(MyScript);\\nreturn &lt;OutPut /&gt;;</code></pre>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-getsidemenudata-\\\">获取左边导航栏数据: getSideMenuData()</h2>\\n<p>getSideMenuData()返回的是一个数组</p>\\n<h2 id=\\\"-getscrollinstance-modal-\\\">获取滚动条的实例：getScrollInstance(modal)</h2>\\n<p>getScrollInstance 方法有一个参数，<code>modal</code>:哪个地方的滚动条: &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-dom-getinsertlocation-el-\\\">获取某个 dom 元素所在的位置：getInsertLocation(el)</h2>\\n<p><code>const insertLocaltion = this.props.getInsertLocation(el);</code> 返回值<code>insertLocaltion</code>是 &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\\n<p>使用例子可参考如下的 getScrollAreaWrapperEl 中 demo 的代码</p>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-getscrollareawrapperel-modal-\\\">获取滚动条区域的包裹元素：getScrollAreaWrapperEl(modal)</h2>\\n<p>getScrollAreaWrapperEl 方法有一个参数，<code>modal</code>:哪个地方的滚动条: &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\\n<p>当需要某块内容绝对定位于主要内容之上，但不想受滚动条滚动时，可用这方法获取对应得<code>wrapperEl</code>，然后使用<code>ReactDOM.createPortal(内容, wrapperEl)</code>将内容插入到<code>wrapperEl</code>内</p>\\n<h3 id=\\\"const-obj-this-props-getscrollareawrapperel-mainmodal-\\\">const obj= this.props.getScrollAreaWrapperEl(&quot;mainModal&quot;)</h3>\\n<h3 id=\\\"obj-wrapperel-\\\">obj.wrapperEl : 滚动条区域的包裹元素</h3>\\n<h3 id=\\\"obj-methods\\\">obj.methods</h3>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>参数</th>\\n            <th>说明</th>\\n            <th>用法</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>setScrollAreaStyle</td>\\n            <td>设置滚动区域的style （除了 height属性）</td>\\n            <td>obj.methods.setScrollAreaStyle({backgroundColor:\\\"#f0f0f0\\\"})</td>\\n        </tr>\\n        <tr>\\n            <td>initScrollAreaSize</td>\\n            <td>设置滚动区域的height</td>\\n            <td>obj.methods.initScrollAreaSize(60)</td>\\n        </tr>\\n        <tr>\\n            <td>setScrollAreaClassName</td>\\n            <td>设置滚动区域的className</td>\\n            <td>obj.methods.setScrollAreaClassName(`z-margin-10 z-flex`})</td>\\n        </tr>\\n        <tr>\\n            <td>resetScrollArea</td>\\n            <td>恢复到调用 setScrollAreaStyle 或 setScrollAreaClassName 之前的样式</td>\\n            <td>obj.methods.resetScrollArea()</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<div class=\\\"z-demo-box\\\" data-render=\\\"myWrapperDemo\\\" data-title=\\\"例如：使用ZeditSimpleFormHOC时，在pageCofig的panelAfterRender放入了如下代码的组件\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">import React from &quot;react&quot;;\\nimport ZpureComponent from &quot;zerod/components/ZpureComponent&quot;;\\nimport ReactDom from &quot;react-dom&quot;;\\nimport { ZerodMainContext } from &quot;zerod&quot;;\\nclass MoreCofig extends ZpureComponent {\\n    componentDidMount() {\\n        // 首先得获取this.boxEl元素所在得位置\\n        const insetLocaltion = this.props.getInsertLocation(this.boxEl);\\n        // 获取insetLocaltion所在滚动区域得包裹元素\\n        this.obj = this.props.getScrollAreaWrapperEl(insetLocaltion);\\n        // 由于将 60px 高度的内容插入到滚动区域外边，\\n        // 需要将 滚动区域 的高度计算为`calc(100% - ZpageHeader的高度 - 60px)`\\n        this.obj.methods.initScrollAreaSize(60);\\n        this.setState({});\\n    }\\n    componentWillUnmount() {\\n        // 组件销毁前 恢复 滚动区域的原始样式\\n        this.obj.methods.resetScrollArea();\\n    }\\n    render() {\\n        return (\\n            &lt;div className=&quot;z-panel z-margin-top-20&quot; ref={el =&gt; (this.boxEl = el)}&gt;\\n                &lt;div className=&quot;z-panel-body&quot;&gt;panelAfterRender&lt;/div&gt;\\n                {/* 将如下的内容插入到了 滚动条区域外面 不受滚动条影响 */}\\n                {this.obj\\n                    ? ReactDom.createPortal(\\n                            &lt;div\\n                                style={{\\n                                    position: &quot;absolute&quot;,\\n                                    bottom: &quot;0px&quot;,\\n                                    width: &quot;100%&quot;,\\n                                    height: &quot;60px&quot;,\\n                                    backgroundColor: &quot;white&quot;,\\n                                    borderTop: &quot;1px solid #ddd&quot;,\\n                                }}\\n                            &gt;\\n                                内容\\n                            &lt;/div&gt;,\\n                            this.obj.wrapperEl,\\n                      )\\n                    : null}\\n            &lt;/div&gt;\\n        );\\n    }\\n}\\nexport default ZerodMainContext.setConsumer(MoreCofig);</code></pre>\\n<h2 id=\\\"-setscrolltotop-witch-\\\">下次滚动条更新的时候，让滚动条回到顶部: setScrollToTop(witch)</h2>\\n<p>setScrollToTop 方法有一个参数，<code>witch</code>:哪个地方滚动条更新: &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-getuserinfo-\\\">获取用户登录信息: getUserInfo()</h2>\\n<p>ZmainHOC 的 componentDidMount 钩子中的 callback 回调注入的 userInfo 数据，可以通过 getUserInfo()获得</p>\\n<h2 id=\\\"-settemporarystorage-data-gettemporarystorage-\\\">临时存储器: setTemporaryStorage(data) 和 getTemporaryStorage()</h2>\\n<p>setTemporaryStorage(data)用于跨路由页面临时存储一些数据，data 参数是一个对象：{&quot;key&quot;:&quot;存储的数据&quot;}；getTemporaryStorage()获取当前存储器的数据</p>\\n<h2 id=\\\"-router\\\">$router</h2>\\n<p>$router:是一个对象，提供 history 和 location 属性</p>\\n<h2 id=\\\"setinitdata-userinfo-menudata-mapkeys-mainroutes-\\\">setInitData(userInfo = {}, menuData = [], mapKeys={}, mainRoutes=[])</h2>\\n<p><code>setInitData</code>就是 ZmainHOC 的 pageConfig 的 componentDidMount 的 callback 方法</p>\\n\";","import React from \"react\";\r\nimport HOC from \"@/HOC/load-HOC.js\";\r\nimport { Button } from \"antd\";\r\nimport { ZerodMainContext, ZeditSimpleFormHOC } from \"zerod\";\r\nconst { AmdDocHOC, AshowDemoHOC } = HOC;\r\nimport doc from \"zerod/components/ZerodMainContext.md\";\r\n\r\nimport getConfig from \"../../HOC-doc/ZeditSimpleFormHOC-doc/pageConfig\";\r\n\r\nclass ModalContent extends React.PureComponent {\r\n\tonClick = () => {\r\n\t\tif (this.props.closeModal) {\r\n\t\t\tthis.props.showRightModal({\r\n\t\t\t\tshow: false,\r\n\t\t\t\tmodal: this.props.closeModalName,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.props.showRightModal({\r\n\t\t\t\tshow: true,\r\n\t\t\t\tmodal: this.props.nextModalName,\r\n\t\t\t\tcontent: this.props.nexModalContent,\r\n\t\t\t\tscroll: true,\r\n\t\t\t\tonTransitionend: (show) => {},\r\n\t\t\t\twrapperEl: this.props.wrapperEl,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"z-panel z-margin-bottom-15\">\r\n\t\t\t\t<div className=\"z-panel-heading\">{this.props.title ? this.props.title : \"标题\"}</div>\r\n\t\t\t\t<div className=\"z-panel-heading\">{this.props.content}</div>\r\n\t\t\t\t<div className=\"z-panel-heading\">\r\n\t\t\t\t\t<Button type=\"primary\" onClick={this.onClick}>\r\n\t\t\t\t\t\t{this.props.btnName}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nModalContent = ZerodMainContext.setConsumer(ModalContent);\r\nexport default AmdDocHOC(doc, {\r\n\t\"open-modal\": function() {\r\n\t\tclass OpenModal extends React.PureComponent {\r\n\t\t\tmethods = {\r\n\t\t\t\topenMainModal: (e) => {\r\n\t\t\t\t\te.target._modal = \"mainModal\";\r\n\t\t\t\t\te.target._render = function() {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<ModalContent\r\n\t\t\t\t\t\t\t\t\ttitle=\"这里是 mainModal 窗口\"\r\n\t\t\t\t\t\t\t\t\tcontent={`this.props.showRightModal({\r\n\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\tmodal: \"mainModal_top\",\r\n\t\t\t\t\t\t\t\t\t\tcontent: <div className=\"z-panel\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel-heading\">这里是 mainModal_top 窗口</div>\r\n\t\t\t\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t\t\t\t\tscroll: true,\r\n\t\t\t\t\t\t\t\t\t\tonTransitionend: (show) => {},\r\n\t\t\t\t\t\t\t\t\t});`}\r\n\t\t\t\t\t\t\t\t\tbtnName=\"打开下一个窗口\"\r\n\t\t\t\t\t\t\t\t\tnextModalName=\"mainModal_top\"\r\n\t\t\t\t\t\t\t\t\tnexModalContent={\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel-heading\">这里是 mainModal_top 窗口</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ModalContent\r\n\t\t\t\t\t\t\t\t\ttitle=\"这里是 mainModal 窗口\"\r\n\t\t\t\t\t\t\t\t\tcontent={`this.props.showRightModal({\r\n\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\tmodal: \"mainModal_body\",\r\n\t\t\t\t\t\t\t\t\t\tcontent: <div className=\"z-panel\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel-heading\">这里是 mainModal_body 窗口</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t\t\t\t\tscroll: true,\r\n\t\t\t\t\t\t\t\t\t\tonTransitionend: (show) => {},\r\n\t\t\t\t\t\t\t\t\t\twrapperEl: document.body,\r\n\t\t\t\t\t\t\t\t\t});`}\r\n\t\t\t\t\t\t\t\t\tbtnName=\"打开在document.body的窗口\"\r\n\t\t\t\t\t\t\t\t\twrapperEl={document.body}\r\n\t\t\t\t\t\t\t\t\tnextModalName=\"mainModal_body\"\r\n\t\t\t\t\t\t\t\t\tnexModalContent={\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel-heading\">这里是 mainModal_body 窗口</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ModalContent\r\n\t\t\t\t\t\t\t\t\ttitle=\"这里是 mainModal 窗口\"\r\n\t\t\t\t\t\t\t\t\tcontent={`this.props.showRightModal({\r\n\t\t\t\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t\t\t\t});`}\r\n\t\t\t\t\t\t\t\t\tbtnName=\"关闭当前窗口\"\r\n\t\t\t\t\t\t\t\t\tcloseModal={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// this.props.showRightModal(\r\n\t\t\t\t\t// \ttrue,\r\n\t\t\t\t\t// \t\"mainModal\",\r\n\t\t\t\t\t// \t<div className=\"z-panel\">\r\n\t\t\t\t\t// \t\t<div className=\"z-panel-heading\">标题</div>\r\n\t\t\t\t\t// \t\t<div className=\"z-panel-heading\">main子路由位置的右边窗口</div>\r\n\t\t\t\t\t// \t</div>,\r\n\t\t\t\t\t// );\r\n\t\t\t\t},\r\n\t\t\t\topenAppModal: (e) => {\r\n\t\t\t\t\te.target._modal = \"appModal\";\r\n\t\t\t\t\te.target._render = function() {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ModalContent\r\n\t\t\t\t\t\t\t\tcontent=\"这里是 appModal 窗口\"\r\n\t\t\t\t\t\t\t\tbtnName=\"打开 appModal_top 窗口\"\r\n\t\t\t\t\t\t\t\tnextModalName=\"appModal_top\"\r\n\t\t\t\t\t\t\t\tnexModalContent={\r\n\t\t\t\t\t\t\t\t\t<div className=\"z-panel\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel-heading\">这里是 appModal_top 窗口</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// this.props.showRightModal(\r\n\t\t\t\t\t// \ttrue,\r\n\t\t\t\t\t// \t\"appModal\",\r\n\t\t\t\t\t// \t<div className=\"z-panel\">\r\n\t\t\t\t\t// \t\t<div className=\"z-panel-heading\">标题</div>\r\n\t\t\t\t\t// \t\t<div className=\"z-panel-heading\">最外边的右边窗口</div>\r\n\t\t\t\t\t// \t</div>,\r\n\t\t\t\t\t// );\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\trender() {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button type=\"primary\" className=\"z-open-modal-btn\" onClick={this.methods.openMainModal}>\r\n\t\t\t\t\t\t\t打开 \"mainModal\" 窗口\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tclassName=\"z-open-modal-btn z-margin-left-20\"\r\n\t\t\t\t\t\t\tonClick={this.methods.openAppModal}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t打开 \"appModal\" 窗口\r\n\t\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst OutPut = ZerodMainContext.setConsumer(OpenModal);\r\n\t\treturn <OutPut />;\r\n\t},\r\n\t\"route-loading\": function() {\r\n\t\tclass OpenModal extends React.PureComponent {\r\n\t\t\tmethods = {\r\n\t\t\t\tshowRouteLoading: (e) => {\r\n\t\t\t\t\te.target._modal = \"mainRoute\";\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\trender() {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button type=\"primary\" className=\"z-show-loading-btn\" onClick={this.methods.showRouteLoading}>\r\n\t\t\t\t\t\t\t显示 \"mainRoute\" 的loading\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst OutPut = ZerodMainContext.setConsumer(OpenModal);\r\n\t\treturn <OutPut />;\r\n\t},\r\n\t\"modal-loading\": function() {\r\n\t\tclass OpenModal extends React.PureComponent {\r\n\t\t\tmethods = {\r\n\t\t\t\tshowModalLoading: (e, modal) => {\r\n\t\t\t\t\te.target._modal = modal;\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\trender() {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tclassName=\"z-show-loading-btn\"\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tthis.methods.showModalLoading(e, \"mainModal\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t显示 \"mainModal\" 的loading\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tclassName=\"z-show-loading-btn z-margin-left-20\"\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tthis.methods.showModalLoading(e, \"mainModal_top\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t显示 \"mainModal_top\" 的loading\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tclassName=\"z-show-loading-btn z-margin-left-20\"\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tthis.methods.showModalLoading(e, \"appModal\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t显示 \"appModal\" 的loading\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tclassName=\"z-show-loading-btn z-margin-left-20\"\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tthis.methods.showModalLoading(e, \"appModal_top\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t显示 \"appModal_top\" 的loading\r\n\t\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst OutPut = ZerodMainContext.setConsumer(OpenModal);\r\n\t\treturn <OutPut />;\r\n\t},\r\n\tmyWrapperDemo: function() {\r\n\t\tconst Com = ZeditSimpleFormHOC(getConfig(\"add\"));\r\n\t\tconst MyScript = AshowDemoHOC(<Com />, true);\r\n\t\treturn <MyScript />;\r\n\t},\r\n});\r\n","var map = {\n\t\"./area.api.js\": \"eAri\",\n\t\"./config.api.js\": \"5WI2\",\n\t\"./login.api.js\": \"O3gd\",\n\t\"./scheduling.api.js\": \"Lwzs\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Revr\";","var map = {\n\t\"./AmdDocHOC/index.jsx\": \"pnNO\",\n\t\"./AshowDemoHOC/index.jsx\": \"+fre\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"jjl2\";","module.exports = (__webpack_require__(\"9w1k\"))(497);"],"sourceRoot":""}