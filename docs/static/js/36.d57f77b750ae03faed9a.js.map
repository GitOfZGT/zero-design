{"version":3,"sources":["webpack:///./node_modules/zerod/components/Ztabs/doc.md","webpack:///./src/views/Main/component-doc/Ztabs-doc/index.jsx","webpack:///delegated ./node_modules/_viewerjs@1.3.3@viewerjs/dist/viewer.js from dll-reference _dll_vendor_e823eb2f1294e4241445","webpack:///./src/HOC sync index.jsx$"],"names":["AmdDocHOC","HOC","doc","demo1","Myjavascript","tabPanes","tab","key","content","React","PureComponent"],"mappings":";;;;;AAAA,uTAAuT,YAAY,iCAAiC,sCAAsC,UAAU,QAAQ,YAAY,YAAY,+CAA+C,6BAA6B,YAAY,UAAU,aAAa,OAAO,iBAAiB,YAAY,EAAE,YAAY,YAAY,UAAU,aAAa,OAAO,iBAAiB,YAAY,EAAE,YAAY,yBAAyB,UAAU,0BAA0B,OAAO,gCAAgC,EAAE,+BAA+B,WAAW,eAAe,YAAY,SAAS,gBAAgB,qBAAqB,gBAAgB,cAAc,OAAO,OAAO,GAAG,sbAAsb,gEAAgE,6G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAx6C;AAGA;IACQA,S,GAAcC,gE,CAAdD,S;AACR;AACeA,wEAAS,CAACE,oEAAD,EAAM;AAC7BC,OAAK,EAAE,iBAAW;AAAA,QACXC,YADW;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,cAEhBC,QAFgB,GAEL,CACV;AAAEC,aAAG,EAAE,MAAP;AAAeC,aAAG,EAAE,GAApB;AAAyBC,iBAAO,EAAE;AAAlC,SADU,EAEV;AAAEF,aAAG,EAAE,MAAP;AAAeC,aAAG,EAAE,GAApB;AAAyBC,iBAAO,EAAE;AAAlC,SAFU,EAGV;AAAEF,aAAG,EAAE,MAAP;AAAeC,aAAG,EAAE,GAApB;AAAyBC,iBAAO,EAAE,mBAAI;AAAC,mBAAO,MAAP;AAAc;AAArD,SAHU,CAFK;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAOP;AACR,iBAAO;AAAO,oBAAQ,EAAE,KAAKH;AAAtB,YAAP;AACA;AATe;;AAAA;AAAA,MACUI,4CAAK,CAACC,aADhB;;AAWjB,WAAO,2DAAC,YAAD,OAAP;AACA;AAb4B,CAAN,CAAxB,E;;;;;;;ACNA,oD;;;;;;;ACAA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B","file":"static/js/36.d57f77b750ae03faed9a.js","sourcesContent":["module.exports = \"<h1 id=\\\"-ztabs\\\">标签页：Ztabs</h1>\\n<p><code>Ztabs</code>是将<code>antd</code>的<code>Tabs</code>、<code>Tabs.TabPane</code> 的结构转成数据结构直接渲染的方式，</p>\\n<p>1、基本使用</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"demo1\\\" data-title=\\\"基本使用\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">import React from &quot;react&quot;;import ZpureComponent from &quot;zerod/components/ZpureComponent&quot;;\\nimport { Ztabs } from &quot;zerod&quot;;\\n\\nclass Myjavascript extends ZpureComponent {\\n    tabPanes = [\\n        { tab: &quot;基本信息&quot;, key: &quot;1&quot;, content: &quot;基本信息内容&quot; },\\n        { tab: &quot;配置信息&quot;, key: &quot;2&quot;, content: &quot;配置信息内容&quot; },\\n        {\\n            tab: &quot;其他信息&quot;,\\n            key: &quot;3&quot;,\\n            content: () =&gt; {\\n                return &quot;其他内容&quot;;\\n            },\\n        },\\n    ];\\n    render() {\\n        return &lt;Ztabs tabPanes={this.tabPanes} /&gt;;\\n    }\\n}</code></pre>\\n<h2 id=\\\"ztabs-props\\\">Ztabs 的 Props</h2>\\n<p><code>Ztabs</code>除了<code>tabPanes</code>参数，还有同<a href=\\\"https://ant.design/components/tabs-cn/\\\">Antd 的 Tabs 组件的参数</a></p>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>参数</th>\\n            <th>说明</th>\\n            <th>类型</th>\\n            <th>默认值</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>tabPanes</td>\\n            <td>选项卡数据，数据结构有{tab ：tab名称，key:对应Antd的Tabs组件 activeKey，content：string | ()=>内容 }</td>\\n            <td>array[object]</td>\\n            <td>--</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\";","import React from \"react\";\r\nimport { Ztabs } from \"zerod\";\r\nimport { Input, message } from \"antd\";\r\nimport HOC from \"@/HOC/load-HOC.js\";\r\nconst { AmdDocHOC } = HOC;\r\nimport doc from \"zerod/components/Ztabs/doc.md\";\r\nexport default AmdDocHOC(doc, {\r\n\tdemo1: function() {\r\n\t\tclass Myjavascript extends React.PureComponent {\r\n\t\t\ttabPanes = [\r\n\t\t\t\t{ tab: \"基本信息\", key: \"1\", content: \"基本信息内容\" },\r\n\t\t\t\t{ tab: \"配置信息\", key: \"2\", content: \"配置信息内容\" },\r\n\t\t\t\t{ tab: \"其他信息\", key: \"3\", content: ()=>{return \"其他内容\"} },\r\n\t\t\t];\r\n\t\t\trender() {\r\n\t\t\t\treturn <Ztabs tabPanes={this.tabPanes} />;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn <Myjavascript />;\r\n\t},\r\n});\r\n","module.exports = (__webpack_require__(\"sG4F\"))(498);","var map = {\n\t\"./AmdDocHOC/index.jsx\": \"pnNO\",\n\t\"./AshowDemoHOC/index.jsx\": \"+fre\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"jjl2\";"],"sourceRoot":""}