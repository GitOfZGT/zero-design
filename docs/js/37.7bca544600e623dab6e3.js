(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{"4CQA":function(t,e){t.exports='<h1 id="ztreeinput-">ZtreeInput 树编辑控件</h1>\n<p>1、inputType === &quot;double&quot;</p>\n<div class="z-demo-box" data-render="demo1" data-title="double"></div>\n\n<pre><code class="language-jsx">import React from &quot;react&quot;;\nimport { ZtreeInput } from &quot;zerod&quot;;\nclass Myjavascript extends React.PureComponent {\n    state = {\n        tree: [],\n    };\n    treeChange = value =&gt; {\n        this.setState({\n            tree: value,\n        });\n    };\n    render() {\n        return (\n            &lt;div style={{ width: &quot;500px&quot; }}&gt;\n                &lt;ZtreeInput value={this.state.tree} onChange={this.treeChange} /&gt;\n            &lt;/div&gt;\n        );\n    }\n}\nexport default Myjavascript;</code></pre>\n<p>2、inputType === &quot;single&quot;</p>\n<div class="z-demo-box" data-render="demo2" data-title="single"></div>\n\n<pre><code class="language-jsx">import React from &quot;react&quot;;\nimport { ZtreeInput } from &quot;zerod&quot;;\nclass Myjavascript extends React.PureComponent {\n    state = {\n        tree: [],\n    };\n    treeChange = value =&gt; {\n        this.setState({\n            tree: value,\n        });\n    };\n    render() {\n        return (\n            &lt;div style={{ width: &quot;500px&quot; }}&gt;\n                &lt;ZtreeInput inputType=&quot;single&quot; value={this.state.tree} onChange={this.treeChange} /&gt;\n            &lt;/div&gt;\n        );\n    }\n}\nexport default Myjavascript;</code></pre>\n<p>3、multiple === false</p>\n<div class="z-demo-box" data-render="demo3" data-title="multiple === false"></div>\n\n<pre><code class="language-jsx">import React from &quot;react&quot;;\nimport { ZtreeInput } from &quot;zerod&quot;;\nclass Myjavascript extends React.PureComponent {\n    state = {\n        tree: [],\n    };\n    treeChange = value =&gt; {\n        this.setState({\n            tree: value,\n        });\n    };\n    render() {\n        return (\n            &lt;div style={{ width: &quot;500px&quot; }}&gt;\n                &lt;ZtreeInput multiple={false} value={this.state.tree} onChange={this.treeChange} /&gt;\n            &lt;/div&gt;\n        );\n    }\n}\nexport default Myjavascript;</code></pre>\n<h2 id="ztreeinput-props">ZtreeInput 的 props</h2>\n<p>可追 <code>className</code></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>inputType</td>\n<td>输入框类型</td>\n<td>single | double</td>\n<td>double</td>\n</tr>\n<tr>\n<td>value</td>\n<td>tree 数据, array[{label,value,children}]</td>\n<td>array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>新增兄弟节点、上移、下移、移除、新增子节点、输入框取消聚焦 都会触发 onChange</td>\n<td>function(newTree){}</td>\n<td>--</td>\n</tr>\n<tr>\n<td>multiple</td>\n<td>是否多级节点，如为 false, value 里是不存在 children 的</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n</tbody></table>\n'},"SX+g":function(t,e,n){t.exports=n("sG4F")(498)},jjl2:function(t,e,n){var r={"./AmdDocHOC/index.jsx":"pnNO","./AshowDemoHOC/index.jsx":"+fre"};function a(t){var e=o(t);return n(e)}function o(t){if(!n.o(r,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return r[t]}a.keys=function(){return Object.keys(r)},a.resolve=o,t.exports=a,a.id="jjl2"},zOpV:function(t,e,n){"use strict";n.r(e);var r=n("sUcT"),a=n("MhH0"),o=n.n(a),u=n("FcZB"),d=n.n(u),l=n("Ratc"),i=n.n(l),s=n("0j8+"),c=n.n(s),p=n("0kOG"),h=n.n(p),v=n("uqIC"),g=n.n(v),m=n("ebhq"),f=n("4CQA"),C=n.n(f),y=m.a.AmdDocHOC;e.default=y(C.a,{demo1:function(t){var e=function(t){function e(){var t,n;o()(this,e);for(var r=arguments.length,a=new Array(r),u=0;u<r;u++)a[u]=arguments[u];return(n=i()(this,(t=c()(e)).call.apply(t,[this].concat(a)))).state={tree:[]},n.treeChange=function(t){n.setState({tree:t})},n}return h()(e,t),d()(e,[{key:"render",value:function(){return g.a.createElement("div",{style:{width:"500px"}},g.a.createElement(r.a,{value:this.state.tree,onChange:this.treeChange}))}}]),e}(g.a.PureComponent);return g.a.createElement(e,null)},demo2:function(t){var e=function(t){function e(){var t,n;o()(this,e);for(var r=arguments.length,a=new Array(r),u=0;u<r;u++)a[u]=arguments[u];return(n=i()(this,(t=c()(e)).call.apply(t,[this].concat(a)))).state={tree:[]},n.treeChange=function(t){n.setState({tree:t})},n}return h()(e,t),d()(e,[{key:"render",value:function(){return g.a.createElement("div",{style:{width:"500px"}},g.a.createElement(r.a,{inputType:"single",value:this.state.tree,onChange:this.treeChange}))}}]),e}(g.a.PureComponent);return g.a.createElement(e,null)},demo3:function(t){var e=function(t){function e(){var t,n;o()(this,e);for(var r=arguments.length,a=new Array(r),u=0;u<r;u++)a[u]=arguments[u];return(n=i()(this,(t=c()(e)).call.apply(t,[this].concat(a)))).state={tree:[]},n.treeChange=function(t){n.setState({tree:t})},n}return h()(e,t),d()(e,[{key:"render",value:function(){return g.a.createElement("div",{style:{width:"500px"}},g.a.createElement(r.a,{multiple:!1,value:this.state.tree,onChange:this.treeChange}))}}]),e}(g.a.PureComponent);return g.a.createElement(e,null)}})}}]);
//# sourceMappingURL=37.7bca544600e623dab6e3.js.map