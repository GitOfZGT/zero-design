{"version":3,"sources":["webpack:///./src/views/Main/component-doc/ZfullLayer-doc/index.jsx","webpack:///delegated ./node_modules/_viewerjs@1.3.3@viewerjs/dist/viewer.js from dll-reference _dll_vendor_e823eb2f1294e4241445","webpack:///./src/HOC sync index.jsx$","webpack:///./node_modules/zerod/components/ZfullLayer/doc.md"],"names":["AmdDocHOC","HOC","AshowDemoHOC","Contents","openRightModal","_this","props","showLayerRightModal","show","modal","content","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","width","mask","onTransitionend","showLayerModalLoading","setTimeout","style","margin","antd_es_button__WEBPACK_IMPORTED_MODULE_0__","type","onClick","this","React","PureComponent","ZerodLayerContext","setConsumer","Header","height","doc","demo1","Dom","windowType","header","module","exports","__webpack_require__","map","./AmdDocHOC/index.jsx","./AshowDemoHOC/index.jsx","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve"],"mappings":"0SAGQA,EAA4BC,IAA5BD,UAAWE,EAAiBD,IAAjBC,aAIbC,qLACLC,eAAiB,WAChBC,EAAKC,MAAMC,qBACVC,MAAM,EACNC,MAAO,MACPC,QACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,OAGFC,MAAO,QACPC,MAAM,EACNC,gBAAiB,WAChBZ,EAAKC,MAAMY,uBAAsB,EAAM,OACvCC,WAAW,WACVd,EAAKC,MAAMY,uBAAsB,EAAO,QACtC,iEAKL,OACCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUM,OAASL,MAAO,MAAOM,OAAQ,WACvDV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAAAS,EAAA,GAAQC,KAAK,UAAUC,QAASC,KAAKrB,gBAArC,yBAzBkBsB,IAAMC,eAiC7BxB,EAAWyB,IAAkBC,YAAY1B,OACnC2B,2IAEJ,OACCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCAAwCM,OAASW,OAAQ,SACvEpB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAAS,EAAA,GAAQC,KAAK,WAAb,eALgBG,IAAMC,eAWZ3B,YAAUgC,KACxBC,MAAO,WACN,IAAMC,EAAMhC,GAEViC,WAAY,QACZC,OAAQzB,EAAAC,EAAAC,cAACiB,EAAD,MACRpB,QAASC,EAAAC,EAAAC,cAACV,EAAD,QAEV,GAED,OAAOQ,EAAAC,EAAAC,cAACqB,EAAD,iCC9DTG,EAAAC,QAAAC,EAAA,mCCAA,IAAAC,GACAC,wBAAA,OACAC,2BAAA,QAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAL,EAAAM,GAEA,SAAAC,EAAAF,GACA,IAAAL,EAAAQ,EAAAP,EAAAI,GAAA,CACA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAR,EAAAI,GAEAD,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAAX,IAEAG,EAAAU,QAAAP,EACAT,EAAAC,QAAAK,EACAA,EAAAE,GAAA,2BCvBAR,EAAAC,QAAA","file":"js/24.ddd37211c806e8f19cb6.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport HOC from \"@/HOC/load-HOC.js\";\r\nconst { AmdDocHOC, AshowDemoHOC } = HOC;\r\nimport doc from \"zerod/components/ZfullLayer/doc.md\";\r\nimport ZfullLayer from \"zerod/components/ZfullLayer\";\r\nimport ZerodLayerContext from \"zerod/components/ZerodLayerContext\";\r\nclass Contents extends React.PureComponent {\r\n\topenRightModal = () => {\r\n\t\tthis.props.showLayerRightModal({\r\n\t\t\tshow: true,\r\n\t\t\tmodal: \"abc\",\r\n\t\t\tcontent: (\r\n\t\t\t\t<div className=\"z-panel\">\r\n\t\t\t\t\t<div className=\"z-panel-body\">内容</div>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t\twidth: \"300px\",\r\n\t\t\tmask: true,\r\n\t\t\tonTransitionend: () => {\r\n\t\t\t\tthis.props.showLayerModalLoading(true, \"abc\");\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.props.showLayerModalLoading(false, \"abc\");\r\n\t\t\t\t}, 2000);\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"z-panel\" style={{ width: \"90%\", margin: \"0 auto\" }}>\r\n\t\t\t\t<div className=\"z-panel-heading\">面板标题</div>\r\n\t\t\t\t<div className=\"z-panel-body\">\r\n\t\t\t\t\t<Button type=\"primary\" onClick={this.openRightModal}>\r\n\t\t\t\t\t\t打开RightModal\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nContents = ZerodLayerContext.setConsumer(Contents);\r\nclass Header extends React.PureComponent {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"z-padding-left-20 z-flex-items-center\" style={{ height: \"100%\" }}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button type=\"primary\">按钮</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default AmdDocHOC(doc, {\r\n\tdemo1: function() {\r\n\t\tconst Dom = AshowDemoHOC(\r\n\t\t\t{\r\n\t\t\t\twindowType: \"layer\",\r\n\t\t\t\theader: <Header />,\r\n\t\t\t\tcontent: <Contents />,\r\n\t\t\t},\r\n\t\t\tfalse,\r\n\t\t);\r\n\t\treturn <Dom />;\r\n\t},\r\n});\r\n","module.exports = (__webpack_require__(\"sG4F\"))(498);","var map = {\n\t\"./AmdDocHOC/index.jsx\": \"pnNO\",\n\t\"./AshowDemoHOC/index.jsx\": \"+fre\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"jjl2\";","module.exports = \"<h1 id=\\\"-zfulllayer\\\">浮层窗口：ZfullLayer</h1>\\n<p><code>ZfullLayer</code> 是一个背景黑色半透的覆盖在整个文档之上的窗口组件，分 header 和 children 两个内容区域</p>\\n<p>1、基本使用</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"demo1\\\" data-title=\\\"\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">import React from &quot;react&quot;;\\nimport { Button } from &quot;antd&quot;;\\nimport ZfullLayer from &quot;zerod/components/ZfullLayer&quot;;\\nimport ZerodLayerContext from &quot;zerod/components/ZerodLayerContext&quot;;\\nclass Contents extends React.PureComponent {\\n    openRightModal = () =&gt; {\\n        //打开RightModal\\n        this.props.showLayerRightModal({\\n            show: true,\\n            modal: &quot;abc&quot;,\\n            content: (\\n                &lt;div className=&quot;z-panel&quot;&gt;\\n                    &lt;div className=&quot;z-panel-body&quot;&gt;内容&lt;/div&gt;\\n                &lt;/div&gt;\\n            ),\\n            width: &quot;300px&quot;,\\n            mask: false,\\n            onTransitionend: () =&gt; {\\n                //显示/隐藏modal的loading\\n                this.props.showLayerModalLoading(true, &quot;abc&quot;);\\n                setTimeout(() =&gt; {\\n                    this.props.showLayerModalLoading(false, &quot;abc&quot;);\\n                }, 2000);\\n            },\\n        });\\n    };\\n    render() {\\n        return (\\n            &lt;div className=&quot;z-panel&quot; style={{ width: &quot;90%&quot;, margin: &quot;0 auto&quot; }}&gt;\\n                &lt;div className=&quot;z-panel-heading&quot;&gt;面板标题&lt;/div&gt;\\n                &lt;div className=&quot;z-panel-body&quot;&gt;\\n                    &lt;Button type=&quot;primary&quot; onClick={this.openRightModal}&gt;\\n                        打开RightModal\\n                    &lt;/Button&gt;\\n                &lt;/div&gt;\\n            &lt;/div&gt;\\n        );\\n    }\\n}\\nContents = ZerodLayerContext.setConsumer(Contents);\\n\\nclass Header extends React.PureComponent {\\n    render() {\\n        return (\\n            &lt;div className=&quot;z-padding-left-20 z-flex-items-center&quot; style={{ height: &quot;100%&quot; }}&gt;\\n                &lt;div&gt;\\n                    &lt;Button type=&quot;primary&quot;&gt;按钮&lt;/Button&gt;\\n                &lt;/div&gt;\\n            &lt;/div&gt;\\n        );\\n    }\\n}\\nclass Myjavascript extends React.PureComponent {\\n    methods = {\\n        open: () =&gt; {\\n            const amplify = this.ZfullLayerMethods.showLayer(\\n                true,\\n                () =&gt; {\\n                    console.log(&quot;open&quot;);\\n                },\\n                true, //是否先缩放\\n            );\\n            //再放大效果\\n            amplify();\\n        },\\n    };\\n    exportMethods = (m) =&gt; {\\n        this.ZfullLayerMethods = m;\\n    };\\n    render() {\\n        return (\\n            &lt;div&gt;\\n                &lt;div className=&quot;z-panel&quot;&gt;\\n                    &lt;div className=&quot;z-panel-body&quot;&gt;\\n                        &lt;Button type=&quot;primary&quot; onClick={this.methods.open}&gt;\\n                            打开ZfullLayer\\n                        &lt;/Button&gt;\\n                    &lt;/div&gt;\\n                &lt;/div&gt;\\n                &lt;ZfullLayer header={&lt;Header /&gt;} exportMethods={this.exportMethods}&gt;\\n                    &lt;Contents /&gt;\\n                &lt;/ZfullLayer&gt;\\n            &lt;/div&gt;\\n        );\\n    }\\n}</code></pre>\\n<h2 id=\\\"zfulllayer-props\\\">ZfullLayer 的 props</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>参数</th>\\n<th>说明</th>\\n<th>类型</th>\\n<th>默认值</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td>header</td>\\n<td>头部区域内容，高度有 64px</td>\\n<td>ReactNode</td>\\n<td>--</td>\\n</tr>\\n<tr>\\n<td>children</td>\\n<td>主体区域内容</td>\\n<td>ReactNode</td>\\n<td>--</td>\\n</tr>\\n<tr>\\n<td>exportMethods</td>\\n<td>在 componentDidMount 导出组件内部可调用的方法，methods 请往下看</td>\\n<td>function(methods){}</td>\\n<td>--</td>\\n</tr>\\n<tr>\\n<td>scroll</td>\\n<td>主体区域内容是否需要滚动条</td>\\n<td>boolean</td>\\n<td>true</td>\\n</tr>\\n<tr>\\n<td>type</td>\\n<td>主题</td>\\n<td>normal | dark</td>\\n<td>dark</td>\\n</tr>\\n</tbody></table>\\n<p>注： header 和 children 两个内容区域通信，请使用 <code>React.createRef()</code></p>\\n<p>一般场景只允许同时打开一个<code>ZfullLayer</code></p>\\n<h2 id=\\\"methods-zerodlayercontext-methods-showlayer-true-null-true-\\\">methods 同 ZerodLayerContext 提供的内容如： methods.showLayer(true,null,true)();</h2>\\n<p><code>ZfullLayer</code>内部子孙组件经过<code>import ZerodLayerContext from &quot;zerod/components/ZerodLayerContext&quot;</code>的 <code>ZerodLayerContext.setConsumer(子孙组件)</code>包装后，<code>props</code>提供如下内容：</p>\\n<table>\\n<thead>\\n<tr>\\n<th>方法</th>\\n<th>说明</th>\\n<th>使用</th>\\n<th>返回值类型</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td>showLayer</td>\\n<td>显示/隐藏 ZfullLayer 的方法,当 isScale 为 true 时返回一个函数，调用这个函数主体内容会有一个放大的过渡动画</td>\\n<td>showLayer(show,callback,isScale)</td>\\n<td>--</td>\\n</tr>\\n<tr>\\n<td>showLoading</td>\\n<td>显示/隐藏 ZfullLayer 内部的 loading</td>\\n<td>showLoading(show)</td>\\n<td>--</td>\\n</tr>\\n<tr>\\n<td>showLayerRightModal</td>\\n<td>在 ZfullLayer 中打开有抽屉窗口，参数同 <span class=\\\"z-history-href\\\" data-path=\\\"/main/context-doc/ZerodMainContext-doc\\\">上下文/ZerodMainContent 的 showRightModal</span></td>\\n<td>showLayerRightModal({})</td>\\n<td>--</td>\\n</tr>\\n<tr>\\n<td>showLayerModalLoading</td>\\n<td>在 ZfullLayer 中显示对应窗口的 loading，同 <span class=\\\"z-history-href\\\" data-path=\\\"/main/context-doc/ZerodMainContext-doc\\\">上下文/ZerodMainContent 的 showModalLoading</span></td>\\n<td>showLayerModalLoading(show,modal)</td>\\n<td>--</td>\\n</tr>\\n<tr>\\n<td>getLayerModalScrollInstance</td>\\n<td>在 ZfullLayer 中获取对应窗口的滚动条的实例，同 <span class=\\\"z-history-href\\\" data-path=\\\"/main/context-doc/ZerodMainContext-doc\\\">上下文/ZerodMainContent 的 getScrollInstance</span></td>\\n<td>getLayerModalScrollInstance(modal)</td>\\n<td>object</td>\\n</tr>\\n<tr>\\n<td>getLayerScrollAreaWrapperEl</td>\\n<td>在 ZfullLayer 中获取对应窗口的滚动条区域的包裹元素，同 <span class=\\\"z-history-href\\\" data-path=\\\"/main/context-doc/ZerodMainContext-doc\\\">上下文/ZerodMainContent 的 getScrollAreaWrapperEl</span></td>\\n<td>getLayerScrollAreaWrapperEl(modal)</td>\\n<td>Elment</td>\\n</tr>\\n</tbody></table>\\n\";"],"sourceRoot":""}