(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{"SX+g":function(t,n,d){t.exports=d("sG4F")(498)},auj8:function(t,n){t.exports='<h1 id="-zrightmodal">右抽屉窗口：ZrightModal</h1>\n<p><code>ZrightModal</code>是从右边弹出的一种窗口模式，可以减少多层路由跳转的一种交互方式</p>\n<p>如果是使用<code>ZmainHOC</code>实现了主页布局，基本上不再需要单独使用<code>ZrightModal</code>，请查看 上下文的<code>ZerodMainContext</code></p>\n<p>1、基本使用</p>\n<div class="z-demo-box" data-render="demo1" data-title="以下是截取了`ZmainHOC `中使用`Zlayout.Zbody + ZrightModal`的部分代码展示"></div>\n\n<pre><code class="language-jsx">&lt;Zlayout.Zbody\n    className={`${cssClass[&quot;z-main-body&quot;]} z-scroll-color app-body`}\n    scroll\n    getScrollInstance={(instance) =&gt; (this.mainBodyScrollInstance = instance)}\n    insertToScrollWraper={\n        &lt;Zlayout.Template&gt;\n            &lt;ZpageLoading showLoading={this.state.isShowLoading} /&gt;\n            &lt;ZrightModal\n                show={this.state.isShowRightModal} //打开modal的状态\n                scroll //启用滚动条\n                getScrollInstance={(instance) =&gt; (this.rightBodyScrollInstance = instance)} //获取滚动条实例\n                showLoading={this.state.isShowModalLoading} //显示loading的状态\n                onClose={() =&gt; {\n                    this.methods.showRightModal(false); //关闭modal\n                }}\n                onTransitionend={this.methods.afterModalTransitionend} //modal过渡动画执行完之后\n            &gt;\n                {this.state.rightModalContent}\n            &lt;/ZrightModal&gt;\n        &lt;/Zlayout.Template&gt;\n    }\n&gt;\n    &lt;section&gt;\n        &lt;Switch&gt;{this.navRoutes}&lt;/Switch&gt;\n    &lt;/section&gt;\n&lt;/Zlayout.Zbody&gt;</code></pre>\n<h2 id="zrightmodal-props">ZrightModal 的 props</h2>\n<table>\n    <thead>\n        <tr>\n            <th>参数</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>children</td>\n            <td>即this.props.children</td>\n            <td>any</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>show</td>\n            <td>是否打开ZrightModal</td>\n            <td>boolean</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>width</td>\n            <td>窗口宽度</td>\n            <td>string</td>\n            <td>90%</td>\n        </tr>\n        <tr>\n            <td>zIndex</td>\n            <td>层级</td>\n            <td>number</td>\n            <td>999</td>\n        </tr>\n        <tr>\n            <td>onClose</td>\n            <td>点击关闭按钮的事件，()=>{}</td>\n            <td>boolean</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>showLoading</td>\n            <td>是否显示loading , 可以不使用这个属性，通过 ref 取得 ZpageLoading 的实例调用 methods.showLoading(show) ,也可以用 exportMethods 导出的参数调用</td>\n            <td>boolean</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>scroll</td>\n            <td>是否启用滚动条</td>\n            <td>boolean</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>getScrollInstance</td>\n            <td>获取滚动条的实例，scroll=true时有效</td>\n            <td>function</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>onTransitionend</td>\n            <td>当打开或关闭ZrightModal的过渡动画完成后执行的钩子</td>\n            <td>function</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>exportMethods</td>\n            <td>在 componentDidMount 导出组件内部可调用的方法，methods 请往下看  </td>\n            <td>function(methods){}</td>\n            <td>--</td>\n        </tr>\n    </tbody>\n</table>\n\n<h2 id="zrightmodal-methods">ZrightModal 的 methods</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>使用</th>\n<th>返回值类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>showLoading</td>\n<td>ZpageLoading 在没有 showLoading 属性情况下使用</td>\n<td>methods.showLoading(show)</td>\n<td>--</td>\n</tr>\n</tbody></table>\n'},bBUQ:function(t,n,d){"use strict";d.r(n);var o=d("uqIC"),e=d.n(o),a=d("ebhq"),r=d("auj8"),s=d.n(r),l=a.a.AmdDocHOC,i=a.a.AshowDemoHOC;n.default=l(s.a,{demo1:function(){var t=i(e.a.createElement("div",{className:"z-padding-20"},e.a.createElement("div",{className:"z-panel"},e.a.createElement("div",{className:"z-panel-body z-text-center"},"我就是这个窗口"))),!1);return e.a.createElement(t,null)}})},jjl2:function(t,n,d){var o={"./AmdDocHOC/index.jsx":"pnNO","./AshowDemoHOC/index.jsx":"+fre"};function e(t){var n=a(t);return d(n)}function a(t){if(!d.o(o,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return o[t]}e.keys=function(){return Object.keys(o)},e.resolve=a,t.exports=e,e.id="jjl2"}}]);
//# sourceMappingURL=32.5057bfdf46c86b074400.js.map