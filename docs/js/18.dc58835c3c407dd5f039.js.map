{"version":3,"sources":["webpack:///delegated ./node_modules/_viewerjs@1.3.3@viewerjs/dist/viewer.js from dll-reference _dll_vendor_e823eb2f1294e4241445","webpack:///./node_modules/_antd@3.16.4@antd/es/tree/util.js","webpack:///./node_modules/_antd@3.16.4@antd/es/tree/DirectoryTree.js","webpack:///./node_modules/_antd@3.16.4@antd/es/tree/Tree.js","webpack:///./node_modules/_antd@3.16.4@antd/es/tree/index.js","webpack:///./node_modules/zerod/components/ZeditorTreeHOC/TreeTitle.jsx","webpack:///./node_modules/zerod/components/ZeditorTreeHOC/ZtreePanel.jsx","webpack:///./node_modules/zerod/components/ZeditorTreeHOC/index.jsx","webpack:///./src/views/Main/HOC-doc/ZeditorTreeHOC-doc/index.jsx","webpack:///./src/HOC sync index.jsx$","webpack:///./node_modules/zerod/components/ZeditorTreeHOC/doc.md"],"names":["module","exports","__webpack_require__","Record","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","traverseNodesKey","rootChildren","callback","util","forEach","node","key","children","props","calcRangeKeys","expandedKeys","startKey","endKey","keys","record","None","End","matchKey","push","Start","indexOf","convertDirectoryKeysToNodes","restKeys","nodes","index","splice","_typeof","obj","constructor","DirectoryTree_toConsumableArray","DirectoryTree_arrayWithoutHoles","DirectoryTree_iterableToArray","DirectoryTree_nonIterableSpread","_extends","assign","target","arguments","source","hasOwnProperty","apply","this","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","__rest","s","e","t","getOwnPropertySymbols","getIcon","isLeaf","expanded","_react_16_8_6_reactfrom_dll_reference_dll_vendor_e823eb2f1294e4241445","icon","type","DirectoryTree_DirectoryTree","_React$Component","DirectoryTree","_this","instance","Constructor","_classCallCheck","onExpand","info","setUncontrolledState","onClick","event","_this$props","expandAction","onDebounceExpand","onDoubleClick","_this$props2","onSelect","newSelectedKeys","_this$props3","multiple","_this$state$expandedK","state","nativeEvent","_node$props$eventKey","eventKey","newState","newEvent","selected","ctrlPick","ctrlKey","metaKey","shiftPick","shiftKey","lastSelectedKey","cachedSelectedKeys","selectedNodes","Set","concat","selectedKeys","setTreeRef","tree","expandFolderNode","onNodeExpand","_omit_js_1_0_2_omit_js_es","setState","renderDirectoryTree","_ref","getPrefixCls","_a","customizePrefixCls","prefixCls","className","_this$state","connectClassName","_classnames_2_2_6_classnames_default","Tree_Tree","ref","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","keyEntities","defaultSelectedKeys","getFullKeyList","debouncefrom_dll_reference_dll_vendor_e823eb2f1294e4241445_default","leading","subClass","superClass","create","value","_inherits","protoProps","staticProps","_createClass","config_provider","nextProps","defaultProps","showIcon","react_lifecycles_compat_esfrom_dll_reference_dll_vendor_e823eb2f1294e4241445","tree_DirectoryTree","Tree_typeof","Tree_extends","_defineProperty","Tree_defineProperties","Tree_possibleConstructorReturn","Tree_assertThisInitialized","Tree_getPrototypeOf","Tree_setPrototypeOf","Tree","Tree_classCallCheck","renderSwitcherIcon","switcherIcon","loading","showLine","theme","switcherCls","switcherOriginCls","renderTree","_ref2","_classNames","_switcherIcon","blockNode","checkable","es","nodeProps","Tree_inherits","Tree_createClass","TreeNode","openAnimation","appear","es_tree","TreeTitle","hasMoreMenu","moreBtnMap","moreMenu","tool","methods","handleMenuClick","items","item","show","disbaled","name","others","objectWithoutProperties_default","_show","undefined","_disbaled","moreBtnType","objectSpread_default","disabled","_react_16_8_6_reactfrom_dll_reference_dll_vendor_e823eb2f1294e4241445_default","a","createElement","menu","Item","extends_default","onMoreBtnClick","detailBtnClick","onDetailClick","stopPropagation","addChildBtnClick","onAddChildClick","updateBtnClick","onUpdateClick","deleteBtnClick","onDeleteClick","getBtn","btnName","click","Zbutton","size","onVisibleChange","moreIconEl","removeClass","addClass","_this2","showDetailBtn","showUpdateBtn","showAddChildBtn","showDeleteBtn","detailBtnDisabled","updateBtnDisabled","addChildBtnDisabled","deleteBtnDisabled","_showDetailBtn","_showUpdateBtn","_showAddChildBtn","_showDeleteBtn","_detailBtnDisabled","_updateBtnDisabled","_addChildBtnDisabled","_deleteBtnDisabled","moreBtn","el","cssClass","ZroundingButton","dropdown","overlay","trigger","placement","React","PureComponent","propTypes","PropTypes","object","string","any","number","arrayOf","func","oneOfType","bool","defaultConfig","const_getListConfig","ZtreePanel","treeDataKeys","assign_default","id","const_getMethods","assertThisInitialized_default","loadTreeData","moreQuery","querys","searchQuery","dataType","isObject","apiPromise","treeApiInterface","getExportSomething","isPromise","showLoading","then","re","treeData","data","catch","notice","error","msg","finally","loadChildData","treeNode","childrenKey","promise_default","resolve","ayncChild","childApiInterface","deepCopy","dataRef","toConsumableArray_default","onSearch","query","onReset","commonActionArr","newTree","action","is_array_default","slice","sourceItem","keyObj","removeOneData","removeItemFromTree","addOneChildData","pushItemToTree","replaceOneData","replaceItemFromTree","getDropType","dropKey","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","dropData","dragData","dropItem","defineProperty_default","dragItem","itemsFromTree","currentItem","_ref3","dropToGap","dropDone","_this$methods$droped","droped","dropAction","inLast","inFirst","unshiftItemToTree","insertBefore","insertBeforeItemFromTree","insertAfter","insertAfterItemFromTree","onDrop","treeProps","hasDrop","modal","confirm","title","content","okText","okType","cancelText","onOk","onDelete","text","rejects","deleteApiInterface","success","onAdd","addPageRender","openModal","onAddChild","addChildPageRender","onUpdate","updatePageRender","onDetail","detailPageRender","openSearch","ZsearchFormMethods","unfold","expandedSearch","currentTreeData","setDataState","searchFormConfig","const_extendPanelFormConfig","colFormItems","const_getPanelDefaultFormItems","defaultExpanded","getSearchFormMethods","const_getMainTool","getSearchQuery","$router","history","location","_this3","map","idKey","nameKey","cilds","otherData","selectable","ZeditorTreeHOC_TreeTitle","getTreeNode","exportSomething","insertLocation","const_getInsertLocation","hocWrapperEl","_this4","const_searchFormNode","_ref5","treeOthers","loadData","panelBeforeRender","getPanleHeader","searchForm","autoExpandParent","onRightClick","console","log","moreContentRender","panelAfterRender","ZpureComponent","panelHeader","element","updateBtnPermCod","deleteBtnPermCod","showAddBtn","responseKeys","const_getPanleHeader","ZerodMainContext","setConsumer","withRouter","PageWraper","ZpageWraperHOC","ZeditorTreeHOC","pageConfig","mergeConfig","_ZpureComponent","List","_getPrototypeOf2","classCallCheck_default","_len","args","_key","possibleConstructorReturn_default","getPrototypeOf_default","config","pageWraper","const_getPageWrapperProps","pageId","GenNonDuplicateID","inherits_default","createClass_default","pageHeader","ZeditorTreeHOC_ZtreePanel","AmdDocHOC","HOC","AshowDemoHOC","doc","demo1","_tree","label","render","form","input","placeholder","draggable","onDragEnd","detail","onDragEnter","onDragLeave","onDragOver","onDragStart","done","addBtnPermCode","panel","message","setTimeout","area","MyScript","Component","showDemo","components_ZeditorTreeHOC","./AmdDocHOC/index.jsx","./AshowDemoHOC/index.jsx","webpackContext","req","webpackContextResolve","Error","code"],"mappings":"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","file":"js/18.dc58835c3c407dd5f039.js","sourcesContent":["module.exports = (__webpack_require__(\"sG4F\"))(498);","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport { getNodeChildren, convertTreeToEntities } from \"rc-tree/es/util\";\nvar Record;\n\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {})); // TODO: Move this logic into `rc-tree`\n\n\nfunction traverseNodesKey(rootChildren, callback) {\n  var nodeList = getNodeChildren(rootChildren) || [];\n\n  function processNode(node) {\n    var key = node.key,\n        children = node.props.children;\n\n    if (callback(key, node) !== false) {\n      traverseNodesKey(children, callback);\n    }\n  }\n\n  nodeList.forEach(processNode);\n}\n\nexport function getFullKeyList(children) {\n  var _convertTreeToEntitie = convertTreeToEntities(children),\n      keyEntities = _convertTreeToEntitie.keyEntities;\n\n  return Object.keys(keyEntities);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\nexport function calcRangeKeys(rootChildren, expandedKeys, startKey, endKey) {\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(rootChildren, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(rootChildren, keys) {\n  var restKeys = _toConsumableArray(keys);\n\n  var nodes = [];\n  traverseNodesKey(rootChildren, function (key, node) {\n    var index = restKeys.indexOf(key);\n\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent, convertTreeToEntities } from \"rc-tree/es/util\";\nimport { ConfigConsumer } from '../config-provider';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Tree from './Tree';\nimport { calcRangeKeys, getFullKeyList, convertDirectoryKeysToNodes } from './util';\nimport Icon from '../icon';\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return React.createElement(Icon, {\n      type: \"file\"\n    });\n  }\n\n  return React.createElement(Icon, {\n    type: expanded ? 'folder-open' : 'folder'\n  });\n}\n\nvar DirectoryTree =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DirectoryTree, _React$Component);\n\n  function DirectoryTree(props) {\n    var _this;\n\n    _classCallCheck(this, DirectoryTree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DirectoryTree).call(this, props));\n\n    _this.onExpand = function (expandedKeys, info) {\n      var onExpand = _this.props.onExpand;\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      }); // Call origin function\n\n\n      if (onExpand) {\n        return onExpand(expandedKeys, info);\n      }\n\n      return undefined;\n    };\n\n    _this.onClick = function (event, node) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          expandAction = _this$props.expandAction; // Expand the tree\n\n      if (expandAction === 'click') {\n        _this.onDebounceExpand(event, node);\n      }\n\n      if (onClick) {\n        onClick(event, node);\n      }\n    };\n\n    _this.onDoubleClick = function (event, node) {\n      var _this$props2 = _this.props,\n          onDoubleClick = _this$props2.onDoubleClick,\n          expandAction = _this$props2.expandAction; // Expand the tree\n\n      if (expandAction === 'doubleClick') {\n        _this.onDebounceExpand(event, node);\n      }\n\n      if (onDoubleClick) {\n        onDoubleClick(event, node);\n      }\n    };\n\n    _this.onSelect = function (keys, event) {\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple,\n          children = _this$props3.children;\n      var _this$state$expandedK = _this.state.expandedKeys,\n          expandedKeys = _this$state$expandedK === void 0 ? [] : _this$state$expandedK;\n      var node = event.node,\n          nativeEvent = event.nativeEvent;\n      var _node$props$eventKey = node.props.eventKey,\n          eventKey = _node$props$eventKey === void 0 ? '' : _node$props$eventKey;\n      var newState = {}; // We need wrap this event since some value is not same\n\n      var newEvent = _extends({}, event, {\n        selected: true\n      }); // Windows / Mac single pick\n\n\n      var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n      var shiftPick = nativeEvent.shiftKey; // Generate new selected keys\n\n      var newSelectedKeys;\n\n      if (multiple && ctrlPick) {\n        // Control click\n        newSelectedKeys = keys;\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n      } else if (multiple && shiftPick) {\n        // Shift click\n        newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(_this.cachedSelectedKeys || []), _toConsumableArray(calcRangeKeys(children, expandedKeys, eventKey, _this.lastSelectedKey)))));\n        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n      } else {\n        // Single click\n        newSelectedKeys = [eventKey];\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = [event.node];\n      }\n\n      newState.selectedKeys = newSelectedKeys;\n\n      if (onSelect) {\n        onSelect(newSelectedKeys, newEvent);\n      }\n\n      _this.setUncontrolledState(newState);\n    };\n\n    _this.setTreeRef = function (node) {\n      _this.tree = node;\n    };\n\n    _this.expandFolderNode = function (event, node) {\n      var isLeaf = node.props.isLeaf;\n\n      if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n        return;\n      } // Get internal rc-tree\n\n\n      var internalTree = _this.tree.tree; // Call internal rc-tree expand function\n      // https://github.com/ant-design/ant-design/issues/12567\n\n      internalTree.onNodeExpand(event, node);\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var newState = omit(state, Object.keys(_this.props));\n\n      if (Object.keys(newState).length) {\n        _this.setState(newState);\n      }\n    };\n\n    _this.renderDirectoryTree = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          props = __rest(_a, [\"prefixCls\", \"className\"]);\n\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          selectedKeys = _this$state.selectedKeys;\n      var prefixCls = getPrefixCls('tree', customizePrefixCls);\n      var connectClassName = classNames(\"\".concat(prefixCls, \"-directory\"), className);\n      return React.createElement(Tree, _extends({\n        icon: getIcon,\n        ref: _this.setTreeRef\n      }, props, {\n        prefixCls: prefixCls,\n        className: connectClassName,\n        expandedKeys: expandedKeys,\n        selectedKeys: selectedKeys,\n        onSelect: _this.onSelect,\n        onClick: _this.onClick,\n        onDoubleClick: _this.onDoubleClick,\n        onExpand: _this.onExpand\n      }));\n    };\n\n    var defaultExpandAll = props.defaultExpandAll,\n        defaultExpandParent = props.defaultExpandParent,\n        expandedKeys = props.expandedKeys,\n        defaultExpandedKeys = props.defaultExpandedKeys,\n        children = props.children;\n\n    var _convertTreeToEntitie = convertTreeToEntities(children),\n        keyEntities = _convertTreeToEntitie.keyEntities; // Selected keys\n\n\n    _this.state = {\n      selectedKeys: props.selectedKeys || props.defaultSelectedKeys || []\n    }; // Expanded keys\n\n    if (defaultExpandAll) {\n      _this.state.expandedKeys = getFullKeyList(props.children);\n    } else if (defaultExpandParent) {\n      _this.state.expandedKeys = conductExpandParent(expandedKeys || defaultExpandedKeys, keyEntities);\n    } else {\n      _this.state.expandedKeys = expandedKeys || defaultExpandedKeys;\n    }\n\n    _this.onDebounceExpand = debounce(_this.expandFolderNode, 200, {\n      leading: true\n    });\n    return _this;\n  }\n\n  _createClass(DirectoryTree, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderDirectoryTree);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var newState = {};\n\n      if ('expandedKeys' in nextProps) {\n        newState.expandedKeys = nextProps.expandedKeys;\n      }\n\n      if ('selectedKeys' in nextProps) {\n        newState.selectedKeys = nextProps.selectedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return DirectoryTree;\n}(React.Component);\n\nDirectoryTree.defaultProps = {\n  showIcon: true,\n  expandAction: 'click'\n};\npolyfill(DirectoryTree);\nexport default DirectoryTree;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport DirectoryTree from './DirectoryTree';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport animation from '../_util/openAnimation';\n\nvar Tree =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tree).apply(this, arguments));\n\n    _this.renderSwitcherIcon = function (prefixCls, switcherIcon, _ref) {\n      var isLeaf = _ref.isLeaf,\n          expanded = _ref.expanded,\n          loading = _ref.loading;\n      var showLine = _this.props.showLine;\n\n      if (loading) {\n        return React.createElement(Icon, {\n          type: \"loading\",\n          className: \"\".concat(prefixCls, \"-switcher-loading-icon\")\n        });\n      }\n\n      if (showLine) {\n        if (isLeaf) {\n          return React.createElement(Icon, {\n            type: \"file\",\n            className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n          });\n        }\n\n        return React.createElement(Icon, {\n          type: expanded ? 'minus-square' : 'plus-square',\n          className: \"\".concat(prefixCls, \"-switcher-line-icon\"),\n          theme: \"outlined\"\n        });\n      } else {\n        var switcherCls = \"\".concat(prefixCls, \"-switcher-icon\");\n\n        if (isLeaf) {\n          return null;\n        } else if (switcherIcon) {\n          var switcherOriginCls = switcherIcon.props.className || '';\n          return React.cloneElement(switcherIcon, {\n            className: classNames(switcherOriginCls, switcherCls)\n          });\n        } else {\n          return React.createElement(Icon, {\n            type: \"caret-down\",\n            className: switcherCls,\n            theme: \"filled\"\n          });\n        }\n      }\n    };\n\n    _this.setTreeRef = function (node) {\n      _this.tree = node;\n    };\n\n    _this.renderTree = function (_ref2) {\n      var _classNames;\n\n      var getPrefixCls = _ref2.getPrefixCls;\n      var props = _this.props;\n      var customizePrefixCls = props.prefixCls,\n          className = props.className,\n          showIcon = props.showIcon,\n          _switcherIcon = props.switcherIcon,\n          blockNode = props.blockNode;\n      var checkable = props.checkable;\n      var prefixCls = getPrefixCls('tree', customizePrefixCls);\n      return React.createElement(RcTree, _extends({\n        ref: _this.setTreeRef\n      }, props, {\n        prefixCls: prefixCls,\n        className: classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _classNames)),\n        checkable: checkable ? React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-checkbox-inner\")\n        }) : checkable,\n        switcherIcon: function switcherIcon(nodeProps) {\n          return _this.renderSwitcherIcon(prefixCls, _switcherIcon, nodeProps);\n        }\n      }), _this.props.children);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderTree);\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nexport { Tree as default };\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n  checkable: false,\n  showIcon: false,\n  openAnimation: _extends({}, animation, {\n    appear: null\n  }),\n  blockNode: false\n};","import Tree from './Tree';\nexport default Tree;","import React from \"react\";import ZpureComponent from \"../ZpureComponent\";\r\nimport PropTypes from \"prop-types\";\r\nimport {  Dropdown, Menu } from \"antd\";\r\nimport cssClass from \"./style.scss\";\r\nimport { ZroundingButton } from \"../ZroundingButton\";\r\nimport { Zbutton } from \"../Zbutton\";\r\nimport { removeClass, addClass } from \"../zTool\";\r\nclass TreeTitle extends React.PureComponent {\r\n\tstatic propTypes = {\r\n\t\ttool: PropTypes.object,\r\n\t\tname: PropTypes.string,\r\n\t\trecord: PropTypes.any,\r\n\t\tindex: PropTypes.number,\r\n\t\tmoreBtnType: PropTypes.string,\r\n\t\tmoreBtnMap: PropTypes.arrayOf(PropTypes.object),\r\n\t\tonMoreBtnClick: PropTypes.func,\r\n\t\tonDetailClick: PropTypes.func,\r\n\t\tonAddChildClick: PropTypes.func,\r\n\t\tonUpdateClick: PropTypes.func,\r\n\t\tonDeleteClick: PropTypes.func,\r\n\t\tshowDetailBtn: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否显示详情按钮\r\n\t\tshowAddChildBtn: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否显示新增子节点按钮\r\n\t\tshowUpdateBtn: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否显示修改按钮\r\n\t\tshowDeleteBtn: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否显示删除按钮\r\n\r\n\t\tdetailBtnDisabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否禁用详情按钮\r\n\t\taddChildBtnDisabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否禁用新增子节点按钮\r\n\t\tupdateBtnDisabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否禁用修改按钮\r\n\t\tdeleteBtnDisabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否禁用删除按钮\r\n\t};\r\n\r\n\thasMoreMenu = this.props.moreBtnMap && this.props.moreBtnMap.length;\r\n\r\n\t//更多操作按钮\r\n\tmoreMenu = (record, index) => {\r\n\t\tconst tool = this.props.tool;\r\n\t\tconst onClick = this.methods.handleMenuClick(record);\r\n\t\tconst items = [];\r\n\t\tthis.hasMoreMenu &&\r\n\t\t\tthis.props.moreBtnMap.forEach((item) => {\r\n\t\t\t\tconst { show, disbaled, name, ...others } = item;\r\n\t\t\t\tconst _show =\r\n\t\t\t\t\ttypeof show == \"function\" ? show(record, index, item, tool) : show === undefined ? true : show;\r\n\t\t\t\tconst _disbaled =\r\n\t\t\t\t\ttypeof disbaled == \"function\"\r\n\t\t\t\t\t\t? disbaled(record, index, item, tool)\r\n\t\t\t\t\t\t: disbaled === undefined\r\n\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t: disbaled;\r\n\t\t\t\tif (this.props.moreBtnType == \"rounding\") {\r\n\t\t\t\t\titems.push({\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tshow: _show,\r\n\t\t\t\t\t\tdisabled: _disbaled,\r\n\t\t\t\t\t\tonClick: onClick,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (_show)\r\n\t\t\t\t\titems.push(\r\n\t\t\t\t\t\t<Menu.Item disabled={_disbaled} {...others}>\r\n\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t</Menu.Item>,\r\n\t\t\t\t\t);\r\n\t\t\t});\r\n\t\treturn this.props.moreBtnType == \"rounding\" ? (\r\n\t\t\titems\r\n\t\t) : items.length ? (\r\n\t\t\t<Menu onClick={onClick}>{items}</Menu>\r\n\t\t) : (\r\n\t\t\t<span />\r\n\t\t);\r\n\t};\r\n\tmethods = {\r\n\t\thandleMenuClick: (record) => {\r\n\t\t\treturn (item) => {\r\n\t\t\t\tthis.props.onMoreBtnClick && this.props.onMoreBtnClick(item, record, this.props.tool);\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tdetailBtnClick: (e) => {\r\n\t\t\tthis.props.onDetailClick && this.props.onDetailClick(this.props.record);\r\n\t\t\te.stopPropagation();\r\n\t\t},\r\n\t\taddChildBtnClick: (e) => {\r\n\t\t\tthis.props.onAddChildClick && this.props.onAddChildClick(this.props.record);\r\n\t\t\te.stopPropagation();\r\n\t\t},\r\n\t\tupdateBtnClick: (e) => {\r\n\t\t\tthis.props.onUpdateClick && this.props.onUpdateClick(this.props.record);\r\n\t\t\te.stopPropagation();\r\n\t\t},\r\n\t\tdeleteBtnClick: (e) => {\r\n\t\t\tthis.props.onDeleteClick && this.props.onDeleteClick(this.props.record);\r\n\t\t\te.stopPropagation();\r\n\t\t},\r\n\t};\r\n\tgetBtn = (type, btnName, click, show, disabled) => {\r\n\t\treturn show ? (\r\n\t\t\t<Zbutton  onClick={click} size=\"small\" type={type} disabled={disabled}>\r\n\t\t\t\t{btnName}\r\n\t\t\t</Zbutton>\r\n\t\t) : null;\r\n\t\t// return show ? (\r\n\t\t// \t<Button disabled={disabled} type={type} size=\"small\" onClick={click}>\r\n\t\t// \t\t{btnName}\r\n\t\t// \t</Button>\r\n\t\t// ) : null;\r\n\t};\r\n\tonVisibleChange = (show) => {\r\n\t\tif (this.moreIconEl) {\r\n\t\t\tshow ? removeClass(this.moreIconEl, \"is-down\") : addClass(this.moreIconEl, \"is-down\");\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\tconst tool = this.props.tool;\r\n\t\tconst {\r\n\t\t\tshowDetailBtn,\r\n\t\t\tshowUpdateBtn,\r\n\t\t\tshowAddChildBtn,\r\n\t\t\tshowDeleteBtn,\r\n\t\t\tdetailBtnDisabled,\r\n\t\t\tupdateBtnDisabled,\r\n\t\t\taddChildBtnDisabled,\r\n\t\t\tdeleteBtnDisabled,\r\n\t\t\trecord,\r\n\t\t\tindex,\r\n\t\t} = this.props;\r\n\t\tconst _showDetailBtn = typeof showDetailBtn == \"function\" ? showDetailBtn(record, index, tool) : showDetailBtn;\r\n\t\tconst _showUpdateBtn = typeof showUpdateBtn == \"function\" ? showUpdateBtn(record, index, tool) : showUpdateBtn;\r\n\t\tconst _showAddChildBtn =\r\n\t\t\ttypeof showAddChildBtn == \"function\" ? showAddChildBtn(record, index, tool) : showAddChildBtn;\r\n\t\tconst _showDeleteBtn = typeof showDeleteBtn == \"function\" ? showDeleteBtn(record, index, tool) : showDeleteBtn;\r\n\t\tconst _detailBtnDisabled =\r\n\t\t\ttypeof detailBtnDisabled == \"function\" ? detailBtnDisabled(record, index, tool) : detailBtnDisabled;\r\n\t\tconst _updateBtnDisabled =\r\n\t\t\ttypeof updateBtnDisabled == \"function\" ? updateBtnDisabled(record, index, tool) : updateBtnDisabled;\r\n\t\tconst _addChildBtnDisabled =\r\n\t\t\ttypeof addChildBtnDisabled == \"function\" ? addChildBtnDisabled(record, index, tool) : addChildBtnDisabled;\r\n\t\tconst _deleteBtnDisabled =\r\n\t\t\ttypeof deleteBtnDisabled == \"function\" ? deleteBtnDisabled(record, index, tool) : deleteBtnDisabled;\r\n\t\tconst moreBtn = (\r\n\t\t\t<Zbutton size=\"small\">\r\n\t\t\t\t更多\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName=\"zero-icon zerod-up z-open-btn is-down\"\r\n\t\t\t\t\tref={(el) => {\r\n\t\t\t\t\t\tthis.moreIconEl = el;\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Zbutton>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<span className=\"z-flex-space-between\">\r\n\t\t\t\t<span>{this.props.name}</span>\r\n\t\t\t\t<span className={cssClass[\"z-tree-line\"]} />\r\n\t\t\t\t<span className={cssClass[\"z-tree-btns\"]}>\r\n\t\t\t\t\t{this.getBtn(\"default\", \"详情\", this.methods.detailBtnClick, _showDetailBtn, _detailBtnDisabled)}\r\n\t\t\t\t\t{this.getBtn(\r\n\t\t\t\t\t\t\"primary\",\r\n\t\t\t\t\t\t\"新增子节点\",\r\n\t\t\t\t\t\tthis.methods.addChildBtnClick,\r\n\t\t\t\t\t\t_showAddChildBtn,\r\n\t\t\t\t\t\t_addChildBtnDisabled,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{this.getBtn(\"primary\", \"修改\", this.methods.updateBtnClick, _showUpdateBtn, _updateBtnDisabled)}\r\n\t\t\t\t\t{this.getBtn(\"danger\", \"删除\", this.methods.deleteBtnClick, _showDeleteBtn, _deleteBtnDisabled)}\r\n\t\t\t\t\t{this.hasMoreMenu ? (\r\n\t\t\t\t\t\tthis.props.moreBtnType == \"rounding\" ? (\r\n\t\t\t\t\t\t\t<ZroundingButton items={this.moreMenu(record, index)} onVisibleChange={this.onVisibleChange}> {moreBtn}</ZroundingButton>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\tkey=\"more\"\r\n\t\t\t\t\t\t\t\toverlay={this.moreMenu(record, index)}\r\n\t\t\t\t\t\t\t\ttrigger={[\"click\"]}\r\n\t\t\t\t\t\t\t\tplacement=\"bottomRight\"\r\n\t\t\t\t\t\t\t\tonVisibleChange={this.onVisibleChange}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{moreBtn}\r\n\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</span>\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n}\r\nexport default TreeTitle;\r\n","import React from \"react\";\r\nimport ZpureComponent from \"../ZpureComponent\";\r\nimport \"../../zero-icon/iconfont.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n\tconst_getPanleHeader,\r\n\tconst_getListConfig,\r\n\tconst_getInsertLocation,\r\n\tconst_getMainTool,\r\n\tconst_getMethods,\r\n\tconst_getPanelDefaultFormItems,\r\n\tconst_extendPanelFormConfig,\r\n\tconst_searchFormNode,\r\n} from \"../constant\";\r\nimport { Tree, Modal } from \"antd\";\r\nconst TreeNode = Tree.TreeNode;\r\nimport cssClass from \"./style.scss\";\r\nimport TreeTitle from \"./TreeTitle\";\r\nimport ZerodMainContext from \"../ZerodMainContext\";\r\nimport {\r\n\tunshiftItemToTree,\r\n\tdeepCopy,\r\n\tremoveItemFromTree,\r\n\tpushItemToTree,\r\n\treplaceItemFromTree,\r\n\tinsertBeforeItemFromTree,\r\n\tinsertAfterItemFromTree,\r\n\titemsFromTree,\r\n\tdataType,\r\n} from \"../zTool\";\r\n// import { Zlayout } from \"../Zlayout\";\r\nlet defaultConfig = const_getListConfig(\"list\", \"ZtreePanel\");\r\nclass ZtreePanel extends ZpureComponent {\r\n\tstatic propTypes = {\r\n\t\ttreeDataKeys: PropTypes.object,\r\n\t\tpanelBeforeRender: PropTypes.func,\r\n\t\tpanelAfterRender: PropTypes.func,\r\n\t\texportSomething: PropTypes.func,\r\n\t\tpanelHeader: PropTypes.oneOfType([\r\n\t\t\tPropTypes.string,\r\n\t\t\tPropTypes.number,\r\n\t\t\tPropTypes.func,\r\n\t\t\tPropTypes.element,\r\n\t\t\tPropTypes.node,\r\n\t\t]), //面板title,可以自定义\r\n\t\tmoreContentRender: PropTypes.func,\r\n\t\tsearchForm: PropTypes.object,\r\n\t\tcolFormItems: PropTypes.arrayOf(PropTypes.object), // 搜索表单列map数据数据\r\n\t\tmoreBtnMap: PropTypes.arrayOf(PropTypes.object), //更多操作按钮的map数据\r\n\t\tonMoreBtnClick: PropTypes.func, // 更多按钮点击事件\r\n\t\tupdateBtnPermCod: PropTypes.string, // 修改按钮权限控制代码\r\n\t\tdeleteBtnPermCod: PropTypes.string, // 删除按钮权限控制代码\r\n\t\tshowDetailBtn: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否显示详情按钮\r\n\t\tshowAddChildBtn: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否显示新增子节点按钮\r\n\t\tshowUpdateBtn: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否显示修改按钮\r\n\t\tshowDeleteBtn: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否显示删除按钮\r\n\t\tshowAddBtn: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否显示新建按钮\r\n\t\tdetailBtnDisabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否禁用详情按钮\r\n\t\taddChildBtnDisabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否禁用新增子节点按钮\r\n\t\tupdateBtnDisabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否禁用修改按钮\r\n\t\tdeleteBtnDisabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 是否禁用删除按钮\r\n\t\ttreeApiInterface: PropTypes.func, // 获取tree的后台接口函数，其必须内部返回Promise\r\n\t\tchildApiInterface: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // 异步加载子节点的后台接口函数，其必须内部返回Promise\r\n\t\tdeleteApiInterface: PropTypes.func, // 删除按钮的后台接口函数，其必须内部返回Promise\r\n\t\taddPageRender: PropTypes.func, // 新建页面渲染模板\r\n\t\taddChildPageRender: PropTypes.func, // 新增子节点页面渲染模板\r\n\t\tupdatePageRender: PropTypes.func, // 修改页面渲染模板\r\n\t\tdetailPageRender: PropTypes.func, // 详情页面渲染模板\r\n\t\ttreeProps: PropTypes.object,\r\n\t\tresponseKeys: PropTypes.object, //后台接口请求响应体的key处理\r\n\t};\r\n\tstatic defaultProps = defaultConfig.tree;\r\n\ttreeDataKeys = Object.assign({ name: \"name\", id: \"id\", children: \"children\" }, this.props.treeDataKeys);\r\n\r\n\tmethods = {\r\n\t\t...const_getMethods.call(this),\r\n\t\t// 获取列表数据\r\n\t\tloadTreeData: moreQuery => {\r\n\t\t\tlet querys = this.searchQuery ? this.searchQuery : {};\r\n\t\t\tif (dataType.isObject(moreQuery)) {\r\n\t\t\t\tquerys = Object.assign({}, querys, moreQuery);\r\n\t\t\t}\r\n\t\t\tconst apiPromise =\r\n\t\t\t\tthis.props.treeApiInterface && this.props.treeApiInterface(querys, this.getExportSomething());\r\n\t\t\tif (dataType.isPromise(apiPromise)) {\r\n\t\t\t\tthis.methods.showLoading(true);\r\n\t\t\t\tapiPromise\r\n\t\t\t\t\t.then(re => {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\ttreeData: re.data,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(re => {\r\n\t\t\t\t\t\tthis.methods.notice.error(re && re.msg ? re.msg : \"获取数据失败\");\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.finally(re => {\r\n\t\t\t\t\t\tthis.methods.showLoading(false);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tloadChildData: treeNode => {\r\n\t\t\tconst childrenKey = this.treeDataKeys.children;\r\n\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\tif (treeNode.props.children) {\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.ayncChild &&\r\n\t\t\t\t\tthis.props\r\n\t\t\t\t\t\t.childApiInterface(deepCopy(treeNode.props.dataRef), this.getExportSomething())\r\n\t\t\t\t\t\t.then(re => {\r\n\t\t\t\t\t\t\ttreeNode.props.dataRef[childrenKey] = re.data;\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\ttreeData: [...this.state.treeData],\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.finally(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\t// 查询\r\n\t\tonSearch: query => {\r\n\t\t\tthis.searchQuery = query;\r\n\t\t\tthis.methods.loadTreeData();\r\n\t\t},\r\n\t\t// 重置\r\n\t\tonReset: () => {\r\n\t\t\tthis.methods.onSearch();\r\n\t\t},\r\n\t\tcommonActionArr: ({ tree, record, data, action }) => {\r\n\t\t\tconst _tree = Array.isArray(tree) ? tree : this.state.treeData.slice(0);\r\n\t\t\tconst newTree = action({ tree: _tree, sourceItem: record, item: data, keyObj: this.treeDataKeys });\r\n\t\t\tif (newTree && !Array.isArray(tree)) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttreeData: newTree,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn newTree;\r\n\t\t},\r\n\t\t//移除tree中的一条数据\r\n\t\tremoveOneData: (record, tree) => {\r\n\t\t\treturn this.methods.commonActionArr({\r\n\t\t\t\ttree,\r\n\t\t\t\trecord,\r\n\t\t\t\taction: removeItemFromTree,\r\n\t\t\t});\r\n\t\t},\r\n\t\t//在record的children中添加一条数据\r\n\t\taddOneChildData: (record, data, tree) => {\r\n\t\t\treturn this.methods.commonActionArr({\r\n\t\t\t\ttree,\r\n\t\t\t\trecord,\r\n\t\t\t\tdata,\r\n\t\t\t\taction: pushItemToTree,\r\n\t\t\t});\r\n\t\t},\r\n\t\t//在tree中替换一条数据\r\n\t\treplaceOneData: (record, data, tree) => {\r\n\t\t\treturn this.methods.commonActionArr({\r\n\t\t\t\ttree,\r\n\t\t\t\trecord,\r\n\t\t\t\tdata,\r\n\t\t\t\taction: replaceItemFromTree,\r\n\t\t\t});\r\n\t\t},\r\n\t\tgetDropType: info => {\r\n\t\t\tconst dropKey = info.node.props.eventKey; //拖入的源key\r\n\t\t\tconst dragKey = info.dragNode.props.eventKey; //拖动对象的key\r\n\t\t\tconst dropPos = info.node.props.pos.split(\"-\");\r\n\t\t\tconst dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\r\n\t\t\tlet dropData = null;\r\n\t\t\tlet dragData = null;\r\n\t\t\tconst dropItem = { [this.treeDataKeys.id]: dropKey };\r\n\t\t\tconst dragItem = { [this.treeDataKeys.id]: dragKey };\r\n\t\t\tlet newTree = this.state.treeData;\r\n\t\t\titemsFromTree({\r\n\t\t\t\ttree: newTree,\r\n\t\t\t\tsourceItem: dropItem,\r\n\t\t\t\tkeyObj: this.treeDataKeys,\r\n\t\t\t\taction: ({ tree, currentItem, index, keyObj }) => {\r\n\t\t\t\t\tdropData = currentItem;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\titemsFromTree({\r\n\t\t\t\ttree: newTree,\r\n\t\t\t\tsourceItem: dragItem,\r\n\t\t\t\tkeyObj: this.treeDataKeys,\r\n\t\t\t\taction: ({ tree, currentItem, index, keyObj }) => {\r\n\t\t\t\t\tdragData = currentItem;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tif (!dragData || !dropData) return;\r\n\t\t\tif (!info.dropToGap) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: \"inLast\",\r\n\t\t\t\t\tmsg: `确认将 [${dragData[this.treeDataKeys.name]}] 放入到 [${\r\n\t\t\t\t\t\tdropData[this.treeDataKeys.name]\r\n\t\t\t\t\t}] 里面最后一个吗？`,\r\n\t\t\t\t\tdropData,\r\n\t\t\t\t\tdragData,\r\n\t\t\t\t};\r\n\t\t\t} else if ((info.node.props.children || []).length > 0 && info.node.props.expanded && dropPosition === 1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: \"inFirst\",\r\n\t\t\t\t\tmsg: `确认将 [${dragData[this.treeDataKeys.name]}] 放入到 [${\r\n\t\t\t\t\t\tdropData[this.treeDataKeys.name]\r\n\t\t\t\t\t}] 里面最前一个吗？`,\r\n\t\t\t\t\tdropData,\r\n\t\t\t\t\tdragData,\r\n\t\t\t\t};\r\n\t\t\t} else if (dropPosition === -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: \"insertBefore\",\r\n\t\t\t\t\tmsg: `确认将 [${dragData[this.treeDataKeys.name]}] 移动到 [${\r\n\t\t\t\t\t\tdropData[this.treeDataKeys.name]\r\n\t\t\t\t\t}] 的前面吗？`,\r\n\t\t\t\t\tdropData,\r\n\t\t\t\t\tdragData,\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: \"insertAfter\",\r\n\t\t\t\t\tmsg: `确认将[${dragData[this.treeDataKeys.name]}]移动到[${\r\n\t\t\t\t\t\tdropData[this.treeDataKeys.name]\r\n\t\t\t\t\t}]的后面吗？`,\r\n\t\t\t\t\tdropData,\r\n\t\t\t\t\tdragData,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tdropDone: () => {\r\n\t\t\tlet newTree = [...this.state.treeData];\r\n\t\t\tconst { type, dropData, dragData } = this.methods.droped;\r\n\t\t\tif (!type) return;\r\n\t\t\tnewTree = removeItemFromTree({\r\n\t\t\t\ttree: newTree,\r\n\t\t\t\tsourceItem: dragData,\r\n\t\t\t\tkeyObj: this.treeDataKeys,\r\n\t\t\t});\r\n\t\t\tnewTree = this.methods.dropAction[type]({\r\n\t\t\t\ttree: newTree,\r\n\t\t\t\tsourceItem: dropData,\r\n\t\t\t\titem: dragData,\r\n\t\t\t\tkeyObj: this.treeDataKeys,\r\n\t\t\t});\r\n\t\t\tthis.setState({\r\n\t\t\t\ttreeData: newTree,\r\n\t\t\t});\r\n\t\t},\r\n\t\tdroped: {},\r\n\t\tdropAction: {\r\n\t\t\tinLast: pushItemToTree,\r\n\t\t\tinFirst: unshiftItemToTree,\r\n\t\t\tinsertBefore: insertBeforeItemFromTree,\r\n\t\t\tinsertAfter: insertAfterItemFromTree,\r\n\t\t},\r\n\t\tonDrop: info => {\r\n\t\t\tlet { onDrop } = this.props.treeProps || {};\r\n\t\t\tif (typeof onDrop == \"function\") {\r\n\t\t\t\tconst hasDrop = this.methods.getDropType(info);\r\n\t\t\t\tif (hasDrop) {\r\n\t\t\t\t\tthis.methods.droped = hasDrop;\r\n\t\t\t\t\tModal.confirm({\r\n\t\t\t\t\t\ttitle: this.methods.droped.msg,\r\n\t\t\t\t\t\tcontent: \"\",\r\n\t\t\t\t\t\tokText: \"确定\",\r\n\t\t\t\t\t\tokType: \"primary\",\r\n\t\t\t\t\t\tcancelText: \"取消\",\r\n\t\t\t\t\t\tonOk: () => {\r\n\t\t\t\t\t\t\treturn onDrop(\r\n\t\t\t\t\t\t\t\tinfo,\r\n\t\t\t\t\t\t\t\tdeepCopy(this.methods.droped),\r\n\t\t\t\t\t\t\t\tthis.methods.dropDone,\r\n\t\t\t\t\t\t\t\tthis.getExportSomething(),\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 删除按钮触发\r\n\t\tonDelete: record => {\r\n\t\t\tconst text = record[this.treeDataKeys.name];\r\n\t\t\tModal.confirm({\r\n\t\t\t\ttitle: `确认删除 ${text ? `[${text}]` : \"\"} 这条数据吗`,\r\n\t\t\t\tcontent: \"将永久删除\",\r\n\t\t\t\tokText: \"删除\",\r\n\t\t\t\tokType: \"danger\",\r\n\t\t\t\tcancelText: \"取消\",\r\n\t\t\t\tonOk: () => {\r\n\t\t\t\t\treturn new Promise((resolve, rejects) => {\r\n\t\t\t\t\t\tthis.props\r\n\t\t\t\t\t\t\t.deleteApiInterface(record, this.getExportSomething())\r\n\t\t\t\t\t\t\t.then(re => {\r\n\t\t\t\t\t\t\t\tthis.methods.notice.success(\"删除成功\");\r\n\t\t\t\t\t\t\t\tthis.methods.removeOneData(record);\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch(re => {\r\n\t\t\t\t\t\t\t\tthis.methods.notice.error(re && re.msg ? re.msg : \"删除失败\");\r\n\t\t\t\t\t\t\t\trejects();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t},\r\n\t\tonAdd: () => {\r\n\t\t\tconst content = this.props.addPageRender(this.getExportSomething());\r\n\t\t\tthis.methods.openModal(content);\r\n\t\t},\r\n\t\tonAddChild: record => {\r\n\t\t\tconst content = this.props.addChildPageRender(record, this.getExportSomething());\r\n\t\t\tthis.methods.openModal(content);\r\n\t\t},\r\n\t\tonUpdate: record => {\r\n\t\t\tconst content = this.props.updatePageRender(record, this.getExportSomething());\r\n\t\t\tthis.methods.openModal(content);\r\n\t\t},\r\n\t\tonDetail: record => {\r\n\t\t\tconst content = this.props.detailPageRender(record, this.getExportSomething());\r\n\t\t\tthis.methods.openModal(content);\r\n\t\t},\r\n\t\topenSearch: () => {\r\n\t\t\tthis.ZsearchFormMethods.unfold(show => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\texpandedSearch: show,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\t//外部可以通过这个函数获取当前列表中的数据，\r\n\t\tcurrentTreeData: () => {\r\n\t\t\treturn this.state.treeData;\r\n\t\t},\r\n\t\tsetDataState: data => {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttreeData: data,\r\n\t\t\t});\r\n\t\t},\r\n\t};\r\n\r\n\tgetExportSomething() {\r\n\t\treturn {\r\n\t\t\t...const_getMainTool.call(this),\r\n\t\t\tgetSearchQuery: () => deepCopy(this.searchQuery),\r\n\t\t\tmethods: this.methods,\r\n\t\t\t$router: {\r\n\t\t\t\thistory: this.props.history,\r\n\t\t\t\tlocation: this.props.location,\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\tsearchFormConfig = const_extendPanelFormConfig.call(this);\r\n\tcolFormItems = const_getPanelDefaultFormItems.call(this);\r\n\tstate = {\r\n\t\ttreeData: [],\r\n\t\texpandedSearch: this.searchFormConfig && this.searchFormConfig.defaultExpanded,\r\n\t};\r\n\tsearchQuery = null;\r\n\tayncChild = typeof this.props.childApiInterface === \"function\";\r\n\tgetTreeNode(tree) {\r\n\t\treturn tree.map((data, index) => {\r\n\t\t\tconst childrenKey = this.treeDataKeys.children;\r\n\t\t\tconst idKey = this.treeDataKeys.id;\r\n\t\t\tconst nameKey = this.treeDataKeys.name;\r\n\r\n\t\t\tconst cilds = Array.isArray(data[childrenKey]) ? data[childrenKey] : [];\r\n\t\t\tconst { title, key, dataRef, ...otherData } = data;\r\n\t\t\treturn (\r\n\t\t\t\t<TreeNode\r\n\t\t\t\t\tselectable={false}\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<TreeTitle\r\n\t\t\t\t\t\t\tname={data[nameKey]}\r\n\t\t\t\t\t\t\trecord={data}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\tmoreBtnType={this.props.moreBtnType}\r\n\t\t\t\t\t\t\tmoreBtnMap={this.props.moreBtnMap}\r\n\t\t\t\t\t\t\tonMoreBtnClick={this.props.onMoreBtnClick}\r\n\t\t\t\t\t\t\tonDetailClick={this.methods.onDetail}\r\n\t\t\t\t\t\t\tonAddChildClick={this.methods.onAddChild}\r\n\t\t\t\t\t\t\tonUpdateClick={this.methods.onUpdate}\r\n\t\t\t\t\t\t\tonDeleteClick={this.methods.onDelete}\r\n\t\t\t\t\t\t\tshowDetailBtn={this.props.showDetailBtn}\r\n\t\t\t\t\t\t\tshowAddChildBtn={this.props.showAddChildBtn}\r\n\t\t\t\t\t\t\tshowUpdateBtn={this.props.showUpdateBtn}\r\n\t\t\t\t\t\t\tshowDeleteBtn={this.props.showDeleteBtn}\r\n\t\t\t\t\t\t\tdetailBtnDisabled={this.props.detailBtnDisabled}\r\n\t\t\t\t\t\t\taddChildBtnDisabled={this.props.addChildBtnDisabled}\r\n\t\t\t\t\t\t\tupdateBtnDisabled={this.props.updateBtnDisabled}\r\n\t\t\t\t\t\t\tdeleteBtnDisabled={this.props.deleteBtnDisabled}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tkey={data[idKey]}\r\n\t\t\t\t\tdataRef={data}\r\n\t\t\t\t\t{...otherData}\r\n\t\t\t\t>\r\n\t\t\t\t\t{cilds.length ? this.getTreeNode(cilds) : null}\r\n\t\t\t\t</TreeNode>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\ttypeof this.props.exportSomething == \"function\" && this.props.exportSomething(this.getExportSomething());\r\n\t\tthis.insertLocation = const_getInsertLocation(this.hocWrapperEl);\r\n\t\tthis.methods.onSearch();\r\n\t}\r\n\tgetSearchFormMethods = methods => (this.ZsearchFormMethods = methods);\r\n\trender() {\r\n\t\tconst_searchFormNode.call(this);\r\n\t\tconst { showLine, loadData, onDrop, ...treeOthers } = this.props.treeProps || {};\r\n\t\treturn (\r\n\t\t\t<section\r\n\t\t\t\tref={el => {\r\n\t\t\t\t\tthis.hocWrapperEl = el;\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{this.props.panelBeforeRender && this.props.panelBeforeRender(this.getExportSomething())}\r\n\t\t\t\t<div className=\"z-panel\">\r\n\t\t\t\t\t{this.getPanleHeader()}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{this.searchForm}\r\n\t\t\t\t\t\t<div className={cssClass[\"z-editor-tree\"]}>\r\n\t\t\t\t\t\t\t{this.state.treeData.length ? (\r\n\t\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\t\tshowLine\r\n\t\t\t\t\t\t\t\t\tonDrop={this.methods.onDrop}\r\n\t\t\t\t\t\t\t\t\tloadData={this.ayncChild ? this.methods.loadChildData : undefined}\r\n\t\t\t\t\t\t\t\t\t{...treeOthers}\r\n\t\t\t\t\t\t\t\t\tautoExpandParent={false}\r\n\t\t\t\t\t\t\t\t\tonRightClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(5);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{this.getTreeNode(this.state.treeData)}\r\n\t\t\t\t\t\t\t\t</Tree>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className=\"z-text-center\">暂无数据</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{this.props.moreContentRender && this.props.moreContentRender(this.getExportSomething())}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.props.panelAfterRender && this.props.panelAfterRender(this.getExportSomething())}\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\nZtreePanel.prototype.getPanleHeader = const_getPanleHeader;\r\nexport default ZerodMainContext.setConsumer(withRouter(ZtreePanel));\r\n","import React from \"react\";import ZpureComponent from \"../ZpureComponent\";\r\n// import { Input } from \"antd\";\r\n\r\n// 工具\r\nimport { mergeConfig, GenNonDuplicateID } from \"../zTool\";\r\n\r\nimport { ZpageWraperHOC } from \"../ZpageWrapper\";\r\n\r\nimport { const_getListConfig, const_getPageWrapperProps } from \"../constant\";\r\n// childs\r\nimport ZtreePanel from \"./ZtreePanel\";\r\n\r\n// import cssClass from \"./style.scss\";\r\n\r\n// HOC\r\nconst PageWraper = ZpageWraperHOC();\r\n\r\nexport function ZeditorTreeHOC(pageConfig) {\r\n\tpageConfig = pageConfig ? pageConfig : {};\r\n\tlet defaultConfig = const_getListConfig(\"tree\", \"ZtreePanel\");\r\n\r\n\tdefaultConfig = mergeConfig(defaultConfig, pageConfig);\r\n\tclass List extends ZpureComponent {\r\n\t\tconfig = defaultConfig;\r\n\t\tpageWraper = const_getPageWrapperProps(this.config);\r\n\t\t//pageId 是 pageHeader内部一个插槽id，这里将ZtreePanel的searchForm插到pageHeader显示\r\n\t\tpageId = GenNonDuplicateID();\r\n\t\trender() {\r\n\t\t\tif (this.pageWraper.pageHeader && this.pageWraper.pageHeader.show) {\r\n\t\t\t\tthis.pageWraper.pageHeader.pageId = this.pageId;\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<PageWraper {...this.pageWraper}>\r\n\t\t\t\t\t<ZtreePanel\r\n\t\t\t\t\t\tpageId={this.pageId}\r\n\t\t\t\t\t\tcolFormItems={this.config.searchForm.items}\r\n\t\t\t\t\t\tsearchForm={this.config.searchForm}\r\n\t\t\t\t\t\t{...this.config.tree}\r\n\t\t\t\t\t\tinsertLocation={this.config.insertLocation}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</PageWraper>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn List;\r\n}\r\n\r\nexport default ZeditorTreeHOC;\r\n","import React from \"react\";\r\nimport { ZeditorTreeHOC } from \"zerod\";\r\nimport { Input, message } from \"antd\";\r\nimport HOC from \"@/HOC/load-HOC.js\";\r\nconst { AmdDocHOC, AshowDemoHOC } = HOC;\r\nimport doc from \"zerod/components/ZeditorTreeHOC/doc.md\";\r\nimport pageHeader from \"@/views/Main/component-doc/ZpageHeader-doc/pageHeader\";\r\nimport area from \"@/mock/area\";\r\nimport { deepCopy } from \"zerod/components/zTool\";\r\nconst showDemo = function(Component) {\r\n\treturn <Component />;\r\n};\r\nexport default AmdDocHOC(doc, {\r\n\tdemo1: function() {\r\n\t\tconst config = {\r\n\t\t\tinsertLocation: \"mainModal\",\r\n\t\t\tpageHeader: {\r\n\t\t\t\tshow: true,\r\n\t\t\t\t...pageHeader,\r\n\t\t\t},\r\n\t\t\tsearchForm: {\r\n\t\t\t\t// array>[object] | null，如果是null则不显示搜索表单\r\n\t\t\t\titems: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: \"serviceCode\",\r\n\t\t\t\t\t\tlabel: \"服务编码\",\r\n\t\t\t\t\t\trender: (form) => {\r\n\t\t\t\t\t\t\treturn <Input placeholder=\"请输入内容\" />;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: \"serviceName\",\r\n\t\t\t\t\t\tlabel: \"服务名称\",\r\n\t\t\t\t\t\trender: (form) => {\r\n\t\t\t\t\t\t\treturn <Input placeholder=\"请输入内容\" />;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\ttree: {\r\n\t\t\t\ttreeProps:{\r\n\t\t\t\t\t// defaultExpandAll:true,\r\n\t\t\t\t\tdraggable:true,\r\n\t\t\t\t\tonDragEnd:(detail)=>{\r\n\t\t\t\t\t\tconsole.log(\"onDragEnd\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonDragEnter:()=>{\r\n\t\t\t\t\t\tconsole.log(\"onDragEnter\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonDragLeave:()=>{\r\n\t\t\t\t\t\tconsole.log(\"onDragLeave\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonDragOver:()=>{\r\n\t\t\t\t\t\tconsole.log(\"onDragOver\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonDragStart:()=>{\r\n\t\t\t\t\t\tconsole.log(\"onDragStart\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonDrop:(info,dropData,done,tool)=>{\r\n\t\t\t\t\t\tdone();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\ttreeDataKeys: { id: \"areaId\" },\r\n\t\t\t\tpanelHeader: \"树\",\r\n\t\t\t\t// 是否显示新建按钮\r\n\t\t\t\tshowAddBtn: true,\r\n\t\t\t\t// 新建按钮权限控制代码\r\n\t\t\t\taddBtnPermCode: \"\",\r\n\t\t\t\taddPageRender: (panel) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"z-panel z-text-center z-margin-bottom-20\">\r\n\t\t\t\t\t\t\t<div className=\"z-panel-body\">addPageRender 函数渲染的内容</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t// 是否显示新增子节点按钮\r\n\t\t\t\tshowAddChildBtn: true,\r\n\t\t\t\t// 新建按钮权限控制代码\r\n\t\t\t\taddBtnPermCode: \"\",\r\n\t\t\t\t// 新增子节点页面渲染模板\r\n\t\t\t\taddChildPageRender: (panel) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"z-panel z-text-center z-margin-bottom-20\">\r\n\t\t\t\t\t\t\t<div className=\"z-panel-body\">addChildPageRender 函数渲染的内容</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t// 是否显示详情按钮\r\n\t\t\t\tshowDetailBtn: true,\r\n\t\t\t\t// 详情按钮权限控制代码\r\n\t\t\t\tdetailBtnPermCode: \"\",\r\n\t\t\t\tdetailPageRender: (record) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"z-panel z-text-center z-margin-bottom-20\">\r\n\t\t\t\t\t\t\t<div className=\"z-panel-body\">detailPageRender 函数渲染的内容</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t// 是否显示修改按钮\r\n\t\t\t\tshowUpdateBtn: true,\r\n\t\t\t\t// 修改按钮权限控制代码\r\n\t\t\t\tupdateBtnPermCod: \"\",\r\n\t\t\t\tupdatePageRender: (record, panel) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"z-panel z-text-center z-margin-bottom-20\">\r\n\t\t\t\t\t\t\t<div className=\"z-panel-body\">updatePageRender 函数渲染的内容</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t// 是否显示删除按钮\r\n\t\t\t\tshowDeleteBtn: true,\r\n\t\t\t\t// 删除按钮权限控制代码\r\n\t\t\t\tdeleteBtnPermCod: \"\",\r\n\t\t\t\t//更多操作按钮的map数据\r\n\t\t\t\tmoreBtnMap: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: \"0\",\r\n\t\t\t\t\t\tname: \"默认的按钮\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\t//更多操作按钮的的点击事件\r\n\t\t\t\tonMoreBtnClick: (item, record) => {\r\n\t\t\t\t\tmessage.success(`您当前点击的是[${record.name}]这条数据`);\r\n\t\t\t\t},\r\n\t\t\t\t// 获取列表数据的后台接口函数，其必须内部返回Promise\r\n\t\t\t\ttreeApiInterface: (query) => {\r\n\t\t\t\t\t// return api.area.getChildList({ id: \"root\" }).then((re) => {\r\n\t\t\t\t\t// \treturn { data: re.list };\r\n\t\t\t\t\t// });\r\n\t\t\t\t\treturn new Promise((resolve) => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve({ data: deepCopy(area.data) });\r\n\t\t\t\t\t\t}, 500);\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tchildApiInterface: false,\r\n\t\t\t\t// childApiInterface: (query) => {\r\n\t\t\t\t// \treturn api.area.getChildList({ id: query.areaId }).then((re) => {\r\n\t\t\t\t// \t\treturn { data: re.list };\r\n\t\t\t\t// \t});\r\n\t\t\t\t// },\r\n\t\t\t\t// 删除按钮的后台接口函数，其必须内部返回Promise\r\n\t\t\t\tdeleteApiInterface: (data) => {\r\n\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t},\r\n\t\t\t\t// exportSomething: (obj) => (listExports = obj),\r\n\t\t\t\tpanelBeforeRender: (obj) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"z-panel z-text-center z-margin-bottom-20\">\r\n\t\t\t\t\t\t\t<div className=\"z-panel-body\">panelBeforeRender 函数渲染的内容</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tpanelAfterRender: (obj) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"z-panel z-margin-top-20 z-text-center\">\r\n\t\t\t\t\t\t\t<div className=\"z-panel-body\">panelAfterRender 函数渲染的内容</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tmoreContentRender: (obj) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"z-panel is-panel-border z-margin-top-20 z-text-center\">\r\n\t\t\t\t\t\t\t<div className=\"z-panel-body\">moreContentRender 函数渲染的内容</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst MyScript = AshowDemoHOC(showDemo(ZeditorTreeHOC(config)));\r\n\t\treturn <MyScript />;\r\n\t},\r\n});\r\n","var map = {\n\t\"./AmdDocHOC/index.jsx\": \"pnNO\",\n\t\"./AshowDemoHOC/index.jsx\": \"+fre\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"jjl2\";","module.exports = \"<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h1 id=\\\"-zeditortreehoc\\\">树列表页：ZeditorTreeHOC</h1>\\n<p><code>ZeditorTreeHOC</code>是一个函数，传入<code>pageConfig</code>参数配置，返回一个带按钮的树组件</p>\\n<p><code>ZeditorTreeHOC</code>内置了一个<code>ZtreePanel</code>组件，可以<code>import {ZtreePanel} from &quot;zerod&quot;</code>引入，<code>ZtreePanel</code>的 props 同 <code>pageConfig.tree</code></p>\\n<p>1、基本使用</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"demo1\\\" data-title=\\\"基本使用\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">const config = {\\n    pageHeader: {\\n        show: true,\\n        ...pageHeader,\\n    },\\n    searchForm: {\\n        // array&gt;[object] | null，如果是null则不显示搜索表单\\n        items: [\\n            {\\n                key: &quot;serviceCode&quot;,\\n                label: &quot;服务编码&quot;,\\n                render: (form) =&gt; {\\n                    return &lt;Input placeholder=&quot;请输入内容&quot; /&gt;;\\n                },\\n            },\\n            {\\n                key: &quot;serviceName&quot;,\\n                label: &quot;服务名称&quot;,\\n                render: (form) =&gt; {\\n                    return &lt;Input placeholder=&quot;请输入内容&quot; /&gt;;\\n                },\\n            },\\n        ],\\n    },\\n    tree: {\\n        treeDataKeys: { id: &quot;areaId&quot; },\\n        panelHeader: &quot;树&quot;,\\n        // 是否显示新建按钮\\n        showAddBtn: true,\\n        addPageRender: (panel) =&gt; {\\n            return (\\n                &lt;div className=&quot;z-panel z-text-center z-margin-bottom-20&quot;&gt;\\n                    &lt;div className=&quot;z-panel-body&quot;&gt;addPageRender 函数渲染的内容&lt;/div&gt;\\n                &lt;/div&gt;\\n            );\\n        },\\n        // 是否显示详情按钮\\n        showDetailBtn: true,\\n        detailPageRender: (record) =&gt; {\\n            return (\\n                &lt;div className=&quot;z-panel z-text-center z-margin-bottom-20&quot;&gt;\\n                    &lt;div className=&quot;z-panel-body&quot;&gt;detailPageRender 函数渲染的内容&lt;/div&gt;\\n                &lt;/div&gt;\\n            );\\n        },\\n        // 是否显示修改按钮\\n        showUpdateBtn: true,\\n        // 修改按钮权限控制代码\\n        updateBtnPermCod: &quot;&quot;,\\n        updatePageRender: (record, panel) =&gt; {\\n            return (\\n                &lt;div className=&quot;z-panel z-text-center z-margin-bottom-20&quot;&gt;\\n                    &lt;div className=&quot;z-panel-body&quot;&gt;updatePageRender 函数渲染的内容&lt;/div&gt;\\n                &lt;/div&gt;\\n            );\\n        },\\n        // 是否显示删除按钮\\n        showDeleteBtn: true,\\n        // 删除按钮权限控制代码\\n        deleteBtnPermCod: &quot;&quot;,\\n        //更多操作按钮的map数据\\n        moreBtnMap: [\\n            {\\n                key: &quot;0&quot;,\\n                name: &quot;默认的按钮&quot;,\\n            },\\n        ],\\n        //更多操作按钮的的点击事件\\n        onMoreBtnClick: (item, record) =&gt; {\\n            message.success(`您当前点击的是[${record.name}]这条数据`);\\n        },\\n        // 获取列表数据的后台接口函数，其必须内部返回Promise\\n        treeApiInterface: (query) =&gt; {\\n            // return api.area.getChildList({ id: &quot;root&quot; }).then((re) =&gt; {\\n            //     return { data: re.list };\\n            // });\\n            return new Promise((resolve) =&gt; {\\n                setTimeout(() =&gt; {\\n                    resolve({ data: deepCopy(area.data) });\\n                }, 500);\\n            });\\n        },\\n        childApiInterface: false,\\n        // childApiInterface: (query) =&gt; {\\n        //     return api.area.getChildList({ id: query.areaId }).then((re) =&gt; {\\n        //         return { data: re.list };\\n        //     });\\n        // },\\n        // 删除按钮的后台接口函数，其必须内部返回Promise\\n        deleteApiInterface: (data) =&gt; {\\n            return Promise.resolve();\\n        },\\n        panelBeforeRender: (obj) =&gt; {\\n            return (\\n                &lt;div className=&quot;z-panel z-text-center z-margin-bottom-20&quot;&gt;\\n                    &lt;div className=&quot;z-panel-body&quot;&gt;panelBeforeRender 函数渲染的内容&lt;/div&gt;\\n                &lt;/div&gt;\\n            );\\n        },\\n        panelAfterRender: (obj) =&gt; {\\n            return (\\n                &lt;div className=&quot;z-panel z-margin-top-20 z-text-center&quot;&gt;\\n                    &lt;div className=&quot;z-panel-body&quot;&gt;panelAfterRender 函数渲染的内容&lt;/div&gt;\\n                &lt;/div&gt;\\n            );\\n        },\\n        moreContentRender: (obj) =&gt; {\\n            return (\\n                &lt;div className=&quot;z-panel is-panel-border z-margin-top-20 z-text-center&quot;&gt;\\n                    &lt;div className=&quot;z-panel-body&quot;&gt;moreContentRender 函数渲染的内容&lt;/div&gt;\\n                &lt;/div&gt;\\n            );\\n        },\\n    },\\n};\\nexport default ZeditorTreeHOC(pageConfig);</code></pre>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"pageconfig\\\">pageConfig</h2>\\n<p>除了如下的属性，pageConfig 还包含 <span class=\\\"z-history-href\\\" data-path=\\\"/main/HOC-doc/ZpageWraperHOC-doc\\\">HOC/页面头尾结构：ZpageWrapper</span> 的 props</p>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>参数</th>\\n            <th>说明</th>\\n            <th>类型</th>\\n            <th>默认值</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>searchForm</td>\\n            <td>\\n                <p>1、<code>searchForm.defaultExpanded</code> 是否默认展开表单,(默认false)</p>\\n                <p>2、<code>searchForm.insertTo</code> 此属性可以是:一个已存在的dom元素 || 一个已存在的dom元素的Id || true || false || (tool)=>{return 一个已存在的dom元素 || 一个已存在的dom元素的Id || true || false}，其用途为：将searchForm插到某个dom元素内,如为true则插到页头显示,(默认false)</p>\\n                <p>3、<code>searchForm的其他属性</code>还包含： 请查看 <span class=\\\"z-history-href\\\" data-path=\\\"/main/component-doc/ZsearchForm-doc\\\">组件/ZsearchForm</span> 的 props  (除了onSearch, onReset, noCollapse ,hidden ,其他都有效)。</p>\\n                <p>4、其中<code>searchForm.items</code>的<code>render函数</code>的参数在这里多加tool,如：items:[{render:(form,changeFormItems,tool)=>{},key:\\\"myKey\\\"}]。</p>\\n                <p>5、其中<code>searchForm.items</code>的<code>options函数</code>的参数在这里多加tool,如：items:[{options:(tool)=>options}]。</p>\\n                <p>6、<code>searchForm</code>的其他<code>函数属性</code>除了原有的参数，还多加tool，如 <code>searchForm.afterItemsRendered</code>:(form,methods,tool)=>{}</p>\\n            </td>\\n            <td>object</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>tree</td>\\n            <td>列表展示，请看下面的pageConfig.tree</td>\\n            <td>object</td>\\n            <td>--</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"pageconfig-tree\\\">pageConfig.tree</h2>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>参数</th>\\n            <th>说明</th>\\n            <th>类型</th>\\n            <th>默认值</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> panelHeader</td>\\n            <td>列表面板的头部内容,为null则不显示面板头部。也可以是一个对象：{left:(tool)=>span,center:(tool)=>span,right:(tool)=>span,}</td>\\n            <td>string | (tool)=>span | object</td>\\n            <td>列表</td>\\n        </tr>\\n        <tr>\\n            <td>treeDataKeys</td>\\n            <td>树数据对应的map结构，默认：{ name: \\\"name\\\", id: \\\"id\\\", children: \\\"children\\\" }</td>\\n            <td>object</td>\\n            <td>{ name: \\\"name\\\", id: \\\"id\\\", children: \\\"children\\\" }</td>\\n        </tr>\\n        <tr>\\n            <td>treeApiInterface</td>\\n            <td>获取树列表数据的后台接口函数,其必须返回Promise,参数有query:查询表单相关值。</td>\\n            <td>(query,tool) => Promise对象</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>childApiInterface</td>\\n            <td>异步加载子节点的接口函数，其必须返回Promise,参数有data:当前节点的数据。如果不需要异步加载，设为false即可</td>\\n            <td>(data,tool) => Promise对象</td>\\n            <td>false</td>\\n        </tr>\\n        <tr>\\n            <td>deleteApiInterface</td>\\n            <td>删除按钮后台接口函数,其必须返回Promise,参数有data:每一行数据</td>\\n            <td>(data,tool) => Promise对象</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> showAddBtn</td>\\n            <td>是否显示新增按钮</td>\\n            <td>boolean | function(record,index){return false}</td>\\n            <td>true</td>\\n        </tr>\\n        <tr>\\n            <td>addPageRender</td>\\n            <td>新增按钮打开的页面渲染函数,如果函数return false,此函数相当于按钮点击事件的回调；tool参数是列表组件的内部提供的一些工具方法</td>\\n            <td>function(tool){return ReacNode}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> showAddChildBtn</td>\\n            <td>是否显示新增子节点按钮</td>\\n            <td>boolean | function(record,index){return false}</td>\\n            <td>true</td>\\n        </tr>\\n        <tr>\\n            <td>addChildPageRender</td>\\n            <td>新增子节点按钮打开的页面渲染函数,如果函数return false,此函数相当于按钮点击事件的回调；tool参数是列表组件的内部提供的一些工具方法</td>\\n            <td>function(record,tool){return ReacNode}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> showDetailBtn</td>\\n            <td>是否显示详情按钮</td>\\n            <td>boolean | function(record,index){return false}</td>\\n            <td>true</td>\\n        </tr>\\n        <tr>\\n            <td>detailPageRender</td>\\n            <td>详情按钮打开的页面渲染函数,如果函数return false,此函数相当于按钮点击事件的回调；tool参数是列表组件的内部提供的一些工具方法</td>\\n            <td>function(record,tool){return ReacNode}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> showUpdateBtn</td>\\n            <td>是否显示修改按钮</td>\\n            <td>boolean | function(record,index){return false}</td>\\n            <td>true</td>\\n        </tr>\\n        <tr>\\n            <td>updatePageRender</td>\\n            <td>修改按钮打开的页面渲染函数,如果函数return false,此函数相当于按钮点击事件的回调；tool参数是列表组件的内部提供的一些工具方法</td>\\n            <td>function(record,tool){return ReacNode}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> showDeleteBtn</td>\\n            <td>是否显示删除按钮</td>\\n            <td>boolean | function(record,index){return false}</td>\\n            <td>true</td>\\n        </tr>\\n        <tr>\\n            <td>moreBtnType</td>\\n            <td>更多操作按钮显示类型</td>\\n            <td>rounding | menu</td>\\n            <td>rounding</td>\\n        </tr>\\n        <tr>\\n            <td>moreBtnMap</td>\\n            <td>更多操作按钮的map数据,[{key: \\\"0\\\",name: \\\"默认的按钮\\\", <i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> show: boolean | function(record,index,item){return true;},disabled:boolean}]</td>\\n            <td>array[object]</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>onMoreBtnClick</td>\\n            <td>更多操作按钮点击事件,参数有item:当前按钮的map对象，record:当前节点的数据</td>\\n            <td>function(item, record){}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> panelBeforeRender</td>\\n            <td>列表面板上面的渲染函数</td>\\n            <td>function(tool){return ReacNode;}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> panelAfterRender</td>\\n            <td>列表面板下面的渲染函数</td>\\n            <td>function(tool){return ReacNode;}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> moreContentRender</td>\\n            <td>分页控件下面更多内容的渲染函数</td>\\n            <td>function(tool){return ReacNode;}</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> addBtnDisabled</td>\\n            <td>是否禁用新建按钮</td>\\n            <td>boolean | function(record,index){return false}</td>\\n            <td>false</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> addChildBtnDisabled</td>\\n            <td>是否禁用新建按钮</td>\\n            <td>boolean | function(record,index){return false}</td>\\n            <td>false</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> detailBtnDisabled</td>\\n            <td>是否禁用详情按钮</td>\\n            <td>boolean | function(record,index){return false}</td>\\n            <td>false</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> updateBtnDisabled</td>\\n            <td>是否禁用修改按钮</td>\\n            <td>boolean | function(record,index){return false}</td>\\n            <td>false</td>\\n        </tr>\\n        <tr>\\n            <td><i class=\\\"zero-icon zerod-shengchangzhouqi\\\"></i> deleteBtnDisabled</td>\\n            <td>是否禁用删除按钮</td>\\n            <td>boolean | function(record,index){return false}</td>\\n            <td>false</td>\\n        </tr>\\n        <tr>\\n            <td>exportSomething</td>\\n            <td>是一个获取tool的钩子，相当于组件的componentDidMount</td>\\n            <td>function(tool){ myTool=tool }</td>\\n            <td>--</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"tool-\\\">tool 参数</h2>\\n<p>pageConfig.tree 中的一些函数如<code>moreContentRender</code>提供了<code>tool</code>参数出来，有如下内容：</p>\\n<p><code>tool</code>对象不但包含<code>ZerodMainContext</code>提供的东西（请 <span class=\\\"z-history-href\\\" data-path=\\\"/main/context-doc/ZerodMainContext-doc\\\">查看 上下文/ZerodMainContext</span> ），比如 tool.showRightModal，还提供如下内容：</p>\\n<h3 id=\\\"tool-getsearchquery\\\">tool.getSearchQuery</h3>\\n<p>获取当前查询表单中各控件的值的函数</p>\\n<h3 id=\\\"tool-methods\\\">tool.methods</h3>\\n<p>tool.methods 是一个对象，内容如下：</p>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>方法</th>\\n            <th>说明</th>\\n            <th>使用方式</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>showLoading</td>\\n            <td>用于 显示/取消 当前页的loading的方法，参数show：true|false</td>\\n            <td>tool.methods.showLoading(true)</td>\\n        </tr>\\n        <tr>\\n            <td>loadTreeData</td>\\n            <td>更新树列表数据的方法，会触发pageConfig.tree的treeApiInterface函数；参数有moreQuery:是一个对象--更多传入treeApiInterface的参数</td>\\n            <td>tool.methods.loadTreeData()</td>\\n        </tr>\\n        <tr>\\n            <td>removeOneData</td>\\n            <td>移除当前树的一条数据，参数有rowData:一节点的数据 或者 对应pageConfig.tree.treeDataKeys.id的数据(默认是id)，如tool.methods.removeOneData({id:5})，则会移除列表数据中id=5的那一条 </td>\\n            <td>tool.methods.removeOneData({id:5})</td>\\n        </tr>\\n        <tr>\\n            <td>replaceOneData</td>\\n            <td>替换当前树的一条数据，参数有rowData:一节点的数据 或者 对应pageConfig.tree.treeDataKeys.id的数据(默认是id),newData:替换的新数据，如tool.methods.replaceOneData({id:5}，newData)，则会替换列表数据中id=5的那一条 </td>\\n            <td>tool.methods.replaceOneData({id:5}，newData)</td>\\n        </tr>\\n        <tr>\\n            <td>addOneChildData</td>\\n            <td>在当前树的一条数据中新增一条子数据，参数有rowData:一节点的数据 或者 对应pageConfig.tree.treeDataKeys.id的数据(默认是id),newData:新增的子数据，如tool.methods.addOneChildData({id:5}，newData)，则会在列表数据中id=5的那一条数据的children里新增newData </td>\\n            <td>tool.methods.addOneChildData({id:5}，newData)</td>\\n        </tr>\\n        <tr>\\n            <td>openModal</td>\\n            <td>打开当前列表所在位置关联的rightModal，与tool.showRightModal有区别；参数content:窗口的内容</td>\\n            <td>tool.methods.openModal(<\\\\div\\\\>内容<\\\\/div\\\\>)</td>\\n        </tr>\\n        <tr>\\n            <td>closeCurrentModal</td>\\n            <td>关闭当前的rightModal</td>\\n            <td>tool.methods.closeCurrentModal()</td>\\n        </tr>\\n        <tr>\\n            <td>currentTreeData</td>\\n            <td>获取当前树列表的全部数据(数组)的方法</td>\\n            <td>const treeData=tool.methods.currentTreeData()</td>\\n        </tr>\\n        <tr>\\n            <td>setDataState</td>\\n            <td>用于主动更新列表数据状态的方法，参数data:列表数据(数组)</td>\\n            <td>tool.methods.setDataState([...tool.methods.currentTreeData()])</td>\\n        </tr>\\n            <tr>\\n            <td>onAdd</td>\\n            <td>新增按钮的点击事件，会触发pageConfig.tree.addPageRender函数</td>\\n            <td>tool.methods.onAdd()</td>\\n        </tr>\\n        </tr>\\n            <tr>\\n            <td>onAddChild</td>\\n            <td>新增子节点按钮的点击事件，会触发pageConfig.tree.addChildPageRender函数</td>\\n            <td>tool.methods.onAddChild()</td>\\n        </tr>\\n        <tr>\\n            <td>onUpdate</td>\\n            <td>修改按钮的点击事件，会触发pageConfig.tree.updatePageRender函数</td>\\n            <td>tool.methods.onUpdate(record)</td>\\n        </tr>\\n        <tr>\\n            <td>onDetail</td>\\n            <td>详情按钮的点击事件，会触发pageConfig.tree.detailPageRender函数</td>\\n            <td>tool.methods.onDetail(record)</td>\\n        </tr>\\n        <tr>\\n            <td>onDelete</td>\\n            <td>删除按钮的点击事件，会触发pageConfig.tree.deleteApiInterface函数</td>\\n            <td>tool.methods.onDelete(text,record)</td>\\n        </tr>\\n        <tr>\\n            <td>notice</td>\\n            <td>是一个对象，弹出提示通告的方式，跟ZmainHOC中的noticeType有关，属性函数有success、error、info、warning，它们的参数有 content:提示内容，config:同antd的 notification 和 message 参数</td>\\n            <td>tool.methods.notice.success(\\\"操作成功\\\" [,config])</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h3 id=\\\"tool-router\\\">tool.$router</h3>\\n<p>tool.$router 是一个对象，内容如下：</p>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>属性</th>\\n            <th>说明</th>\\n            <th>使用方式</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>history</td>\\n            <td>可以调用push、replace等跳转路由path得方法，<a href=\\\"https://reacttraining.com/react-router/web/api/history\\\" target=\\\"_blank\\\"> 更多请查看react-router的history</a></td>\\n            <td>tool.$router.history.push(\\\"/login\\\")</td>\\n        </tr>\\n        <tr>\\n            <td>location</td>\\n            <td>当前路由的相关信息,<a href=\\\"https://reacttraining.com/react-router/web/api/location\\\" target=\\\"_blank\\\"> 更多请查看react-router的location</a></td>\\n            <td>tool.$router.location.pathname</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\";"],"sourceRoot":""}