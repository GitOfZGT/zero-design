(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"9Q6a":function(t,o){t.exports='<h1 id="zerodmaincontext">ZerodMainContext</h1>\n<p>在<code>ZmainHOC</code>中启用了<code>ZerodMainContext</code>的上文，通过<code>ZerodMainContext.setConsumer(组件)</code>包装的组件，可以使用<code>this.props</code>调用以下东西：</p>\n<div class="z-doc-titles"></div>\n\n<h2 id="-showrightmodal-">打开右抽屉窗口: showRightModal()</h2>\n<p>showRightModal 参数有：<code>show</code>:是否显示，<code>modal</code>: 任意字符串（窗口的唯一标识，可以理解为ID） <del>&quot;mainModal&quot; | &quot;appModal&quot; | &quot;mainModal_top&quot; | &quot;appModal_top&quot;</del>，<code>content</code>：窗口的内容，<code>scroll</code>：窗口内是否启用滚动条,<code>onTransitionend</code>:打开关闭的过渡动画执行完后的回调，<code>wrapperEl</code>:窗口的父元素(dom 元素，可选， document.body 或其他)</p>\n<pre><code class="language-jsx">//第一种传参\nthis.props.showRightModal(true, &quot;mainModal&quot;, &lt;div&gt;内容&lt;/div&gt;, true, (show) =&gt; {});\n//第二种传参\nthis.props.showRightModal({\n    show: true,\n    modal: &quot;mainModal&quot;,//modal也可以不写，内部会随机一个\n    content: &lt;div&gt;内容&lt;/div&gt;,\n    scroll: true,\n    width:null,//自定义宽度 &quot;400px&quot;||&quot;50%&quot;\n    mask:true,//是否显示遮罩层\n    onTransitionend: (show) =&gt; {},\n    // wrapperEl:document.body\n});\n//关闭窗口\nthis.props.showRightModal (false,&#39;mainModal&#39;);//关闭对应的\nthis.props.showRightModal (false);//关闭的是最顶层的那个</code></pre>\n<p><del><code>modal</code>属性层级：&quot;appModal_top&quot; &gt; &quot;appModal&quot; &gt; &quot;mainModal_top&quot; &gt; &quot;mainModal&quot;</del></p>\n<p><del>2018-10-01 <code>modal</code>属性新增 &quot;mainModal_top&quot;和&quot;appModal_top&quot;值</del></p>\n<p>2018-08-22 新增<code>onTransitionend</code>属性，支持如下的传参方式</p>\n<p>2019-01-11 <code>modal</code>属性不再是固定的，是任意的字符串，窗口数量可以无限叠加；新增<code>wrapperEl</code>属性：窗口的父元素(dom 元素，可以选择 document.body 或其他)</p>\n<div class="z-demo-box" data-render="open-modal" data-title=""></div>\n\n<pre><code class="language-jsx">import React from &quot;react&quot;;\nimport ZpureComponent from &quot;zerod/components/ZpureComponent&quot;;\nimport { Button } from &quot;antd&quot;;\nimport { ZerodMainContext } from &quot;zerod&quot;;\nclass OpenModal extends ZpureComponent {\n    methods = {\n        openMainModal: (e) =&gt; {\n            this.props.showRightModal(\n                true,\n                &quot;mainModal&quot;,\n                &lt;div className=&quot;z-panel&quot;&gt;\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;main子路由位置的右边窗口&lt;/div&gt;\n                &lt;/div&gt;,\n            );\n        },\n        openAppModal: (e) =&gt; {\n            this.props.showRightModal(\n                true,\n                &quot;appModal&quot;,\n                &lt;div className=&quot;z-panel&quot;&gt;\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;最外边的右边窗口&lt;/div&gt;\n                &lt;/div&gt;,\n            );\n        },\n    };\n    render() {\n        return (\n            &lt;div&gt;\n                &lt;Button type=&quot;dashed&quot; className=&quot;z-open-modal-btn&quot; onClick={this.methods.openMainModal}&gt;\n                    打开main子路由位置的右边窗口\n                &lt;/Button&gt;\n\n                &lt;Button type=&quot;dashed&quot; className=&quot;z-open-modal-btn z-margin-left-20&quot; onClick={this.methods.openAppModal}&gt;\n                    打开最外边的右边窗口\n                &lt;/Button&gt;\n            &lt;/div&gt;\n        );\n    }\n}\nconst OutPut = ZerodMainContext.setConsumer(OpenModal);</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="-loading-showrouteloading-show-tip-">显示主页路由区域 loading: showRouteLoading(show,tip)</h2>\n<p>showRouteLoading 方法有一个参数，<code>show</code>:是否显示，<code>tip</code>:自定义文案</p>\n<div class="z-demo-box" data-render="route-loading" data-title="this.props.showRouteLoading(true)"></div>\n\n<pre><code class="language-jsx">class MyScript extends ZpureComponent {\n    methods = {\n        showRouteLoading: (e) =&gt; {\n            this.props.showRouteLoading(true);\n            setTimeout(() =&gt; {\n                this.props.showRouteLoading(false);\n            }, 2000);\n        },\n    };\n    render() {\n        return (\n            &lt;div&gt;\n                &lt;Button type=&quot;primary&quot; className=&quot;z-show-loading-btn&quot; onClick={this.methods.showRouteLoading}&gt;\n                    显示路由位置的loading\n                &lt;/Button&gt;\n            &lt;/div&gt;\n        );\n    }\n}\nconst OutPut = ZerodMainContext.setConsumer(MyScript);\nreturn &lt;OutPut /&gt;;</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="-loading-showmodalloading-show-modal-tip-">显示右边窗口 loading: showModalLoading(show,modal,tip)</h2>\n<p>showModalLoading 方法有两个参数，<code>show</code>:是否显示，<code>modal</code>: &quot;mainModal&quot; | 与 showRightModal()的 modal 属性对应，<code>tip</code>:自定义文案</p>\n<div class="z-demo-box" data-render="modal-loading" data-title="this.props.showModalLoading(true, modal);"></div>\n\n<pre><code class="language-jsx">class MyScript extends ZpureComponent {\n    methods = {\n        showModalLoading: (e, modal) =&gt; {\n            this.props.showRightModal(true, modal);\n            this.props.showModalLoading(true, modal);\n            setTimeout(() =&gt; {\n                this.props.showModalLoading(false, modal);\n            }, 2000);\n        },\n    };\n    render() {\n        return (\n            &lt;div&gt;\n                &lt;Button\n                    type=&quot;primary&quot;\n                    className=&quot;z-show-loading-btn&quot;\n                    onClick={(e) =&gt; {\n                        this.methods.showModalLoading(e, &quot;mainModal&quot;);\n                    }}\n                &gt;\n                    显示 mainModal 的loading\n                &lt;/Button&gt;\n                &lt;Button\n                    type=&quot;primary&quot;\n                    className=&quot;z-show-loading-btn&quot;\n                    onClick={(e) =&gt; {\n                        this.methods.showModalLoading(e, &quot;mainModal_top&quot;);\n                    }}\n                &gt;\n                    显示 mainModal_top 的loading\n                &lt;/Button&gt;\n                &lt;Button\n                    type=&quot;primary&quot;\n                    className=&quot;z-show-loading-btn z-margin-left-20&quot;\n                    onClick={(e) =&gt; {\n                        this.methods.showModalLoading(e, &quot;appModal&quot;);\n                    }}\n                &gt;\n                    显示 appModal 的loading\n                &lt;/Button&gt;\n                &lt;Button\n                    type=&quot;primary&quot;\n                    className=&quot;z-show-loading-btn z-margin-left-20&quot;\n                    onClick={(e) =&gt; {\n                        this.methods.showModalLoading(e, &quot;appModal_top&quot;);\n                    }}\n                &gt;\n                    显示 appModal_top 的loading\n                &lt;/Button&gt;\n            &lt;/div&gt;\n        );\n    }\n}\nconst OutPut = ZerodMainContext.setConsumer(MyScript);\nreturn &lt;OutPut /&gt;;</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="-getsidemenudata-">获取左边导航栏数据: getSideMenuData()</h2>\n<p>getSideMenuData()返回的是一个数组</p>\n<h2 id="-getscrollinstance-modal-">获取滚动条的实例：getScrollInstance(modal)</h2>\n<p>getScrollInstance 方法有一个参数，<code>modal</code>:哪个地方的滚动条: &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\n<div class="z-doc-titles"></div>\n\n<h2 id="-dom-getinsertlocation-el-">获取某个 dom 元素所在的位置：getInsertLocation(el)</h2>\n<p><code>const insertLocaltion = this.props.getInsertLocation(el);</code> 返回值<code>insertLocaltion</code>是 &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\n<p>使用例子可参考如下的 getScrollAreaWrapperEl 中 demo 的代码</p>\n<div class="z-doc-titles"></div>\n\n<h2 id="-getscrollareawrapperel-modal-">获取滚动条区域的包裹元素：getScrollAreaWrapperEl(modal)</h2>\n<p>getScrollAreaWrapperEl 方法有一个参数，<code>modal</code>:哪个地方的滚动条: &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\n<p>当需要某块内容绝对定位于主要内容之上，但不想受滚动条滚动时，可用这方法获取对应得<code>wrapperEl</code>，然后使用<code>ReactDOM.createPortal(内容, wrapperEl)</code>将内容插入到<code>wrapperEl</code>内</p>\n<h3 id="const-obj-this-props-getscrollareawrapperel-mainmodal-">const obj= this.props.getScrollAreaWrapperEl(&quot;mainModal&quot;)</h3>\n<h3 id="obj-wrapperel-">obj.wrapperEl : 滚动条区域的包裹元素</h3>\n<h3 id="obj-methods">obj.methods</h3>\n<table>\n    <thead>\n        <tr>\n            <th>参数</th>\n            <th>说明</th>\n            <th>用法</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>setScrollAreaStyle</td>\n            <td>设置滚动区域的style</td>\n            <td>obj.methods.setScrollAreaStyle({height:"calc(100% - 60px)"})</td>\n        </tr>\n        <tr>\n            <td>setScrollAreaClassName</td>\n            <td>设置滚动区域的className</td>\n            <td>obj.methods.setScrollAreaClassName(`z-margin-10 z-flex`})</td>\n        </tr>\n        <tr>\n            <td>resetScrollArea</td>\n            <td>恢复到调用 setScrollAreaStyle 或 setScrollAreaClassName 之前的样式</td>\n            <td>obj.methods.resetScrollArea()</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class="z-demo-box" data-render="myWrapperDemo" data-title="例如：使用ZeditSimpleFormHOC时，在pageCofig的panelAfterRender放入了如下代码的组件"></div>\n\n<pre><code class="language-jsx">import React from &quot;react&quot;;\nimport ZpureComponent from &quot;zerod/components/ZpureComponent&quot;;\nimport ReactDom from &quot;react-dom&quot;;\nimport { ZerodMainContext } from &quot;zerod&quot;;\nclass MoreCofig extends ZpureComponent {\n    componentDidMount() {\n        // 首先得获取this.boxEl元素所在得位置\n        const insetLocaltion = this.props.getInsertLocation(this.boxEl);\n        // 获取insetLocaltion所在滚动区域得包裹元素\n        this.obj = this.props.getScrollAreaWrapperEl(insetLocaltion);\n        // 由于将 100px 高度的内容插入到滚动区域外边，\n        // 需要将 滚动区域 的高度设置为`calc(100% - 100px)`\n        this.obj.methods.setScrollAreaStyle({\n            height: `calc(100% - 100px)`,\n        });\n        this.setState({});\n    }\n    componentWillUnmount() {\n        // 组件销毁前 恢复 滚动区域的原始样式\n        this.obj.methods.resetScrollArea();\n    }\n    render() {\n        return (\n            &lt;div className=&quot;z-panel z-margin-top-20&quot; ref={(el) =&gt; (this.boxEl = el)}&gt;\n                &lt;div className=&quot;z-panel-body&quot;&gt;panelAfterRender&lt;/div&gt;\n                {/* 将如下的内容插入到了 滚动条区域外面 不受滚动条影响 */}\n                {this.obj\n                    ? ReactDom.createPortal(\n                            &lt;div\n                                style={{\n                                    position: &quot;absolute&quot;,\n                                    bottom: &quot;0px&quot;,\n                                    width: &quot;100%&quot;,\n                                    height: &quot;100px&quot;,\n                                    backgroundColor: &quot;white&quot;,\n                                    borderTop: &quot;1px solid #ddd&quot;,\n                                }}\n                            &gt;\n                                内容\n                            &lt;/div&gt;,\n                            this.obj.wrapperEl,\n                      )\n                    : null}\n            &lt;/div&gt;\n        );\n    }\n}\nexport default ZerodMainContext.setConsumer(MoreCofig);</code></pre>\n<h2 id="-setscrolltotop-witch-">下次滚动条更新的时候，让滚动条回到顶部: setScrollToTop(witch)</h2>\n<p>setScrollToTop 方法有一个参数，<code>witch</code>:哪个地方滚动条更新: &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\n<div class="z-doc-titles"></div>\n\n<h2 id="-getuserinfo-">获取用户登录信息: getUserInfo()</h2>\n<p>ZmainHOC 的 componentDidMount 钩子中的 callback 回调注入的 userInfo 数据，可以通过 getUserInfo()获得</p>\n<h2 id="-settemporarystorage-data-gettemporarystorage-">临时存储器: setTemporaryStorage(data) 和 getTemporaryStorage()</h2>\n<p>setTemporaryStorage(data)用于跨路由页面临时存储一些数据，data 参数是一个对象：{&quot;key&quot;:&quot;存储的数据&quot;}；getTemporaryStorage()获取当前存储器的数据</p>\n<h2 id="-router">$router</h2>\n<p>$router:是一个对象，提供 history 和 location 属性</p>\n'},IvrI:function(t,o,n){"use strict";n.r(o);var e=n("4QcI"),a=n("MaNN"),l=n("9DAX"),d=n("MhH0"),r=n.n(d),i=n("FcZB"),s=n.n(i),p=n("Ratc"),c=n.n(p),u=n("0j8+"),m=n.n(u),h=n("0kOG"),g=n.n(h),q=n("uqIC"),M=n.n(q),w=n("ebhq"),v=n("9Q6a"),f=n.n(v),y=n("Q7Bs"),b=w.a.AmdDocHOC,C=w.a.AshowDemoHOC,z=function(t){function o(){var t,n;r()(this,o);for(var e=arguments.length,a=new Array(e),l=0;l<e;l++)a[l]=arguments[l];return(n=c()(this,(t=m()(o)).call.apply(t,[this].concat(a)))).onClick=function(){n.props.closeModal?n.props.showRightModal({show:!1,modal:n.props.closeModalName}):n.props.showRightModal({show:!0,modal:n.props.nextModalName,content:n.props.nexModalContent,scroll:!0,onTransitionend:function(t){},wrapperEl:n.props.wrapperEl})},n}return g()(o,t),s()(o,[{key:"render",value:function(){return M.a.createElement("div",{className:"z-panel z-margin-bottom-15"},M.a.createElement("div",{className:"z-panel-heading"},this.props.title?this.props.title:"标题"),M.a.createElement("div",{className:"z-panel-heading"},this.props.content),M.a.createElement("div",{className:"z-panel-heading"},M.a.createElement(l.a,{type:"primary",onClick:this.onClick},this.props.btnName)))}}]),o}(M.a.PureComponent);z=a.a.setConsumer(z),o.default=b(f.a,{"open-modal":function(){var t=function(t){function o(){var t,n;r()(this,o);for(var e=arguments.length,a=new Array(e),l=0;l<e;l++)a[l]=arguments[l];return(n=c()(this,(t=m()(o)).call.apply(t,[this].concat(a)))).methods={openMainModal:function(t){t.target._modal="mainModal",t.target._render=function(){return M.a.createElement(M.a.Fragment,null,M.a.createElement(z,{title:"这里是 mainModal 窗口",content:'this.props.showRightModal({\n\t\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\t\tmodal: "mainModal_top",\n\t\t\t\t\t\t\t\t\t\tcontent: <div className="z-panel">\n\t\t\t\t\t\t\t\t\t\t<div className="z-panel-heading">这里是 mainModal_top 窗口</div>\n\t\t\t\t\t\t\t\t\t</div>,\n\t\t\t\t\t\t\t\t\t\tscroll: true,\n\t\t\t\t\t\t\t\t\t\tonTransitionend: (show) => {},\n\t\t\t\t\t\t\t\t\t});',btnName:"打开下一个窗口",nextModalName:"mainModal_top",nexModalContent:M.a.createElement("div",{className:"z-panel"},M.a.createElement("div",{className:"z-panel-heading"},"这里是 mainModal_top 窗口"))}),M.a.createElement(z,{title:"这里是 mainModal 窗口",content:'this.props.showRightModal({\n\t\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\t\tmodal: "mainModal_body",\n\t\t\t\t\t\t\t\t\t\tcontent: <div className="z-panel">\n\t\t\t\t\t\t\t\t\t\t\t<div className="z-panel-heading">这里是 mainModal_body 窗口</div>\n\t\t\t\t\t\t\t\t\t\t</div>,\n\t\t\t\t\t\t\t\t\t\tscroll: true,\n\t\t\t\t\t\t\t\t\t\tonTransitionend: (show) => {},\n\t\t\t\t\t\t\t\t\t\twrapperEl: document.body,\n\t\t\t\t\t\t\t\t\t});',btnName:"打开在document.body的窗口",wrapperEl:document.body,nextModalName:"mainModal_body",nexModalContent:M.a.createElement("div",{className:"z-panel"},M.a.createElement("div",{className:"z-panel-heading"},"这里是 mainModal_body 窗口"))}),M.a.createElement(z,{title:"这里是 mainModal 窗口",content:"this.props.showRightModal({\n\t\t\t\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\t\t\t});",btnName:"关闭当前窗口",closeModal:!0}))}},openAppModal:function(t){t.target._modal="appModal",t.target._render=function(){return M.a.createElement(z,{content:"这里是 appModal 窗口",btnName:"打开 appModal_top 窗口",nextModalName:"appModal_top",nexModalContent:M.a.createElement("div",{className:"z-panel"},M.a.createElement("div",{className:"z-panel-heading"},"这里是 appModal_top 窗口"))})}}},n}return g()(o,t),s()(o,[{key:"render",value:function(){return M.a.createElement("div",null,M.a.createElement(l.a,{type:"primary",className:"z-open-modal-btn",onClick:this.methods.openMainModal},'打开 "mainModal" 窗口'))}}]),o}(M.a.PureComponent),o=a.a.setConsumer(t);return M.a.createElement(o,null)},"route-loading":function(){var t=function(t){function o(){var t,n;r()(this,o);for(var e=arguments.length,a=new Array(e),l=0;l<e;l++)a[l]=arguments[l];return(n=c()(this,(t=m()(o)).call.apply(t,[this].concat(a)))).methods={showRouteLoading:function(t){t.target._modal="mainRoute"}},n}return g()(o,t),s()(o,[{key:"render",value:function(){return M.a.createElement("div",null,M.a.createElement(l.a,{type:"primary",className:"z-show-loading-btn",onClick:this.methods.showRouteLoading},'显示 "mainRoute" 的loading'))}}]),o}(M.a.PureComponent),o=a.a.setConsumer(t);return M.a.createElement(o,null)},"modal-loading":function(){var t=function(t){function o(){var t,n;r()(this,o);for(var e=arguments.length,a=new Array(e),l=0;l<e;l++)a[l]=arguments[l];return(n=c()(this,(t=m()(o)).call.apply(t,[this].concat(a)))).methods={showModalLoading:function(t,o){t.target._modal=o}},n}return g()(o,t),s()(o,[{key:"render",value:function(){var t=this;return M.a.createElement("div",null,M.a.createElement(l.a,{type:"primary",className:"z-show-loading-btn",onClick:function(o){t.methods.showModalLoading(o,"mainModal")}},'显示 "mainModal" 的loading'))}}]),o}(M.a.PureComponent),o=a.a.setConsumer(t);return M.a.createElement(o,null)},myWrapperDemo:function(){var t=Object(e.a)(Object(y.a)("add")),o=C(M.a.createElement(t,null),!0);return M.a.createElement(o,null)}})},Revr:function(t,o,n){var e={"./area.api.js":"eAri","./config.api.js":"5WI2","./login.api.js":"O3gd","./scheduling.api.js":"Lwzs"};function a(t){var o=l(t);return n(o)}function l(t){if(!n.o(e,t)){var o=new Error("Cannot find module '"+t+"'");throw o.code="MODULE_NOT_FOUND",o}return e[t]}a.keys=function(){return Object.keys(e)},a.resolve=l,t.exports=a,a.id="Revr"},"SX+g":function(t,o,n){t.exports=n("sG4F")(498)},jjl2:function(t,o,n){var e={"./AmdDocHOC/index.jsx":"pnNO","./AshowDemoHOC/index.jsx":"+fre"};function a(t){var o=l(t);return n(o)}function l(t){if(!n.o(e,t)){var o=new Error("Cannot find module '"+t+"'");throw o.code="MODULE_NOT_FOUND",o}return e[t]}a.keys=function(){return Object.keys(e)},a.resolve=l,t.exports=a,a.id="jjl2"}}]);
//# sourceMappingURL=16.6bd58907e7f31caf7a64.js.map