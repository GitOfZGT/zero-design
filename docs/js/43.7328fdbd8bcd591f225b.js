(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{Iajx:function(t,e,l){"use strict";l.r(e);var n=l("JBb0"),a=l("M0Qm"),d=l("uqIC"),o=l.n(d),i=l("ebhq"),s=l("irHV"),c=l.n(s),g=i.a.AmdDocHOC;e.default=g(c.a,{"text-color":function(){return o.a.createElement("div",{className:"z-flex-space-between"},["z-text-blue","z-text-light-blue","z-text-green","z-text-yellow","z-text-red","z-text-black","z-text-light-black","z-text-gray","z-text-light-gray"].map(function(t,e){return o.a.createElement("div",{className:t,key:e},t)}))},"default-panel":function(){return o.a.createElement(n.a,{gutter:40},o.a.createElement(a.a,{span:12},o.a.createElement("div",{className:"z-panel"},o.a.createElement("div",{className:"z-panel-heading"},"标题"),o.a.createElement("div",{className:"z-panel-body"},"无边框面板"))),o.a.createElement(a.a,{span:12},o.a.createElement("div",{className:"z-panel is-panel-border"},o.a.createElement("div",{className:"z-panel-heading"},"标题"),o.a.createElement("div",{className:"z-panel-body"},"有边框面板"))))},"default-info":function(){return o.a.createElement("div",null,o.a.createElement("dl",{className:"z-info"},o.a.createElement("dt",{className:"z-info-left"},o.a.createElement("span",{className:"z-margin-bottom-10"},"标题1")),o.a.createElement("dd",{className:"z-info-right"},o.a.createElement("span",{className:"z-margin-bottom-10"},"为了使我们有更高的可控性，即自由控制顶点位置，WebGL把这个权力交给了我们，这就是可编程渲染管线（不用理解）。"))),o.a.createElement("dl",{className:"z-info"},o.a.createElement("dt",{className:"z-info-left"},o.a.createElement("span",{className:"z-margin-bottom-10"},"标题2")),o.a.createElement("dd",{className:"z-info-right"},o.a.createElement("span",{className:"z-margin-bottom-10"},"我们引入了一个新的名词，叫“顶点着色器”"))))}})},"SX+g":function(t,e,l){t.exports=l("sG4F")(498)},irHV:function(t,e){t.exports='<h1 id="-">通用样式</h1>\n<p>积累了一些通用的样式类</p>\n<p><code>zerod-admin-webpack</code> 脚手架中的<code>src/app.scss</code>已经全部引入 <code>@import &#39;~zerod/index.scss&#39;;</code>，所以可以直接使用如下的所有的样式类名</p>\n<div class="z-doc-titles"></div>\n\n<h2 id="-">字体颜色</h2>\n<div class="z-demo-box" data-render="text-color" data-title="定义了一些字体颜色"></div>\n\n<pre><code class="language-html">&lt;div className=&quot;z-text-blue&quot;&gt;z-text-blue&lt;/div&gt;</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="-">面板</h2>\n<div class="z-demo-box" data-render="default-panel" data-title="默认面板"></div>\n\n<pre><code class="language-html">// 无边框面板\n&lt;div className=&quot;z-panel&quot;&gt;\n    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\n    &lt;div className=&quot;z-panel-body&quot;&gt;无边框面板&lt;/div&gt;\n&lt;/div&gt;\n// 有边框面板\n&lt;div className=&quot;z-panel is-panel-border&quot;&gt;\n    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\n    &lt;div className=&quot;z-panel-body&quot;&gt;有边框面板&lt;/div&gt;\n&lt;/div&gt;\n\n// 有边框+只有上圆角\n&lt;div className=&quot;z-panel is-panel-border is-radius-top&quot;&gt;\n    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\n    &lt;div className=&quot;z-panel-body&quot;&gt;有边框面板&lt;/div&gt;\n&lt;/div&gt;\n// 有边框+只有下圆角\n&lt;div className=&quot;z-panel is-panel-border is-radius-bottom&quot;&gt;\n    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\n    &lt;div className=&quot;z-panel-body&quot;&gt;有边框面板&lt;/div&gt;\n&lt;/div&gt;\n\n// 面板body全无padding\n&lt;div className=&quot;z-panel&quot;&gt;\n    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\n    &lt;div className=&quot;z-panel-body is-no-padding&quot;&gt;内容&lt;/div&gt;\n&lt;/div&gt;\n// 面板body左右无padding\n&lt;div className=&quot;z-panel&quot;&gt;\n    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\n    &lt;div className=&quot;z-panel-body is-no-padding-sides&quot;&gt;内容&lt;/div&gt;\n&lt;/div&gt;\n// 面板body上下无padding\n&lt;div className=&quot;z-panel&quot;&gt;\n    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\n    &lt;div className=&quot;z-panel-body is-no-padding-vertical&quot;&gt;内容&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="z-info">z-info</h2>\n<div class="z-demo-box" data-render="default-info" data-title="信息面板"></div>\n\n<pre><code class="language-html">&lt;div&gt;\n    &lt;dl className=&quot;z-info&quot;&gt;\n        &lt;dt className=&quot;z-info-left&quot;&gt;&lt;span className=&quot;z-margin-bottom-10&quot;&gt;标题1&lt;/span&gt;&lt;/dt&gt;\n        &lt;dd className=&quot;z-info-right&quot;&gt;\n            &lt;span className=&quot;z-margin-bottom-10&quot;&gt;为了使我们有更高的可控性，即自由控制顶点位置，WebGL把这个权力交给了我们，这就是可编程渲染管线（不用理解）。&lt;/span&gt;\n        &lt;/dd&gt;\n    &lt;/dl&gt;\n    &lt;dl className=&quot;z-info&quot;&gt;\n        &lt;dt className=&quot;z-info-left&quot;&gt;&lt;span className=&quot;z-margin-bottom-10&quot;&gt;标题2&lt;/span&gt;&lt;/dt&gt;\n        &lt;dd className=&quot;z-info-right&quot;&gt;&lt;span className=&quot;z-margin-bottom-10&quot;&gt;我们引入了一个新的名词，叫“顶点着色器”&lt;/span&gt;&lt;/dd&gt;\n    &lt;/dl&gt;\n&lt;/div&gt;</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="-">元素浮动</h2>\n<p>单独引入：<code>@import &#39;~zerod/scss/cmomon/z-float.scss&#39;;</code></p>\n<pre><code class="language-html">&lt;div className=&quot;z-clear-fix&quot;&gt; //清除浮动\n    &lt;div className=&quot;z-float-left&quot;&gt;&lt;/div&gt; //左浮动\n    &lt;div className=&quot;z-float-right&quot;&gt;&lt;/div&gt; //右浮动\n&lt;/div&gt;</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="-">字体大小</h2>\n<p>定义了 12-100px 的字体大小</p>\n<p>单独引入：<code>@import &#39;~zerod/scss/cmomon/z-font-size.scss&#39;;</code></p>\n<pre><code class="language-html">&lt;div className=&quot;z-font-size-16&quot;&gt;16像素大小&lt;/div&gt;\n&lt;div className=&quot;z-font-size-16-important&quot;&gt;权重优先&lt;/div&gt;</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="-">文本对齐</h2>\n<p>定义了文本对齐的 clasName</p>\n<p>单独引入：<code>@import &#39;~zerod/scss/cmomon/z-text-align.scss&#39;;</code></p>\n<pre><code class="language-html">&lt;div className=&quot;z-text-left&quot;&gt;文本居左&lt;/div&gt;\n&lt;div className=&quot;z-text-center&quot;&gt;文本居中&lt;/div&gt;\n&lt;div className=&quot;z-text-right&quot;&gt;文本居右&lt;/div&gt;\n&lt;div className=&quot;z-text-underline&quot;&gt;文字下划线&lt;/div&gt;\n&lt;div className=&quot;z-text-underline-hover&quot;&gt;文字hover后显示下划线&lt;/div&gt;\n&lt;div className=&quot;z-vertical-top&quot;&gt;文字顶部对齐&lt;/div&gt;\n&lt;div className=&quot;z-vertical-middle&quot;&gt;文字中间对齐&lt;/div&gt;\n&lt;div className=&quot;z-vertical-bottom&quot;&gt;文字底部对齐&lt;/div&gt;</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="margin-padding-">margin 和 padding 值</h2>\n<p>单独引入：<code>@import &#39;~zerod/scss/cmomon/z-margin-padding.scss&#39;;</code></p>\n<p>定义了 0-100px 的 margin 和 padding 值的 className</p>\n<p>如需提高权重，加后缀：&quot;-important&quot;</p>\n<p><code>z-margin-10</code> : 四个方位 margin 值为 10px</p>\n<p><code>z-margin-left-10</code> : margin-left 为 10px</p>\n<p><code>z-margin-top-10</code> : margin-top 为 10px</p>\n<p><code>z-margin-right-10</code> : margin-right 为 10px</p>\n<p><code>z-margin-bottom-10</code> : margin-bottom 为 10px</p>\n<p><code>z-margin-bottom-10-important</code> :权重优先</p>\n<p>同理<code>padding</code>值 ：</p>\n<p><code>z-padding-10</code> : 四个方位 padding 值为 10px</p>\n<div class="z-doc-titles"></div>\n\n<h2 id="flex-">flex 盒子(更多请了解弹性布局)</h2>\n<p>单独引入：<code>@import &#39;~zerod/scss/cmomon/z-flex.scss&#39;;</code></p>\n<pre><code class="language-html">//z-flex-1只到z-flex-5\n&lt;div className=&quot;z-flex&quot;&gt; //启用弹性盒子\n    &lt;div className=&quot;z-flex-1&quot;&gt;&lt;/div&gt; //占比1\n    &lt;div className=&quot;z-flex-2&quot;&gt;&lt;/div&gt; //占比2\n&lt;/div&gt;\n\n//盒子子元素水平居中\n&lt;div className=&quot;z-flex-items-h-center&quot;&gt;\n    //内部子元素呈水平居中\n    &lt;div&gt;&lt;/div&gt;\n    &lt;div&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n//盒子子元素垂直居中\n&lt;div className=&quot;z-flex-items-v-center&quot;&gt;\n    //内部子元素呈垂直居中\n    &lt;div&gt;&lt;/div&gt;\n    &lt;div&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n//盒子子元素水平垂直居中\n&lt;div className=&quot;z-flex-items-center&quot;&gt;\n    //内部子元素呈水平垂直居中\n    &lt;div&gt;&lt;/div&gt;\n    &lt;div&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n//子元素自身高度跟随内容\n&lt;div className=&quot;z-flex&quot;&gt; //父元素\n    &lt;div&gt;子元素默认高度占父元素100%&lt;/div&gt;\n    &lt;div className=&quot;z-flex-self-baseline&quot;&gt;子元素高度跟随内容高度&lt;/div&gt;\n&lt;/div&gt;\n\n//子元素 两端对齐\n&lt;div className=&quot;z-flex-space-between&quot;&gt; //父元素\n    &lt;div&gt;最左&lt;/div&gt;\n    &lt;div&gt;中间&lt;/div&gt;\n    &lt;div&gt;最右&lt;/div&gt;\n&lt;/div&gt;\n\n//子元素自身垂直居中\n&lt;div className=&quot;z-flex&quot;&gt; //父元素\n    &lt;div&gt;&lt;/div&gt;\n    &lt;div&gt;&lt;/div&gt;\n    &lt;div className=&quot;z-flex-self-center&quot;只有我是垂直居中&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n<div class="z-doc-titles"></div>\n\n<h2 id="-em-">定义了 em 单位的字体缩进</h2>\n<p>1-10em 单位的字体缩进</p>\n<p>单独引入：<code>@import &#39;~zerod/scss/cmomon/z-text-indent.scss&#39;;</code></p>\n<p>如需提高权重，加后缀：&quot;-important&quot;</p>\n<pre><code class="language-html">&lt;div className=&quot;z-text-indent-2&quot;&gt;文本&lt;/div&gt;</code></pre>\n'},jjl2:function(t,e,l){var n={"./AmdDocHOC/index.jsx":"pnNO","./AshowDemoHOC/index.jsx":"+fre"};function a(t){var e=d(t);return l(e)}function d(t){if(!l.o(n,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return n[t]}a.keys=function(){return Object.keys(n)},a.resolve=d,t.exports=a,a.id="jjl2"}}]);
//# sourceMappingURL=43.7328fdbd8bcd591f225b.js.map