{"version":3,"sources":["webpack:///./node_modules/zerod/components/ZerodMainContext.md","webpack:///./src/views/Main/context-doc/ZerodMainContext-doc/index.jsx","webpack:///./src/Api sync \\.api.js$","webpack:///delegated ./node_modules/_viewerjs@1.3.3@viewerjs/dist/viewer.js from dll-reference _dll_vendor_e823eb2f1294e4241445","webpack:///./src/HOC sync index.jsx$"],"names":["module","exports","AmdDocHOC","HOC","AshowDemoHOC","ModalContent","onClick","_this","props","closeModal","showRightModal","show","modal","closeModalName","nextModalName","content","nexModalContent","scroll","onTransitionend","wrapperEl","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","className","this","title","antd_es_button__WEBPACK_IMPORTED_MODULE_2__","type","btnName","React","PureComponent","zerod_components_ZerodMainContext__WEBPACK_IMPORTED_MODULE_1__","setConsumer","doc","open-modal","OpenModal","_React$PureComponent2","_getPrototypeOf3","_this2","_babel_runtime_corejs2_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default","_len2","arguments","length","args","Array","_key2","_babel_runtime_corejs2_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_corejs2_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default","call","apply","concat","methods","openMainModal","e","target","_modal","_render","Fragment","document","body","openAppModal","_babel_runtime_corejs2_helpers_inherits__WEBPACK_IMPORTED_MODULE_7___default","_babel_runtime_corejs2_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default","key","value","OutPut","route-loading","_React$PureComponent3","_getPrototypeOf4","_this3","_len3","_key3","showRouteLoading","modal-loading","_React$PureComponent4","_getPrototypeOf5","_this4","_len4","_key4","showModalLoading","_this5","myWrapperDemo","Com","Object","zerod_components_ZeditSimpleFormHOC__WEBPACK_IMPORTED_MODULE_0__","getConfig","MyScript","map","./area.api.js","./config.api.js","./login.api.js","./scheduling.api.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve","./AmdDocHOC/index.jsx","./AshowDemoHOC/index.jsx"],"mappings":"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","file":"js/16.6bd58907e7f31caf7a64.js","sourcesContent":["module.exports = \"<h1 id=\\\"zerodmaincontext\\\">ZerodMainContext</h1>\\n<p>在<code>ZmainHOC</code>中启用了<code>ZerodMainContext</code>的上文，通过<code>ZerodMainContext.setConsumer(组件)</code>包装的组件，可以使用<code>this.props</code>调用以下东西：</p>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-showrightmodal-\\\">打开右抽屉窗口: showRightModal()</h2>\\n<p>showRightModal 参数有：<code>show</code>:是否显示，<code>modal</code>: 任意字符串（窗口的唯一标识，可以理解为ID） <del>&quot;mainModal&quot; | &quot;appModal&quot; | &quot;mainModal_top&quot; | &quot;appModal_top&quot;</del>，<code>content</code>：窗口的内容，<code>scroll</code>：窗口内是否启用滚动条,<code>onTransitionend</code>:打开关闭的过渡动画执行完后的回调，<code>wrapperEl</code>:窗口的父元素(dom 元素，可选， document.body 或其他)</p>\\n<pre><code class=\\\"language-jsx\\\">//第一种传参\\nthis.props.showRightModal(true, &quot;mainModal&quot;, &lt;div&gt;内容&lt;/div&gt;, true, (show) =&gt; {});\\n//第二种传参\\nthis.props.showRightModal({\\n    show: true,\\n    modal: &quot;mainModal&quot;,//modal也可以不写，内部会随机一个\\n    content: &lt;div&gt;内容&lt;/div&gt;,\\n    scroll: true,\\n    width:null,//自定义宽度 &quot;400px&quot;||&quot;50%&quot;\\n    mask:true,//是否显示遮罩层\\n    onTransitionend: (show) =&gt; {},\\n    // wrapperEl:document.body\\n});\\n//关闭窗口\\nthis.props.showRightModal (false,&#39;mainModal&#39;);//关闭对应的\\nthis.props.showRightModal (false);//关闭的是最顶层的那个</code></pre>\\n<p><del><code>modal</code>属性层级：&quot;appModal_top&quot; &gt; &quot;appModal&quot; &gt; &quot;mainModal_top&quot; &gt; &quot;mainModal&quot;</del></p>\\n<p><del>2018-10-01 <code>modal</code>属性新增 &quot;mainModal_top&quot;和&quot;appModal_top&quot;值</del></p>\\n<p>2018-08-22 新增<code>onTransitionend</code>属性，支持如下的传参方式</p>\\n<p>2019-01-11 <code>modal</code>属性不再是固定的，是任意的字符串，窗口数量可以无限叠加；新增<code>wrapperEl</code>属性：窗口的父元素(dom 元素，可以选择 document.body 或其他)</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"open-modal\\\" data-title=\\\"\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">import React from &quot;react&quot;;\\nimport ZpureComponent from &quot;zerod/components/ZpureComponent&quot;;\\nimport { Button } from &quot;antd&quot;;\\nimport { ZerodMainContext } from &quot;zerod&quot;;\\nclass OpenModal extends ZpureComponent {\\n    methods = {\\n        openMainModal: (e) =&gt; {\\n            this.props.showRightModal(\\n                true,\\n                &quot;mainModal&quot;,\\n                &lt;div className=&quot;z-panel&quot;&gt;\\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;main子路由位置的右边窗口&lt;/div&gt;\\n                &lt;/div&gt;,\\n            );\\n        },\\n        openAppModal: (e) =&gt; {\\n            this.props.showRightModal(\\n                true,\\n                &quot;appModal&quot;,\\n                &lt;div className=&quot;z-panel&quot;&gt;\\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;标题&lt;/div&gt;\\n                    &lt;div className=&quot;z-panel-heading&quot;&gt;最外边的右边窗口&lt;/div&gt;\\n                &lt;/div&gt;,\\n            );\\n        },\\n    };\\n    render() {\\n        return (\\n            &lt;div&gt;\\n                &lt;Button type=&quot;dashed&quot; className=&quot;z-open-modal-btn&quot; onClick={this.methods.openMainModal}&gt;\\n                    打开main子路由位置的右边窗口\\n                &lt;/Button&gt;\\n\\n                &lt;Button type=&quot;dashed&quot; className=&quot;z-open-modal-btn z-margin-left-20&quot; onClick={this.methods.openAppModal}&gt;\\n                    打开最外边的右边窗口\\n                &lt;/Button&gt;\\n            &lt;/div&gt;\\n        );\\n    }\\n}\\nconst OutPut = ZerodMainContext.setConsumer(OpenModal);</code></pre>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-loading-showrouteloading-show-tip-\\\">显示主页路由区域 loading: showRouteLoading(show,tip)</h2>\\n<p>showRouteLoading 方法有一个参数，<code>show</code>:是否显示，<code>tip</code>:自定义文案</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"route-loading\\\" data-title=\\\"this.props.showRouteLoading(true)\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">class MyScript extends ZpureComponent {\\n    methods = {\\n        showRouteLoading: (e) =&gt; {\\n            this.props.showRouteLoading(true);\\n            setTimeout(() =&gt; {\\n                this.props.showRouteLoading(false);\\n            }, 2000);\\n        },\\n    };\\n    render() {\\n        return (\\n            &lt;div&gt;\\n                &lt;Button type=&quot;primary&quot; className=&quot;z-show-loading-btn&quot; onClick={this.methods.showRouteLoading}&gt;\\n                    显示路由位置的loading\\n                &lt;/Button&gt;\\n            &lt;/div&gt;\\n        );\\n    }\\n}\\nconst OutPut = ZerodMainContext.setConsumer(MyScript);\\nreturn &lt;OutPut /&gt;;</code></pre>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-loading-showmodalloading-show-modal-tip-\\\">显示右边窗口 loading: showModalLoading(show,modal,tip)</h2>\\n<p>showModalLoading 方法有两个参数，<code>show</code>:是否显示，<code>modal</code>: &quot;mainModal&quot; | 与 showRightModal()的 modal 属性对应，<code>tip</code>:自定义文案</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"modal-loading\\\" data-title=\\\"this.props.showModalLoading(true, modal);\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">class MyScript extends ZpureComponent {\\n    methods = {\\n        showModalLoading: (e, modal) =&gt; {\\n            this.props.showRightModal(true, modal);\\n            this.props.showModalLoading(true, modal);\\n            setTimeout(() =&gt; {\\n                this.props.showModalLoading(false, modal);\\n            }, 2000);\\n        },\\n    };\\n    render() {\\n        return (\\n            &lt;div&gt;\\n                &lt;Button\\n                    type=&quot;primary&quot;\\n                    className=&quot;z-show-loading-btn&quot;\\n                    onClick={(e) =&gt; {\\n                        this.methods.showModalLoading(e, &quot;mainModal&quot;);\\n                    }}\\n                &gt;\\n                    显示 mainModal 的loading\\n                &lt;/Button&gt;\\n                &lt;Button\\n                    type=&quot;primary&quot;\\n                    className=&quot;z-show-loading-btn&quot;\\n                    onClick={(e) =&gt; {\\n                        this.methods.showModalLoading(e, &quot;mainModal_top&quot;);\\n                    }}\\n                &gt;\\n                    显示 mainModal_top 的loading\\n                &lt;/Button&gt;\\n                &lt;Button\\n                    type=&quot;primary&quot;\\n                    className=&quot;z-show-loading-btn z-margin-left-20&quot;\\n                    onClick={(e) =&gt; {\\n                        this.methods.showModalLoading(e, &quot;appModal&quot;);\\n                    }}\\n                &gt;\\n                    显示 appModal 的loading\\n                &lt;/Button&gt;\\n                &lt;Button\\n                    type=&quot;primary&quot;\\n                    className=&quot;z-show-loading-btn z-margin-left-20&quot;\\n                    onClick={(e) =&gt; {\\n                        this.methods.showModalLoading(e, &quot;appModal_top&quot;);\\n                    }}\\n                &gt;\\n                    显示 appModal_top 的loading\\n                &lt;/Button&gt;\\n            &lt;/div&gt;\\n        );\\n    }\\n}\\nconst OutPut = ZerodMainContext.setConsumer(MyScript);\\nreturn &lt;OutPut /&gt;;</code></pre>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-getsidemenudata-\\\">获取左边导航栏数据: getSideMenuData()</h2>\\n<p>getSideMenuData()返回的是一个数组</p>\\n<h2 id=\\\"-getscrollinstance-modal-\\\">获取滚动条的实例：getScrollInstance(modal)</h2>\\n<p>getScrollInstance 方法有一个参数，<code>modal</code>:哪个地方的滚动条: &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-dom-getinsertlocation-el-\\\">获取某个 dom 元素所在的位置：getInsertLocation(el)</h2>\\n<p><code>const insertLocaltion = this.props.getInsertLocation(el);</code> 返回值<code>insertLocaltion</code>是 &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\\n<p>使用例子可参考如下的 getScrollAreaWrapperEl 中 demo 的代码</p>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-getscrollareawrapperel-modal-\\\">获取滚动条区域的包裹元素：getScrollAreaWrapperEl(modal)</h2>\\n<p>getScrollAreaWrapperEl 方法有一个参数，<code>modal</code>:哪个地方的滚动条: &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\\n<p>当需要某块内容绝对定位于主要内容之上，但不想受滚动条滚动时，可用这方法获取对应得<code>wrapperEl</code>，然后使用<code>ReactDOM.createPortal(内容, wrapperEl)</code>将内容插入到<code>wrapperEl</code>内</p>\\n<h3 id=\\\"const-obj-this-props-getscrollareawrapperel-mainmodal-\\\">const obj= this.props.getScrollAreaWrapperEl(&quot;mainModal&quot;)</h3>\\n<h3 id=\\\"obj-wrapperel-\\\">obj.wrapperEl : 滚动条区域的包裹元素</h3>\\n<h3 id=\\\"obj-methods\\\">obj.methods</h3>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>参数</th>\\n            <th>说明</th>\\n            <th>用法</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>setScrollAreaStyle</td>\\n            <td>设置滚动区域的style</td>\\n            <td>obj.methods.setScrollAreaStyle({height:\\\"calc(100% - 60px)\\\"})</td>\\n        </tr>\\n        <tr>\\n            <td>setScrollAreaClassName</td>\\n            <td>设置滚动区域的className</td>\\n            <td>obj.methods.setScrollAreaClassName(`z-margin-10 z-flex`})</td>\\n        </tr>\\n        <tr>\\n            <td>resetScrollArea</td>\\n            <td>恢复到调用 setScrollAreaStyle 或 setScrollAreaClassName 之前的样式</td>\\n            <td>obj.methods.resetScrollArea()</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<div class=\\\"z-demo-box\\\" data-render=\\\"myWrapperDemo\\\" data-title=\\\"例如：使用ZeditSimpleFormHOC时，在pageCofig的panelAfterRender放入了如下代码的组件\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">import React from &quot;react&quot;;\\nimport ZpureComponent from &quot;zerod/components/ZpureComponent&quot;;\\nimport ReactDom from &quot;react-dom&quot;;\\nimport { ZerodMainContext } from &quot;zerod&quot;;\\nclass MoreCofig extends ZpureComponent {\\n    componentDidMount() {\\n        // 首先得获取this.boxEl元素所在得位置\\n        const insetLocaltion = this.props.getInsertLocation(this.boxEl);\\n        // 获取insetLocaltion所在滚动区域得包裹元素\\n        this.obj = this.props.getScrollAreaWrapperEl(insetLocaltion);\\n        // 由于将 100px 高度的内容插入到滚动区域外边，\\n        // 需要将 滚动区域 的高度设置为`calc(100% - 100px)`\\n        this.obj.methods.setScrollAreaStyle({\\n            height: `calc(100% - 100px)`,\\n        });\\n        this.setState({});\\n    }\\n    componentWillUnmount() {\\n        // 组件销毁前 恢复 滚动区域的原始样式\\n        this.obj.methods.resetScrollArea();\\n    }\\n    render() {\\n        return (\\n            &lt;div className=&quot;z-panel z-margin-top-20&quot; ref={(el) =&gt; (this.boxEl = el)}&gt;\\n                &lt;div className=&quot;z-panel-body&quot;&gt;panelAfterRender&lt;/div&gt;\\n                {/* 将如下的内容插入到了 滚动条区域外面 不受滚动条影响 */}\\n                {this.obj\\n                    ? ReactDom.createPortal(\\n                            &lt;div\\n                                style={{\\n                                    position: &quot;absolute&quot;,\\n                                    bottom: &quot;0px&quot;,\\n                                    width: &quot;100%&quot;,\\n                                    height: &quot;100px&quot;,\\n                                    backgroundColor: &quot;white&quot;,\\n                                    borderTop: &quot;1px solid #ddd&quot;,\\n                                }}\\n                            &gt;\\n                                内容\\n                            &lt;/div&gt;,\\n                            this.obj.wrapperEl,\\n                      )\\n                    : null}\\n            &lt;/div&gt;\\n        );\\n    }\\n}\\nexport default ZerodMainContext.setConsumer(MoreCofig);</code></pre>\\n<h2 id=\\\"-setscrolltotop-witch-\\\">下次滚动条更新的时候，让滚动条回到顶部: setScrollToTop(witch)</h2>\\n<p>setScrollToTop 方法有一个参数，<code>witch</code>:哪个地方滚动条更新: &quot;mainRoute&quot; | 与 showRightModal()的 modal 属性对应</p>\\n<div class=\\\"z-doc-titles\\\"></div>\\n\\n<h2 id=\\\"-getuserinfo-\\\">获取用户登录信息: getUserInfo()</h2>\\n<p>ZmainHOC 的 componentDidMount 钩子中的 callback 回调注入的 userInfo 数据，可以通过 getUserInfo()获得</p>\\n<h2 id=\\\"-settemporarystorage-data-gettemporarystorage-\\\">临时存储器: setTemporaryStorage(data) 和 getTemporaryStorage()</h2>\\n<p>setTemporaryStorage(data)用于跨路由页面临时存储一些数据，data 参数是一个对象：{&quot;key&quot;:&quot;存储的数据&quot;}；getTemporaryStorage()获取当前存储器的数据</p>\\n<h2 id=\\\"-router\\\">$router</h2>\\n<p>$router:是一个对象，提供 history 和 location 属性</p>\\n\";","import React from \"react\";\r\nimport HOC from \"@/HOC/load-HOC.js\";\r\nimport { Button } from \"antd\";\r\nimport { ZerodMainContext, ZeditSimpleFormHOC } from \"zerod\";\r\nconst { AmdDocHOC, AshowDemoHOC } = HOC;\r\nimport doc from \"zerod/components/ZerodMainContext.md\";\r\n\r\nimport getConfig from \"../../HOC-doc/ZeditSimpleFormHOC-doc/pageConfig\";\r\n\r\nclass ModalContent extends React.PureComponent {\r\n\tonClick = () => {\r\n\t\tif (this.props.closeModal) {\r\n\t\t\tthis.props.showRightModal({\r\n\t\t\t\tshow: false,\r\n\t\t\t\tmodal: this.props.closeModalName,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.props.showRightModal({\r\n\t\t\t\tshow: true,\r\n\t\t\t\tmodal: this.props.nextModalName,\r\n\t\t\t\tcontent: this.props.nexModalContent,\r\n\t\t\t\tscroll: true,\r\n\t\t\t\tonTransitionend: (show) => {},\r\n\t\t\t\twrapperEl: this.props.wrapperEl,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"z-panel z-margin-bottom-15\">\r\n\t\t\t\t<div className=\"z-panel-heading\">{this.props.title ? this.props.title : \"标题\"}</div>\r\n\t\t\t\t<div className=\"z-panel-heading\">{this.props.content}</div>\r\n\t\t\t\t<div className=\"z-panel-heading\">\r\n\t\t\t\t\t<Button type=\"primary\" onClick={this.onClick}>\r\n\t\t\t\t\t\t{this.props.btnName}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nModalContent = ZerodMainContext.setConsumer(ModalContent);\r\nexport default AmdDocHOC(doc, {\r\n\t\"open-modal\": function() {\r\n\t\tclass OpenModal extends React.PureComponent {\r\n\t\t\tmethods = {\r\n\t\t\t\topenMainModal: (e) => {\r\n\t\t\t\t\te.target._modal = \"mainModal\";\r\n\t\t\t\t\te.target._render = function() {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<ModalContent\r\n\t\t\t\t\t\t\t\t\ttitle=\"这里是 mainModal 窗口\"\r\n\t\t\t\t\t\t\t\t\tcontent={`this.props.showRightModal({\r\n\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\tmodal: \"mainModal_top\",\r\n\t\t\t\t\t\t\t\t\t\tcontent: <div className=\"z-panel\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel-heading\">这里是 mainModal_top 窗口</div>\r\n\t\t\t\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t\t\t\t\tscroll: true,\r\n\t\t\t\t\t\t\t\t\t\tonTransitionend: (show) => {},\r\n\t\t\t\t\t\t\t\t\t});`}\r\n\t\t\t\t\t\t\t\t\tbtnName=\"打开下一个窗口\"\r\n\t\t\t\t\t\t\t\t\tnextModalName=\"mainModal_top\"\r\n\t\t\t\t\t\t\t\t\tnexModalContent={\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel-heading\">这里是 mainModal_top 窗口</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ModalContent\r\n\t\t\t\t\t\t\t\t\ttitle=\"这里是 mainModal 窗口\"\r\n\t\t\t\t\t\t\t\t\tcontent={`this.props.showRightModal({\r\n\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\tmodal: \"mainModal_body\",\r\n\t\t\t\t\t\t\t\t\t\tcontent: <div className=\"z-panel\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel-heading\">这里是 mainModal_body 窗口</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t\t\t\t\tscroll: true,\r\n\t\t\t\t\t\t\t\t\t\tonTransitionend: (show) => {},\r\n\t\t\t\t\t\t\t\t\t\twrapperEl: document.body,\r\n\t\t\t\t\t\t\t\t\t});`}\r\n\t\t\t\t\t\t\t\t\tbtnName=\"打开在document.body的窗口\"\r\n\t\t\t\t\t\t\t\t\twrapperEl={document.body}\r\n\t\t\t\t\t\t\t\t\tnextModalName=\"mainModal_body\"\r\n\t\t\t\t\t\t\t\t\tnexModalContent={\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel-heading\">这里是 mainModal_body 窗口</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ModalContent\r\n\t\t\t\t\t\t\t\t\ttitle=\"这里是 mainModal 窗口\"\r\n\t\t\t\t\t\t\t\t\tcontent={`this.props.showRightModal({\r\n\t\t\t\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t\t\t\t});`}\r\n\t\t\t\t\t\t\t\t\tbtnName=\"关闭当前窗口\"\r\n\t\t\t\t\t\t\t\t\tcloseModal={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// this.props.showRightModal(\r\n\t\t\t\t\t// \ttrue,\r\n\t\t\t\t\t// \t\"mainModal\",\r\n\t\t\t\t\t// \t<div className=\"z-panel\">\r\n\t\t\t\t\t// \t\t<div className=\"z-panel-heading\">标题</div>\r\n\t\t\t\t\t// \t\t<div className=\"z-panel-heading\">main子路由位置的右边窗口</div>\r\n\t\t\t\t\t// \t</div>,\r\n\t\t\t\t\t// );\r\n\t\t\t\t},\r\n\t\t\t\topenAppModal: (e) => {\r\n\t\t\t\t\te.target._modal = \"appModal\";\r\n\t\t\t\t\te.target._render = function() {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ModalContent\r\n\t\t\t\t\t\t\t\tcontent=\"这里是 appModal 窗口\"\r\n\t\t\t\t\t\t\t\tbtnName=\"打开 appModal_top 窗口\"\r\n\t\t\t\t\t\t\t\tnextModalName=\"appModal_top\"\r\n\t\t\t\t\t\t\t\tnexModalContent={\r\n\t\t\t\t\t\t\t\t\t<div className=\"z-panel\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"z-panel-heading\">这里是 appModal_top 窗口</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// this.props.showRightModal(\r\n\t\t\t\t\t// \ttrue,\r\n\t\t\t\t\t// \t\"appModal\",\r\n\t\t\t\t\t// \t<div className=\"z-panel\">\r\n\t\t\t\t\t// \t\t<div className=\"z-panel-heading\">标题</div>\r\n\t\t\t\t\t// \t\t<div className=\"z-panel-heading\">最外边的右边窗口</div>\r\n\t\t\t\t\t// \t</div>,\r\n\t\t\t\t\t// );\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\trender() {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button type=\"primary\" className=\"z-open-modal-btn\" onClick={this.methods.openMainModal}>\r\n\t\t\t\t\t\t\t打开 \"mainModal\" 窗口\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tclassName=\"z-open-modal-btn z-margin-left-20\"\r\n\t\t\t\t\t\t\tonClick={this.methods.openAppModal}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t打开 \"appModal\" 窗口\r\n\t\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst OutPut = ZerodMainContext.setConsumer(OpenModal);\r\n\t\treturn <OutPut />;\r\n\t},\r\n\t\"route-loading\": function() {\r\n\t\tclass OpenModal extends React.PureComponent {\r\n\t\t\tmethods = {\r\n\t\t\t\tshowRouteLoading: (e) => {\r\n\t\t\t\t\te.target._modal = \"mainRoute\";\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\trender() {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button type=\"primary\" className=\"z-show-loading-btn\" onClick={this.methods.showRouteLoading}>\r\n\t\t\t\t\t\t\t显示 \"mainRoute\" 的loading\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst OutPut = ZerodMainContext.setConsumer(OpenModal);\r\n\t\treturn <OutPut />;\r\n\t},\r\n\t\"modal-loading\": function() {\r\n\t\tclass OpenModal extends React.PureComponent {\r\n\t\t\tmethods = {\r\n\t\t\t\tshowModalLoading: (e, modal) => {\r\n\t\t\t\t\te.target._modal = modal;\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\trender() {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tclassName=\"z-show-loading-btn\"\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tthis.methods.showModalLoading(e, \"mainModal\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t显示 \"mainModal\" 的loading\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tclassName=\"z-show-loading-btn z-margin-left-20\"\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tthis.methods.showModalLoading(e, \"mainModal_top\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t显示 \"mainModal_top\" 的loading\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tclassName=\"z-show-loading-btn z-margin-left-20\"\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tthis.methods.showModalLoading(e, \"appModal\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t显示 \"appModal\" 的loading\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tclassName=\"z-show-loading-btn z-margin-left-20\"\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tthis.methods.showModalLoading(e, \"appModal_top\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t显示 \"appModal_top\" 的loading\r\n\t\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst OutPut = ZerodMainContext.setConsumer(OpenModal);\r\n\t\treturn <OutPut />;\r\n\t},\r\n\tmyWrapperDemo: function() {\r\n\t\tconst Com = ZeditSimpleFormHOC(getConfig(\"add\"));\r\n\t\tconst MyScript = AshowDemoHOC(<Com />, true);\r\n\t\treturn <MyScript />;\r\n\t},\r\n});\r\n","var map = {\n\t\"./area.api.js\": \"eAri\",\n\t\"./config.api.js\": \"5WI2\",\n\t\"./login.api.js\": \"O3gd\",\n\t\"./scheduling.api.js\": \"Lwzs\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Revr\";","module.exports = (__webpack_require__(\"sG4F\"))(498);","var map = {\n\t\"./AmdDocHOC/index.jsx\": \"pnNO\",\n\t\"./AshowDemoHOC/index.jsx\": \"+fre\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"jjl2\";"],"sourceRoot":""}