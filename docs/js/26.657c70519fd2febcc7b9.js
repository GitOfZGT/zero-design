(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"SX+g":function(t,n,e){t.exports=e("sG4F")(498)},WDm9:function(t,n){t.exports='<h1 id="label-value-zlabelinput">label+value输入框：ZlabelInput</h1>\n<p><code>ZlabelInput</code> 有两个输入框组成，得到的值如 {label:&quot;男&quot;,value:&quot;1&quot;}</p>\n<p>1、基本使用</p>\n<div class="z-demo-box" data-render="demo1" data-title="基本使用"></div>\n\n<pre><code class="language-jsx">class Myjavascript extends ZpureComponent {\n    state = {\n        labelValue: null,\n    };\n    onChange = (value, e) =&gt; {\n        this.setState({\n            labelValue: value,\n        });\n    };\n    render() {\n        return (\n            &lt;ZlabelInput\n                labelPlaceholder=&quot;请输入label&quot;\n                valuePlaceholder=&quot;请输入value&quot;\n                value={this.state.labelValue}\n                onChange={this.onChange}\n                style={{ width: &quot;300px&quot; }}\n            /&gt;\n        );\n    }\n}</code></pre>\n<h2 id="zlabelinput-props">ZlabelInput 的 props</h2>\n<p>可追加<code>className</code>、<code>style</code></p>\n<table>\n    <thead>\n        <tr>\n            <th>参数</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>value</td>\n            <td>两个输入框的值，{label:"",value:""}</td>\n            <td>object</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>onChange</td>\n            <td>输入框内容变化时的回调</td>\n            <td>(value,e)=>{}</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>labelPlaceholder</td>\n            <td>label输入框没有值时显示的内容</td>\n            <td>string</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>valuePlaceholder</td>\n            <td>value输入框没有值时显示的内容</td>\n            <td>string</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>disabled</td>\n            <td>是否禁用状态，默认false</td>\n            <td>boolean</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td>labelSpan</td>\n            <td>label输入框占总宽度的格数 1~24</td>\n            <td>number</td>\n            <td>10</td>\n        </tr>\n        <tr>\n            <td>valueSpan</td>\n            <td>value输入框占总宽度的格数 1~24</td>\n            <td>number</td>\n            <td>14</td>\n        </tr>\n        <tr>\n            <td>size</td>\n            <td>输入框的尺寸</td>\n            <td>default | small | large</td>\n            <td>default</td>\n        </tr>\n        <tr>\n            <td>sync</td>\n            <td>是否label输入和value输入同步</td>\n            <td>boolean</td>\n            <td>false</td>\n        </tr>\n    </tbody>\n</table>\n'},jjl2:function(t,n,e){var l={"./AmdDocHOC/index.jsx":"pnNO","./AshowDemoHOC/index.jsx":"+fre"};function a(t){var n=d(t);return e(n)}function d(t){if(!e.o(l,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return l[t]}a.keys=function(){return Object.keys(l)},a.resolve=d,t.exports=a,a.id="jjl2"},yzGP:function(t,n,e){"use strict";e.r(n);var l=e("qcaH"),a=e("MhH0"),d=e.n(a),r=e("FcZB"),o=e.n(r),u=e("Ratc"),s=e.n(u),c=e("0j8+"),h=e.n(c),i=e("0kOG"),b=e.n(i),p=e("/sSO"),v=e("uqIC"),f=e.n(v),g=e("ebhq"),m=e("WDm9"),C=e.n(m),q=(p.g.addClass,p.g.removeClass,g.a.AmdDocHOC);n.default=q(C.a,{demo1:function(){var t=function(t){function n(){var t,e;d()(this,n);for(var l=arguments.length,a=new Array(l),r=0;r<l;r++)a[r]=arguments[r];return(e=s()(this,(t=h()(n)).call.apply(t,[this].concat(a)))).state={labelValue:null},e.onChange=function(t,n){e.setState({labelValue:t})},e}return b()(n,t),o()(n,[{key:"render",value:function(){return f.a.createElement(l.a,{labelPlaceholder:"请输入label",valuePlaceholder:"请输入value",value:this.state.labelValue,onChange:this.onChange,style:{width:"300px"}})}}]),n}(f.a.PureComponent);return f.a.createElement(t,null)}})}}]);
//# sourceMappingURL=26.657c70519fd2febcc7b9.js.map