{"version":3,"sources":["webpack:///delegated ./node_modules/_viewerjs@1.3.3@viewerjs/dist/viewer.js from dll-reference _dll_vendor_e823eb2f1294e4241445","webpack:///./node_modules/zerod/components/ZrightModal/doc.md","webpack:///./src/views/Main/component-doc/ZrightModal-doc/index.jsx","webpack:///./src/HOC sync index.jsx$"],"names":["module","exports","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_HOC_load_HOC_js__WEBPACK_IMPORTED_MODULE_1__","zerod_components_ZrightModal_doc_md__WEBPACK_IMPORTED_MODULE_2__","zerod_components_ZrightModal_doc_md__WEBPACK_IMPORTED_MODULE_2___default","AmdDocHOC","HOC","AshowDemoHOC","doc","demo1","MyScript","a","createElement","className","map","./AmdDocHOC/index.jsx","./AshowDemoHOC/index.jsx","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve"],"mappings":"iFAAAA,EAAAC,QAAAC,EAAA,iCCAAF,EAAAC,QAAA,iuHCAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,QAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,QAAAO,EAAAP,EAAA,QAAAQ,EAAAR,EAAAK,EAAAE,GAEQE,EAA4BC,IAA5BD,UAAWE,EAAiBD,IAAjBC,aAEJF,YAAUG,KACxBC,MAAO,WACN,IAAMC,EAAWH,EAChBP,EAAAW,EAAAC,cAAA,OAAKC,UAAU,gBACdb,EAAAW,EAAAC,cAAA,OAAKC,UAAU,WACdb,EAAAW,EAAAC,cAAA,OAAKC,UAAU,8BAAf,cAGF,GAED,OAAOb,EAAAW,EAAAC,cAACF,EAAD,+BCdT,IAAAI,GACAC,wBAAA,OACAC,2BAAA,QAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAtB,EAAAuB,GAEA,SAAAC,EAAAF,GACA,IAAAtB,EAAAyB,EAAAP,EAAAI,GAAA,CACA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAR,EAAAI,GAEAD,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAAX,IAEAG,EAAAU,QAAAP,EACA1B,EAAAC,QAAAsB,EACAA,EAAAE,GAAA","file":"js/32.5057bfdf46c86b074400.js","sourcesContent":["module.exports = (__webpack_require__(\"sG4F\"))(498);","module.exports = \"<h1 id=\\\"-zrightmodal\\\">右抽屉窗口：ZrightModal</h1>\\n<p><code>ZrightModal</code>是从右边弹出的一种窗口模式，可以减少多层路由跳转的一种交互方式</p>\\n<p>如果是使用<code>ZmainHOC</code>实现了主页布局，基本上不再需要单独使用<code>ZrightModal</code>，请查看 上下文的<code>ZerodMainContext</code></p>\\n<p>1、基本使用</p>\\n<div class=\\\"z-demo-box\\\" data-render=\\\"demo1\\\" data-title=\\\"以下是截取了`ZmainHOC `中使用`Zlayout.Zbody + ZrightModal`的部分代码展示\\\"></div>\\n\\n<pre><code class=\\\"language-jsx\\\">&lt;Zlayout.Zbody\\n    className={`${cssClass[&quot;z-main-body&quot;]} z-scroll-color app-body`}\\n    scroll\\n    getScrollInstance={(instance) =&gt; (this.mainBodyScrollInstance = instance)}\\n    insertToScrollWraper={\\n        &lt;Zlayout.Template&gt;\\n            &lt;ZpageLoading showLoading={this.state.isShowLoading} /&gt;\\n            &lt;ZrightModal\\n                show={this.state.isShowRightModal} //打开modal的状态\\n                scroll //启用滚动条\\n                getScrollInstance={(instance) =&gt; (this.rightBodyScrollInstance = instance)} //获取滚动条实例\\n                showLoading={this.state.isShowModalLoading} //显示loading的状态\\n                onClose={() =&gt; {\\n                    this.methods.showRightModal(false); //关闭modal\\n                }}\\n                onTransitionend={this.methods.afterModalTransitionend} //modal过渡动画执行完之后\\n            &gt;\\n                {this.state.rightModalContent}\\n            &lt;/ZrightModal&gt;\\n        &lt;/Zlayout.Template&gt;\\n    }\\n&gt;\\n    &lt;section&gt;\\n        &lt;Switch&gt;{this.navRoutes}&lt;/Switch&gt;\\n    &lt;/section&gt;\\n&lt;/Zlayout.Zbody&gt;</code></pre>\\n<h2 id=\\\"zrightmodal-props\\\">ZrightModal 的 props</h2>\\n<table>\\n    <thead>\\n        <tr>\\n            <th>参数</th>\\n            <th>说明</th>\\n            <th>类型</th>\\n            <th>默认值</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>children</td>\\n            <td>即this.props.children</td>\\n            <td>any</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>show</td>\\n            <td>是否打开ZrightModal</td>\\n            <td>boolean</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>width</td>\\n            <td>窗口宽度</td>\\n            <td>string</td>\\n            <td>90%</td>\\n        </tr>\\n        <tr>\\n            <td>zIndex</td>\\n            <td>层级</td>\\n            <td>number</td>\\n            <td>999</td>\\n        </tr>\\n        <tr>\\n            <td>onClose</td>\\n            <td>点击关闭按钮的事件，()=>{}</td>\\n            <td>boolean</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>showLoading</td>\\n            <td>是否显示loading , 可以不使用这个属性，通过 ref 取得 ZpageLoading 的实例调用 methods.showLoading(show) ,也可以用 exportMethods 导出的参数调用</td>\\n            <td>boolean</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>scroll</td>\\n            <td>是否启用滚动条</td>\\n            <td>boolean</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>getScrollInstance</td>\\n            <td>获取滚动条的实例，scroll=true时有效</td>\\n            <td>function</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>onTransitionend</td>\\n            <td>当打开或关闭ZrightModal的过渡动画完成后执行的钩子</td>\\n            <td>function</td>\\n            <td>--</td>\\n        </tr>\\n        <tr>\\n            <td>exportMethods</td>\\n            <td>在 componentDidMount 导出组件内部可调用的方法，methods 请往下看  </td>\\n            <td>function(methods){}</td>\\n            <td>--</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<h2 id=\\\"zrightmodal-methods\\\">ZrightModal 的 methods</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>参数</th>\\n<th>说明</th>\\n<th>使用</th>\\n<th>返回值类型</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td>showLoading</td>\\n<td>ZpageLoading 在没有 showLoading 属性情况下使用</td>\\n<td>methods.showLoading(show)</td>\\n<td>--</td>\\n</tr>\\n</tbody></table>\\n\";","import React from \"react\";\r\nimport HOC from \"@/HOC/load-HOC.js\";\r\nconst { AmdDocHOC, AshowDemoHOC } = HOC;\r\nimport doc from \"zerod/components/ZrightModal/doc.md\";\r\nexport default AmdDocHOC(doc, {\r\n\tdemo1: function() {\r\n\t\tconst MyScript = AshowDemoHOC(\r\n\t\t\t<div className=\"z-padding-20\">\r\n\t\t\t\t<div className=\"z-panel\">\r\n\t\t\t\t\t<div className=\"z-panel-body z-text-center\">我就是这个窗口</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>,\r\n\t\t\tfalse,\r\n\t\t);\r\n\t\treturn <MyScript />;\r\n\t},\r\n});\r\n","var map = {\n\t\"./AmdDocHOC/index.jsx\": \"pnNO\",\n\t\"./AshowDemoHOC/index.jsx\": \"+fre\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"jjl2\";"],"sourceRoot":""}