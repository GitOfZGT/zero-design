(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"+fre":function(e,n,t){"use strict";t.r(n);t("E+SP");var r=t("uNIX"),o=t("Ds8w"),a=t.n(o),i=t("6ato"),d=t.n(i),s=t("2dj7"),u=t.n(s),l=t("Xtzg"),c=t.n(l),p=t("0dFU"),m=t.n(p),g=t("bRCM"),f=t.n(g);n.default={name:"AshowDemoHOC",HOC:function(e,n){return function(t){function o(){return d()(this,o),c()(this,(o.__proto__||a()(o)).apply(this,arguments))}return m()(o,t),u()(o,[{key:"componentDidMount",value:function(){var t=this.boxEl.querySelector(".z-open-modal-btn");t._scroll=n,t._render=function(){return e}}},{key:"render",value:function(){var e=this;return f.a.createElement("div",{ref:function(n){e.boxEl=n}},f.a.createElement(r.a,{type:"primary",className:"z-open-modal-btn"},"查看Demo"))}}]),o}(f.a.Component)}}},"0cU6":function(e,n,t){"use strict";t.r(n);var r=t("6ZY3"),o=t.n(r),a=t("bS4n"),i=t.n(a),d=t("unDg"),s=t.n(d),u=(t("FKBv"),t("5rXq")),l=(t("kg8/"),t("QiDu")),c=(t("E+SP"),t("uNIX")),p=t("bRCM"),m=t.n(p),g=t("ebhq"),f=t("XBpp"),v=t.n(f),h=t("3P0Q"),q=t("tmCC"),b=t("40mi"),y=t("WiDR"),C=g.a.AmdDocHOC,w=g.a.AshowDemoHOC;function E(e){var n=[{key:"quick",label:"快捷操作",render:function(e){return m.a.createElement(c.a,{onClick:function(){e.setFieldsValue({confProperty:b.a.default})}},"模板配置")}},{key:"confProperty",label:"默认配置",render:function(e){return m.a.createElement(l.a.TextArea,{rows:15,placeholder:"请输入默认配置",ref:function(e){q.v.scrollDisableWheel(e.textAreaRef)}})},options:{rules:[{required:!0,message:"不能为空。"}]}}],t=[{key:"serviceCode",label:"服务编码",render:function(e){return m.a.createElement(l.a,{placeholder:"请输入服务编码"})},options:{rules:[{required:!0,message:"不能为空。"}]}},{key:"serviceName",label:"服务名称",render:function(e){return m.a.createElement(l.a,{placeholder:"请输入服务名称"})},options:{rules:[{required:!0,message:"不能为空。"}]}},{key:"serviceRemark",label:"服务说明",render:function(e){return m.a.createElement(l.a.TextArea,{rows:2,placeholder:"请输入服务说明"})},options:{rules:[{required:!0,message:"不能为空。"}]}},{key:"servicePort",detailKey:"serviceProt",label:"端口号",render:function(e){return m.a.createElement(u.a,{min:11110,max:65535,step:10})},options:{rules:[{required:!0,message:"不能为空。"}]}}];"add"===e&&(t=[].concat(s()(t),n));var r={insertLocation:"mainModal",pageHeader:i()({show:!0},h.a,{breadcrumbRoutes:[]}),form:{type:e,panelHeader:"add"==e?"新增服务信息":"修改服务信息",items:t,detailApiInterface:function(e,n){return y.a.config.getServiceDetail({serviceId:e})},submitApiInterface:function(n,t){return"add"===e?y.a.config.addService(o()({},n,{environment:"default"})):y.a.config.updateService(o()({},n,{serviceId:t.detailId}))}}};return"update"===e&&(r.moreContentRender=function(e,n){return m.a.createElement("div",{className:"z-panel z-margin-top-20"},m.a.createElement("div",{className:"z-panel-body"},"更多内容"))}),r}n.default=C(v.a,{demo1:function(){var e=Object(q.f)(E("add")),n=w(m.a.createElement(e,null),!0);return m.a.createElement(n,null)},demo2:function(){var e=Object(q.f)(E("update")),n=w(m.a.createElement(e,{detailId:"21"}),!0);return m.a.createElement(n,null)}})},"1xVk":function(e,n,t){"use strict";var r=t("tmCC");n.a=function(e,n,t,o){return n.includes("/sys")||(n="/webapi"+n),r.v.httpAjax(e,n,t,o)}},"3P0Q":function(e,n,t){"use strict";var r=t("bRCM"),o=t.n(r);n.a={trademark:function(){return o.a.createElement("div",{className:"z-padding-top-10"},o.a.createElement("img",{src:"https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png",width:"80",className:"z-margin-right-18"}))},breadcrumbRoutes:[{path:"config",name:"案例",link:!1},{path:"serviceWithTableList",name:"表格列表",link:!0}],title:"服务器配置",content:"微服务的定义，维护其配置。除了Eureka Service及Config Center两种服务不在这里配置，其他服务都必须在此定义和配置！",rightMoreContent:o.a.createElement("div",null,"右边内容")}},"40mi":function(e,n,t){"use strict";n.a={default:"#Web服务器相关配置\nserver.port=11110\nserver.context-path=/\n#数据连接配置\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\nspring.datasource.druid.username=user\nspring.datasource.druid.password=admin@1\nspring.datasource.druid.driverClassName=com.mysql.jdbc.Driver\nspring.datasource.druid.initial-size=5\nspring.datasource.druid.maxActive=10\nspring.datasource.druid.minIdle=10\nspring.datasource.druid.validation-query=SELECT 'x' from dual\nspring.datasource.druid.test-while-idle=true\nspring.datasource.druid.time-between-eviction-runs-millis=10000\nspring.datasource.druid.min-evictable-idle-time-millis=300000\nspring.datasource.druid.poolPreparedStatements=true\nspring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20\nspring.datasource.druid.filters=stat,slf4j\nspring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000\nspring.datasource.druid.useGlobalDataSourceStat=true\n#Redis连接\nspring.redis.database=0\nspring.redis.host=172.16.8.18\nspring.redis.port=6379\nspring.redis.password=hyzs\nspring.redis.pool.maxActive=11\nspring.redis.pool.maxIdle=11\nspring.redis.pool.maxWait=-1\nspring.redis.pool.minIdle=0\n#json格式化\nspring.jackson.date-format=yyyy-MM-dd HH:mm:ss\nspring.jackson.time-zone=Asia/Shanghai\n#session共享\nspring.session.store-type=redis\n#文件上传\nspring.http.multipart.enabled=true\nspring.http.multipart.max-file-size=10MB\nspring.http.multipart.max-request-size=10MB\n#mybatis\nmybatis.configuration.mapUnderscoreToCamelCase=true\nmybatis.configuration.jdbcTypeForNull=NULL\n#日志\nlogging.level.com.hyzs=DEBUG\n#关闭\nendpoints.shutdown.enabled=true\nendpoints.shutdown.sensitive=false\n#分布助手配置\nlogging.pagehelper.helper-dialect=mysql\nlogging.pagehelper.reasonable=true\nlogging.pagehelper.support-methods-arguments=true\nlogging.pagehelper.params=count=countSql",dev:"#开发环境配置\n#数据连接配置\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\nspring.datasource.druid.username=user\nspring.datasource.druid.password=admin@1\nspring.datasource.druid.initial-size=5\nspring.datasource.druid.maxActive=10\nspring.datasource.druid.minIdle=10\n\n#注册中心地址\neureka.client.service-url.defaultZone=http://172.16.8.20:8761/eureka\n\n#Redis连接\nspring.redis.database=0\nspring.redis.host=172.16.8.18\nspring.redis.port=6379\nspring.redis.password=hyzs\nspring.redis.pool.maxActive=11\nspring.redis.pool.maxIdle=11\nspring.redis.pool.maxWait=-1\nspring.redis.pool.minIdle=0",test:"#测试环境配置\n#数据连接配置\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\nspring.datasource.druid.username=user\nspring.datasource.druid.password=admin@1\nspring.datasource.druid.initial-size=5\nspring.datasource.druid.maxActive=10\nspring.datasource.druid.minIdle=10\n\n#注册中心地址\neureka.client.service-url.defaultZone=http://172.16.8.20:8761/eureka\n\n#Redis连接\nspring.redis.database=0\nspring.redis.host=172.16.8.18\nspring.redis.port=6379\nspring.redis.password=hyzs\nspring.redis.pool.maxActive=11\nspring.redis.pool.maxIdle=11\nspring.redis.pool.maxWait=-1\nspring.redis.pool.minIdle=0",prod:"#生产环境配置\n#数据连接配置\nspring.datasource.druid.url=jdbc:mysql://172.16.8.18:3306/uap?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull\nspring.datasource.druid.username=user\nspring.datasource.druid.password=admin@1\nspring.datasource.druid.initial-size=5\nspring.datasource.druid.maxActive=10\nspring.datasource.druid.minIdle=10\n\n#注册中心地址\neureka.client.service-url.defaultZone=http://172.16.8.20:8761/eureka\n\n#Redis连接\nspring.redis.database=0\nspring.redis.host=172.16.8.18\nspring.redis.port=6379\nspring.redis.password=hyzs\nspring.redis.pool.maxActive=11\nspring.redis.pool.maxIdle=11\nspring.redis.pool.maxWait=-1\nspring.redis.pool.minIdle=0"}},"5WI2":function(e,n,t){"use strict";t.r(n);var r=t("1xVk");n.default={name:"config",apis:{getServiceList:function(e){return Object(r.a)("post","/v1.0/config/center/pageServiceInfo",e)},deleteService:function(e){return Object(r.a)("post","/v1.0/config/center/deleteServiceInfo",e)},addService:function(e){return Object(r.a)("post","/v1.0/config/center/addServiceConfig",e)},updateService:function(e){return Object(r.a)("post","/v1.0/config/center/updateServiceInfo",e)},getServiceDetail:function(e){return Object(r.a)("post","/v1.0/config/center/getServiceConfigDetail",e)},updateServiceConfig:function(e){return Object(r.a)("post","/v1.0/config/center/updateConfigProperty",e)}}}},O3gd:function(e,n,t){"use strict";t.r(n);var r=t("1xVk");n.default={name:"login",apis:{getUserInfo:function(){return Object(r.a)("post","/loginUserInfo")}}}},Revr:function(e,n,t){var r={"./area.api.js":"eAri","./config.api.js":"5WI2","./login.api.js":"O3gd"};function o(e){var n=a(e);return t(n)}function a(e){var n=r[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}o.keys=function(){return Object.keys(r)},o.resolve=a,e.exports=o,o.id="Revr"},WiDR:function(e,n,t){"use strict";var r=t("Q2cO"),o=t.n(r),a=t("Revr"),i={},d=[];a.keys().forEach(function(e){var n=void 0;try{n=a(e).default}catch(n){throw Error(e+":"+n)}if(void 0===n||"object"!==(void 0===n?"undefined":o()(n)))throw Error(e+":内没有 export default 或者export default格式有误 ");if("object"!=o()(n.apis))throw Error(e+":apis不是object");var t=n.name;if("string"!=typeof t)throw Error(e+":缺少name属性");if(t=t.trim(),d.includes(t))throw Error(e+":"+t+"此命名空间已被使用");d.push(t),i[t]=n.apis}),n.a=i},XBpp:function(e,n){e.exports='<h1 id="-zeditsimpleformhoc">编辑页面：ZeditSimpleFormHOC</h1>\n<p><code>ZeditSimpleFormHOC</code>是一个函数，传入<code>pageConfig</code>参数配置，返回一个表单编辑结构的组件</p>\n<p>1、新增表单</p>\n<div class="z-demo-box" data-render="demo1" data-title="新增表单"></div>\n\n<pre><code class="language-jsx">import React from &quot;react&quot;;\nimport { Input, InputNumber, Button } from &quot;antd&quot;;\nimport { ZeditSimpleFormHOC, zTool } from &quot;zerod&quot;;\nimport defaultConfigData from &quot;@/mock/serviceDefaultConfigData.js&quot;;\n// 后台接口\nimport api from &quot;@/App.api.js&quot;;\nconst pageCofig = {\n    insertLocation: &quot;mainModal&quot;,\n    pageHeader: {\n        show: true,\n        ...pageHeader,\n        breadcrumbRoutes: [],\n    },\n    form: {\n        type: &quot;add&quot;,\n        panelHeader: &quot;新增服务信息&quot;,\n        items: [\n            {\n                key: &quot;serviceCode&quot;,\n                label: &quot;服务编码&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input placeholder=&quot;请输入服务编码&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;serviceName&quot;,\n                label: &quot;服务名称&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input placeholder=&quot;请输入服务名称&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;serviceRemark&quot;,\n                label: &quot;服务说明&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input.TextArea rows={2} placeholder=&quot;请输入服务说明&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;servicePort&quot;,\n                detailKey: &quot;serviceProt&quot;,\n                label: &quot;端口号&quot;,\n                render: (form) =&gt; {\n                    return &lt;InputNumber min={11110} max={65535} step={10} /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;quick&quot;,\n                label: &quot;快捷操作&quot;,\n                render: (form) =&gt; {\n                    return (\n                        &lt;Button\n                            onClick={() =&gt; {\n                                form.setFieldsValue({\n                                    confProperty: defaultConfigData.default,\n                                });\n                            }}\n                        &gt;\n                            模板配置\n                        &lt;/Button&gt;\n                    );\n                },\n            },\n            {\n                key: &quot;confProperty&quot;,\n                label: &quot;默认配置&quot;,\n                render: (form) =&gt; {\n                    return (\n                        &lt;Input.TextArea\n                            rows={15}\n                            placeholder=&quot;请输入默认配置&quot;\n                            ref={(el) =&gt; {\n                                zTool.scrollDisableWheel(el.textAreaRef);\n                            }}\n                        /&gt;\n                    );\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n        ],\n        detailApiInterface: (id, props) =&gt; {\n            return api.config.getServiceDetail({ serviceId: id });\n        },\n        submitApiInterface: (values, props) =&gt; {\n            return api.config.addService(Object.assign({}, values, { environment: &quot;default&quot; }));\n        },\n    },\n};\nexport default ZeditSimpleFormHOC(pageConfig);</code></pre>\n<p>2、修改表单</p>\n<div class="z-demo-box" data-render="demo2" data-title=\'form.type="update"时为修改表单,这时才会调用form.detailApiInterface钩子，使用moreContentRender函数在页面末端追加更多内容\'></div>\n\n<pre><code class="language-jsx">import React from &quot;react&quot;;\nimport { Input, InputNumber, Button } from &quot;antd&quot;;\nimport { ZeditSimpleFormHOC, zTool } from &quot;zerod&quot;;\nimport defaultConfigData from &quot;@/mock/serviceDefaultConfigData.js&quot;;\n// 后台接口\nimport api from &quot;@/App.api.js&quot;;\nconst pageCofig = {\n    insertLocation: &quot;mainModal&quot;,\n    pageHeader: {\n        show: true,\n        ...pageHeader,\n        breadcrumbRoutes: [],\n    },\n    form: {\n        type: &quot;update&quot;,\n        panelHeader: &quot;修改服务信息&quot;,\n        items: [\n            {\n                key: &quot;serviceCode&quot;,\n                label: &quot;服务编码&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input placeholder=&quot;请输入服务编码&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;serviceName&quot;,\n                label: &quot;服务名称&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input placeholder=&quot;请输入服务名称&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;serviceRemark&quot;,\n                label: &quot;服务说明&quot;,\n                render: (form) =&gt; {\n                    return &lt;Input.TextArea rows={2} placeholder=&quot;请输入服务说明&quot; /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n            {\n                key: &quot;servicePort&quot;,\n                detailKey: &quot;serviceProt&quot;,\n                label: &quot;端口号&quot;,\n                render: (form) =&gt; {\n                    return &lt;InputNumber min={11110} max={65535} step={10} /&gt;;\n                },\n                //antd的 form.getFieldDecorator的options\n                options: {\n                    //验证规则\n                    rules: [\n                        {\n                            required: true,\n                            message: &quot;不能为空。&quot;,\n                        },\n                    ],\n                },\n            },\n        ],\n        detailApiInterface: (id, props) =&gt; {\n            return api.config.getServiceDetail({ serviceId: id });\n        },\n        submitApiInterface: (values, props) =&gt; {\n            return api.config.updateService(Object.assign({}, values, { serviceId: props.detailId }));\n        },\n    },\n    moreContentRender: function(detail, panel) {\n        return (\n            &lt;div className=&quot;z-panel z-margin-top-20&quot;&gt;\n                &lt;div className=&quot;z-panel-body&quot;&gt;更多内容&lt;/div&gt;\n            &lt;/div&gt;\n        );\n    },\n};\nexport default ZeditSimpleFormHOC(pageConfig);</code></pre>\n<h2 id="pageconfig">pageConfig</h2>\n<table>\n    <thead>\n        <tr>\n            <th>参数</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>insertLocation</td>\n            <td>这个组件渲染在的位置，mainRoute:main子路由，mainModal:在main子路由区域打开的右边窗口，appModal:在最外层打开的右边窗口</td>\n            <td>mainRoute | mainModal | appModal</td>\n            <td>mainRoute</td>\n        </tr>\n        <tr>\n            <td>pageHeader</td>\n            <td>页头内容,除了show属性，其他属性同 组件/ZpageHeader的Props</td>\n            <td>object</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>form</td>\n            <td>表单配置，请看下面的pageConfig.form</td>\n            <td>object</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>moreContentRender</td>\n            <td>在表单之后添加更多内容的渲染函数,有两个参数detail：detailApiInterface接口获取的详情数据、panel:组件的实例对象</td>\n            <td>(detail,tool) =>{return;}</td>\n            <td>--</td>\n        </tr>\n    </tbody>\n</table>\n\n<h2 id="pageconfig-form">pageConfig.form</h2>\n<table>\n    <thead>\n        <tr>\n            <th>参数</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>type</td>\n            <td>表单类型：新增操作 | 修改操作</td>\n            <td>add | update</td>\n            <td>mainRoute</td>\n        </tr>\n        <tr>\n            <td>panelHeader</td>\n            <td>列表面板的头部内容,为null则不显示面板头部</td>\n            <td>string | function(){return ;}</td>\n            <td>列表</td>\n        </tr>\n        <tr>\n            <td>items</td>\n            <td>表单的渲染项，如果为null则不显示查询表单，map结构：{key:表单控件value对应的字段名,lable:表单控件名称,render:渲染表单控件的函数(form,panel)=>{return;},options:<a href="https://ant.design/components/form-cn/" target="_blank">Antd的表单中getFieldDecorator函数的options参数</a>}</td>\n            <td>array[object] | null</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>detailApiInterface</td>\n            <td>获取详细数据的后台接口函数,必须返回Promise,只有form.type="update"才自动调用,参数有 detailId : ZeditSimpleFormHOC(pageConfig)得到组件的detailId属性，props ：ZeditSimpleFormHOC(pageConfig)得到组件的其他属性</td>\n            <td>(detailId, props) =>{return Promise;}</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>submitApiInterface</td>\n            <td>保存数据的后台接口函数,即保存按钮点击触发的函数,必须返回Promise,参数有：values:表单的值，props ：ZeditSimpleFormHOC(pageConfig)得到组件的其他属性</td>\n            <td>(values, props) =>{return Promise;}</td>\n            <td>--</td>\n        </tr>\n        <tr>\n            <td>showSubmitBtn</td>\n            <td>是否显示提交按钮</td>\n            <td>boolean</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td>afterSubmitSuccess</td>\n            <td>保存数据成功的回调 closeRightModal是一个关闭modal的函数，values：表单的值</td>\n            <td>(closeRightModal, values) =>{}</td>\n            <td>--</td>\n        </tr>\n    </tbody>\n</table>\n'},eAri:function(e,n,t){"use strict";t.r(n);var r=t("1xVk");n.default={name:"area",apis:{getChildList:function(e){return Object(r.a)("get","/mzfwjg/sys/areas/"+e.id+"/children")}}}},ebhq:function(e,n,t){"use strict";var r=t("Q2cO"),o=t.n(r),a=t("jjl2"),i={},d=[];a.keys().forEach(function(e){var n=void 0;try{n=a(e).default}catch(n){throw Error(e+":"+n)}if(void 0===n||"object"!==(void 0===n?"undefined":o()(n)))throw Error(e+":内没有 export default 或者export default格式有误 ");if("function"!=typeof n.HOC)throw Error(e+":HOC有误");var t=n.name;if("string"!=typeof t)throw Error(e+":缺少name属性");if(!/^A[A-z0-9]*HOC$/.test(t))throw Error(e+":name属性请以A开头HOC结尾");if(t=t.trim(),d.includes(t))throw Error(e+":"+t+"此HOC名称已被使用");d.push(t),i[t]=n.HOC}),n.a=i},jjl2:function(e,n,t){var r={"./AmdDocHOC/index.jsx":"pnNO","./AshowDemoHOC/index.jsx":"+fre"};function o(e){var n=a(e);return t(n)}function a(e){var n=r[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}o.keys=function(){return Object.keys(r)},o.resolve=a,e.exports=o,o.id="jjl2"},pnNO:function(e,n,t){"use strict";t.r(n);var r=t("Ds8w"),o=t.n(r),a=t("6ato"),i=t.n(a),d=t("2dj7"),s=t.n(d),u=t("Xtzg"),l=t.n(u),c=t("0dFU"),p=t.n(c),m=t("bRCM"),g=t.n(m),f=t("XSGX"),v=t.n(f),h=(t("17x9"),t("tmCC")),q=t("tW/l"),b=t.n(q),y=Object(h.p)();n.default={name:"AmdDocHOC",HOC:function(e,n){var t=function(t){function r(){var e,n,t,a;i()(this,r);for(var d=arguments.length,s=Array(d),u=0;u<d;u++)s[u]=arguments[u];return n=t=l()(this,(e=r.__proto__||o()(r)).call.apply(e,[this].concat(s))),t.renderEls=[],a=n,l()(t,a)}return p()(r,t),s()(r,[{key:"componentWillUnmount",value:function(){this.renderEls.forEach(function(e){v.a.unmountComponentAtNode(e)})}},{key:"componentDidMount",value:function(){var e=this,t=this.mdEl.querySelectorAll(".z-demo-box");Array.prototype.slice.call(t).forEach(function(t){if(n&&"function"==typeof n[t.dataset.render]){var r=t.nextElementSibling;r=r&&"pre"==r.localName?r:null;var o=n[t.dataset.render]();e.renderEls.push(t),v.a.render(o,t,function(){var e=document.createElement("div");e.className="z-demo-footer";var n=document.createElement("div");n.className="z-demo-code-btn z-flex-space-between";var o=document.createElement("div");o.className="z-demo-code";var a=document.createElement("img");a.addEventListener("click",function(){a.src=a.open?"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg":"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg",o.style.height=a.open?"0px":"auto",a.open=!a.open},!1),a.src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg";var i=document.createElement("span");i.innerText=t.dataset.title?t.dataset.title:"",n.appendChild(i),r&&n.appendChild(a),e.appendChild(n),r&&o.appendChild(r),e.appendChild(o),t.appendChild(e)})}}),this.mdEl.addEventListener("click",function(n){"string"==typeof n.target.className&&n.target.className.includes("z-open-modal-btn")&&setTimeout(function(){"function"==typeof n.target._render&&e.props.showRightModal({show:!0,modal:n.target._modal?n.target._modal:"mainModal",content:n.target._render(),scroll:n.target._scroll,onTransitionend:function(e){}})},10)},!1),this.mdEl.addEventListener("click",function(n){"string"==typeof n.target.className&&n.target.className.includes("z-show-loading-btn")&&setTimeout(function(){if("mainRoute"==n.target._modal)e.props.showRouteLoading(!0),setTimeout(function(){e.props.showRouteLoading(!1)},2e3);else{var t=n.target._modal?n.target._modal:"mainModal";e.props.showRightModal(!0,t,null,!0),e.props.showModalLoading(!0,t),setTimeout(function(){e.props.showModalLoading(!1,t)},2e3)}},10)})}},{key:"render",value:function(){var n=this;return g.a.createElement(y,{pageHeader:{show:!1},hasBodyPadding:!1},g.a.createElement("div",{className:"z-panel "+b.a["z-md-doc"],ref:function(e){return n.mdEl=e}},g.a.createElement("div",{className:"z-panel-body"},g.a.createElement(h.d,{mode:"html"},e))))}}]),r}(g.a.Component);return h.h.setConsumer(t)}}}}]);